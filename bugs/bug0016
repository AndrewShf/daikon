Version:      $Id$
Owner:        adonovan <adonovan@lcs.mit.edu>, mernst <mernst@lcs.mit.edu>
Tool:         dfej
Summary:      anomalies in trace output
Severity:     Vexing
Status:       Closed
Reproducible: NotSure
Description:

[mistere]: This is a duplicate of 13; furthermore, I fixed this in CVS
dfej a while ago.  Alan, you can close this bug out.

[adonovan, quoting mernst on 10-Feb-02]
With the new dfej, in testcase RatTermVec, variable this.wrapped seems to
have disappeared from ESC output, though this.wrapped[] has appeared in it.
Is this intentional?  (I think we would like to see both.)

Here is a sample diff (from my
$inv/tests/esc-experiments/RatTermVec/rattermvec.txt-esc.diff):

 ===========================================================================
 PolyCalc.RatTermVec:::OBJECT
-    Variables: this.wrapped
-this.wrapped != null
+    Variables: this.wrapped[] this.wrapped[].class size(this.wrapped[]) size(this.wrapped[])-1
+this.wrapped.containsNull == false
+(\forall int i; (0 <= i && i <= this.wrapped.length-1) ==> (\typeof(this.wrapped[i]) == \type(PolyCalc.RatTerm)))

The standard daikon output also lost invariants over this.wrapped while
gaining them over this.wrapped[]; my
$inv/tests/esc-experiments/RatTermVec/rattermvec.txt-daikon.diff contains:

 ===========================================================================
 PolyCalc.RatTermVec:::OBJECT
-this.wrapped != null
+this.wrapped[] elements != null
+this.wrapped[].class elements == "PolyCalc.RatTerm"

--
$Log$
Revision 1.1  2002-03-12 04:50:54  adonovan
repairing repository broken during attemp to move it today... :-(

Revision 1.3  2002/03/07 07:42:13  adonovan
changed bug0016

Revision 1.2  2002/03/07 07:40:19  mistere
changed bug0016

Revision 1.1  2002/03/07 06:46:45  adonovan
new bug0016

