Version:      $Id$
Owner:        tohn <tohn>, Jeremy <mistere>
Cc:           
Tool:         Daikon V3
Summary:      Stack overflow with certain derived variables or invariants?
Severity:     Vexing
Status:       New
Reproducible: Yes
Description:

I do not yet know the exact cause for this bug, but there is a stack
overflow exception that's thrown when the dtrace/decls files in

~tohn/temp/bugo

are run with the given daikon-options.txt config file.  Without the
config file, Daikon V3 runs just fine.  V2 runs fine on both.  The
config file was from my Banking examples, so it made use of the concat
and join derived variables, which might not have been tested in V3
yet.  On the other hand, excluding those also causes an error, though
of a different type.

With all 3 ioa-related derived vars enabled, we get:

	at java.util.AbstractCollection.toString(AbstractCollection.java:447)
	at java.lang.String.valueOf(String.java:1947)
	at java.lang.StringBuffer.append(StringBuffer.java:370)
	at daikon.VarInfo.repr(VarInfo.java:481)
	at daikon.VarInfo.toString(VarInfo.java:478)
	at daikon.derive.binary.SequencesConcat.toString(SequencesConcat.java:93)
	at java.lang.String.valueOf(String.java:1947)
	at java.util.AbstractCollection.toString(AbstractCollection.java:447)
[repeat many times]


With the ioa-relaated derived vars disabled in the config file:

Reading declaration files . (read 1 file)
Processing trace data; reading 1 file:
[6:41:34 AM]: [no status]Exception in thread "main" java.lang.RuntimeException: Class(es) did not call addToFlow after calling destroy: [daikon.inv.ternary.threeScalar.FunctionBinary]
	at daikon.PptSlice.flow_and_remove_falsified(PptSlice.java:314)
	at daikon.PptSlice3.add(PptSlice3.java:271)
	at daikon.PptTopLevel.add(PptTopLevel.java:642)
	at daikon.PptTopLevel.add_and_flow(PptTopLevel.java:616)
	at daikon.FileIO.read_data_trace_file(FileIO.java:606)
	at daikon.FileIO.read_data_trace_files(FileIO.java:439)
	at daikon.Daikon.process_data(Daikon.java:561)
	at daikon.Daikon.main(Daikon.java:187)


Sorry I haven't done a full documentation on this.  The dtrace files
are freshly generated from memory examples in Andrej Bogdanov's thesis
and come from IOA.

--
$Log$
Revision 1.1  2002-04-03 11:44:35  tohn
new bug0039

