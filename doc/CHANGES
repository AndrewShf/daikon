History of Daikon changes

This file lists significant user-visible changes to Daikon.
(Many other changes, including most bug fixes, are not noted here.)

For documentation of Daikon, see the Daikon manual.  Its source is file
daikon.texinfo; formatted, it appears as daikon.html, daikon.info,
daikon.dvi, daikon.ps, or daikon.pdf.

===========================================================================

2.4.7 (30 April 2003):

The perl front end (dfepl) has been significantly enhanced.  An
additional Perl example has been added.  See the "Perl examples" and
"Instrumenting Perl programs" sections of the manual for more
information.

The manual has been reformatted and edited in a number of areas to improve
clarity and readability.  

----------------

2.4.6 (24 April 2003):

Floating-point quantities can be considered equal even if they differ
slightly (say, due to floating-point roundoff).  Configuration option
daikon.inv.Invariant.fuzzy_ratio sets the ratio by which floating-point
numbers may differ and still be considered equal; a value of 0 disables
these approximate comparisons.

A new front end for csv (comma-separated-value) files is provided; run
program convertcsv.pl, which appears in the bin/ directory.

The manual now contains a list of all invariants that Daikon detects, with
a short description of each.  Recall that users can add their own
(possibly domain-specific) invariants.

Other parts of the manual have been enhanced, such as descriptions of
variable names and dealing with too-large datasets.

----------------

2.4.5 (1 April 2003):

"Dummy invariants" permit properties that are not in Daikon's grammar to be
output, when they appear as splitting conditions.  It is possible to
specify in the splitter info file how to format such properties in each of
the output formats that Daikon supports.

The manual describes how to deal with contradictory invariants, which
Daikon might sometimes produce due to a bug or a limitation.

----------------

2.4.4 (2 March 2003):

dfec now works with gcc 2.96 (the version that is distributed with Red Hat
Linux, but which is not an official gcc release).

The Context GUI bug that caused it to sometimes print question marks in
invariants is fixed.

----------------

2.4.3 (1 February 2003):

dfej now produces output with program points named in Java, not JVML
format:  "foo(int, java.lang.String[])", not "foo(I[Ljava/lang/String;)".

----------------

2.4.2 (20 January 2003):

Fix several bugs, mostly reported by Tao Xie.

----------------

2.4.1 (1 January 2003):

There are two improvements to running Daikon under Windows.  First, Cygwin
is no longer necessary to run Daikon:  the daikonenv.bat file sets up the
Windows environment to permit Daikon to be run without Cygwin.  Second,
when running under Cygwin, the cygwin-runner.pl script smooths over
differences in path conventions between Cygwin and Windows.

----------------

2.4.0 (1 December 2002):

Daikon can detect invariants in Perl programs.  See the "Perl examples" and
"Instrumenting Perl programs" sections of the manual.

Three new mailing lists have been set up:
  daikon-announce@pag.lcs.mit.edu
  daikon-discuss@pag.lcs.mit.edu
  daikon-developers@pag.lcs.mit.edu
To subscribe, visit http://pag.lcs.mit.edu/mailman/listinfo.

The Context GUI now shares the same look and feel as the Tree GUI.
Furthermore, .dci files are no longer necessary for the Context GUI, and
its setup has been somewhat simplified.

The --no_suppress_cont option to Daikon and to PrintInvariants displays
invariants even if they are implied by controlling program points.

The -y option to Diff includes (statistically) unjustified invariants.
 
To customize the behavior of the C runtime system (for instance, to produce
gzipped .dtrace files or to customize the runtime's behavior when it
detects a memory error in your program), edit file
$DAIKONDIR/front-end/c/daikon_runtime.h.

The manual sections on dealing with variable comparability, large .dtrace
files, and memory exhaustion have been revised and expanded.
 
----------------

2.3.18 (2 November 2002):

Improved directions for building dfec (if you have a license to the EDG
C/C++ front end).  dfec has also been updated to use EDG 3.0 instead of EDG
2.45.  dfec is substantially more robust; most C programs and many C++
programs should be instrumented without difficulty.

Fixed a small problem in the example sections of the manual.

Explained a JTB ParseException error and how to work around it.

----------------

2.3.17 (9 October 2002):

Version numbers were wrong in last release; re-release to fix the problem.

Manual improvements:  note that local variables are not examined; that
Daikon can work over data that comes from sources other than program
executions; that all exit points must have the same number of variables;
that "nonsensical" is permitted as a value in a .dtrace file.

----------------

2.3.16 (1 October 2002):

Bugfix release.

----------------

2.3.15 (12 September 2002):

Discontinued the compiled distribution; now there is only one Daikon
distribution, the source distribution, which includes both pre-compiled
files and source files.

Added top-level makefile, which simplifies Daikon installation.

dfec enhancements:
  added --flatten-mdas option
  improved documentation of disambiguation file

----------------

2.3.14 (1 August 2002):

CreateSpinfoC program creates splitting conditions via static analysis of C
programs; this complements CreateSpinfo, which works for Java programs.

daikon_runtime.h lists many customization variables for the Daikon C
Runtime.

----------------

2.3.13 (17 July 2002):

Fix bug when running from daikon.jar.

Improvements to detection of floating-point invariants.

Manual gives example of use of orig variables, explains what to do when
Daikon runs slowly, discusses Ajax "too many levels of symbolic links"
error.
 
----------------

2.3.12 (11 July 2002):

Daikon reports invariants over floating-point numbers.  Previously, it
silently ignored floating-point numbers.

----------------

2.3.11 (9 July 2002):

The runcluster.pl program performs cluster analysis (a machine learning
technique) to produce splitter info files.  This is in addition to other
ways of producing splitter info files, such as static analysis or writing
them by hand.

The .decls file format now supports auxiliary information for declared
types.  It can indicate that a collection never contains duplicates or that
order does not matter (both useful for avoiding obvious invariants over
sets), properties of null in a collection, and whether a variable is a
call-by-value parameter (and so can never change, from the point of view of
the caller).  Use of this information reduces Daikon's output.

The manual emphasizes that dfec only works on ANSI/ISO C programs (that are
also legal C++ programs), and gives a number of hints for making your C
programs compliant.

----------------

2.3.10 (10 June 2002):

Bugfix release.

----------------

2.3.9 (4 June 2002):

Improve dfec documentation: explain more error messages (including array
bounds errors), add gcc installation instructions, explain uninitialized
array element processing.
 
----------------

2.3.8 (10 May 2002):

This release coordinates with a new release of the dfec binaries (at
http://pag.lcs.mit.edu/daikon/download/).

Remove some innocuous syntax anachronisms from example C programs.
Add the example C programs to the distribution.
Add manual section describing the example C programs.
Improve dfec documentation in the manual.
The Context GUI now supports C programs.

Rearrange distribution to avoid very long file names in tar file.

----------------

2.3.7 (1 May 2002):

Rewrite of dfec documentation.  dfec is now easier to use, more robust, and
supports new options, such as struct instrumentation depth.

Remove incorrect dfej documentation for "-instrsourcedir=.".

Add documentation for CreateSpinfo program.

Add new configuration options daikon.split.FileCompiler.compiler and
daikon.split.TimedProcess.compile_wait.

----------------

2.3.6 (5 April 2002):

MergeESC tool inserts Daikon output into Java source files as ESC/Java
comments.

Invariant Diff can compute set difference, union, and xor.  It can produce
output in the new InvMap format, and can read that format.  New flags
enable specification of custom comparators.

dfej's "-daikon-omit" flag can be a regular expression.

Daikon takes a --config_option flag to specify configuration settings.

Ajax tool bug fixes.

Improved installation and troubleshooting instructions.

----------------

2.3.5 (1 March 2002):

Add --files_from command-line argument to Daikon.

Add -a and -l command-line arguments to Diff.

----------------

2.3.4 (17 February 2002):

Add four new programs to the distribution:
  createspinfo.pl trace-untruncate trace-purge-fns.pl trace-purge-vars.pl

Manual enhancements:
 * Add section on configuration options.
 * Add paragraph about debugging options.
 * Add text about two new GUI filters.
 * Typo fixes.

----------------

2.3.3 (11 February 2002):

Add new flags to Diff program.

Manual enhancements:
 * Fix errors with "-noajax" flag in manual.
 * Describe redundant invariants and how to print them.
 * Explain format of Java program point names.
 * Explain more invariant (Daikon output) syntax. 
 * Discuss dealing with errors in the external Ajax and Simplify programs.

----------------

2.3.2 (7 December 2001):

Support for splitter files that specify conditions to use when detecting
implications (conditional invariants).

Daikon's --config option permits reading and saving sets of configuration
options.

The Daikon Java runtime respects the DTRACEAPPEND environment variable.

dfec requires that gcc be present.

----------------

2.3.1 (8 October 2001):

Added Context GUI, which shows relevant invariants in a separate window as
you browse code in a text editor.

Added many index entries to manual.

----------------

2.3.0 (11 September 2001):

Added linear ternary invariants, of the form z = ax + by + c.

===========================================================================
