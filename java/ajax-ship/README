This is a snapshot of the development tree. Good luck.

Look at tools\script.cmd for an example that runs LiveMethodDetector on an
example program, using two different analysis techniques. You should
change "D:\programs\jdk117\Lib\classes.zip" to point to a copy of the
JDK 1.1 class library (if running under JDK 1.1, you can leave this out).
(The "start" stuff is just an NT-ism to run the Java VM nice'd. You can
change the Java VM options to suit the VM you're using, but in any case
you will need to make sure Ajax gets a big heap.)

What native method specifications there are currently only cover JDK 1.1,
so only 1.1-based code can be analyzed effectively.

To try out the comparable pairs detector, try this:
java -cp . ajax.tools.benchmarks.ComparablePairsDetector ajax.analyzer.test.CombiningTest ajax.analyzer.test.CombiningTest.main#50 -cp .;D:\programs\jdk117\Lib\classes.zip

To try out the object modeller on your code, try this:
java -mx100m -cp . ajax.tools.benchmarks.ObjectModeller <your-main-class> -cp <your-class-path>;D:\programs\jdk117\Lib\classes.zip

It produces graphs in "dot" format. The "dot" tools can be downloaded
here:
http://www.research.att.com/sw/tools/graphviz/
