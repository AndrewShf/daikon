import daikon.*; 
import daikon.inv.*; 
import daikon.split.*; 

public final class MapQuick2_StreetNumberSet_toString_38 extends Splitter { 

  public String condition() { 
    return "i < sets.length-1"; 
  } 


  static DummyInvariant dummyInvFactory;
  DummyInvariant dummyInv;

  public MapQuick2_StreetNumberSet_toString_38() { } 
  public MapQuick2_StreetNumberSet_toString_38(Ppt ppt) { 
  }

  public Splitter instantiate(Ppt ppt) { 
    return new MapQuick2_StreetNumberSet_toString_38(ppt); 
  } 

  public boolean valid() { 
return false; } 

  public boolean test(ValueTuple vt) { 
    return(i<sets.length-1); 
  } 

  public String repr() { 
    return "MapQuick2_StreetNumberSet_toString_38: "
      ;
  } 

  public void makeDummyInvariant(DummyInvariant inv) { 
    dummyInvFactory = inv; 
  } 

  public void instantiateDummy(PptTopLevel ppt) { 
    dummyInv = null; 
  } 

  public DummyInvariant getDummyInvariant() { 
    return dummyInv; 
  } 

  public int[] getIntArray(long[] longArray) { 
    int[] intArray = new int[longArray.length]; 
    for (int i = 0; i < intArray.length; i++) { 
      intArray[i] = (int) longArray[i]; 
    } 
    return intArray; 
  } 

} 
