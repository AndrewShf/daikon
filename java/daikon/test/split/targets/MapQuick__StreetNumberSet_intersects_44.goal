import daikon.*;
import daikon.inv.*;
import daikon.split.*;

public final class MapQuick__StreetNumberSet_intersects_44 extends Splitter { 

  public String condition () { return "other.isEmpty()"; } 

  VarInfo other_varinfo;	// other
  static DummyInvariant dummyInvFactory;
  DummyInvariant dummyInv;

  public MapQuick__StreetNumberSet_intersects_44() { } 
  public MapQuick__StreetNumberSet_intersects_44(Ppt ppt) {
    other_varinfo = ppt.findVarByRepr("other");
  }

  public Splitter instantiate(Ppt ppt) {
    return new MapQuick__StreetNumberSet_intersects_44(ppt);
  } 

  public boolean valid() { 
    return ((other_varinfo != null) &&  true );
  }

  public boolean test(ValueTuple vt) {
    long other = other_varinfo.getIntValue(vt);
    return ( other.isEmpty() ); 
  }

  public String repr() { 
    return "MapQuick__StreetNumberSet_intersects_44: "
      + "other_varinfo=" + other_varinfo.repr() + " "
      ;
  }

  public void makeDummyInvariant(DummyInvariant inv) {
    dummyInvFactory = inv;
  }

  public void instantiateDummy(PptTopLevel ppt) {
    dummyInv = null;
    VarInfo other_vi = ppt.findVarByRepr("other");
    if (other_vi != null) {
      dummyInv = dummyInvFactory.instantiate(ppt, new VarInfo[] {other_vi});
    }
  }

  public DummyInvariant getDummyInvariant() {
    return dummyInv;
  }
}
