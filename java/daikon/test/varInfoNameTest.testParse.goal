;# (You can read this in -*- lisp -*- mode)
;# Tests for the parsing and printing routines
;# x
; parse p x
p = x
; esc_name p
x
; simplify_name p
x
;# x[]
; parse p x[]
p = x[]
; quantify_esc_name p
(\forall int i; (0 <= i && i <= x.length-1) ==> 
	x[i]
)
; simplify_name p
(select elems x)
;# x.class
; parse p x.class
p = x.class
; esc_name p
\typeof(x)
; simplify_name p
(typeof x)
;# x[].class
; parse p x[].class
p = x[].class
; quantify_esc_name p
(\forall int i; (0 <= i && i <= x.length-1) ==> 
	\typeof(x[i])
)
; simplify_name p
(typeof (select elems x))
;# this.field
; parse p this.field
p = this.field
; esc_name p
this.field
; simplify_name p
(select field this)
;# this.field[]
; parse p this.field[]
p = this.field[]
; quantify_esc_name p
(\forall int i; (0 <= i && i <= this.field.length-1) ==> 
	this.field[i]
)
; simplify_name p
(select elems (select field this))
;# this.field.class
; parse p this.field.class
p = this.field.class
; esc_name p
\typeof(this.field)
; simplify_name p
(typeof (select field this))
;# this.field[].class
; parse p this.field[].class
p = this.field[].class
; quantify_esc_name p
(\forall int i; (0 <= i && i <= this.field.length-1) ==> 
	\typeof(this.field[i])
)
; simplify_name p
(typeof (select elems (select field this)))
