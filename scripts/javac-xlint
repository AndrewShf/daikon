#!/bin/sh

# javac-xlint can be run as a prefix to a javac line, like so:
#
#   javac-xlint [-p regexp] javac [javac-options] file...
#
# javac-xlint makes 3 changes to the invocation of javac:
#  1. It adds the -Xlint option
#  2. It suppresses certain warning messages.
#  3. It returns non-zero status if any other warnings (or errors) exist.
#     Ordinarily, javac returns non-zero status only if errors exist.
#
# The suppressed warnings are of two sorts.
#  1. Any warning in a file that matches the regexp provided with -p
#     (mnemonic: "prune").
#  2. Any "unchecked" warning for a line containing a comment of the form
#     "// unchecked".  This permits suppression of warning messages via an
#     inline source code comment.  javac 6 will provide a built-in method
#     for doing this, but javac 5 (= javac 1.5) does not.

# As of Java 5 update 6 (JDK 5.0u6), javac will have a way to suppress
# warnings:  @SuppressWarnings("unchecked).  It does not permit suppression
# per-line (and isn't yet released; as of October 2005, the current version
# was JDK 5.0u4), but otherwise seems preferable to this script, as it is
# more portable.

# Design note:
# Two possible ways this could work:
#  1. Drop-in replacement for javac:  "javac-xlint args..."
#     An advantage is that it looks more like javac, may be somewhat
#     easier to remember/use.
#  2. Prefix to javac line, like so:  "javac-xlint javac args..."
#     An advantage is that we can continue to respect user
#     settings of javac to "javac -g", rather than overriding them.
#     (But maybe users should be discouraged from such settings?)
#     Note that even so, this script doesn't currently permit using
#     (say) jikes: prune-xlint.pl is hard-coded for "javac" output.


# Parse arguments.
while getopts "p:" Option
do
  case $Option in
    p ) 
#      echo "found p!"
      PRUNE_XLINT_ARGS=$OPTARG
  esac
done
shift $(($OPTIND - 1))

# echo "all: $*"

# Separate the first argument from all the others.
SUPPLIED_JAVAC=$1
shift

# echo ${SUPPLIED_JAVAC} -Xlint $* PIPED-INTO `dirname ${0}`/prune-xlint.pl -p "${PRUNE_XLINT_ARGS}"
if [ ! -z "${PRUNE_XLINT_ARGS}" ]; then
  ${SUPPLIED_JAVAC} -Xlint $* 2>&1 | `dirname ${0}`/prune-xlint.pl -p "${PRUNE_XLINT_ARGS}"
else
  ${SUPPLIED_JAVAC} -Xlint $* 2>&1 | `dirname ${0}`/prune-xlint.pl
fi
