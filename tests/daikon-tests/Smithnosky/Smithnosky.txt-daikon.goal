===========================================================================
misc.Smithnosky:::OBJECT
this.size == size(this.s[])
this has only one value
this.b >= 0
this.c >= 0
this.size one of { 0, 1, 2 }
this.s has only one value
this.s != null
this.s[] elements has only one value
this.s[] elements != null
this.s[].getClass() elements == "java.lang.String"
this.s[this.size..] == []
(this.a == 0) ==> (this.b == 0)
this.a >= this.b
(this.a == 0) ==> (this.c == 0)
this.a >= this.c
(this.a == 0) ==> (this.size == 0)
this.a >= this.size
this.size is a bitwise subset of this.a
(this.b == 0) ==> (this.c == 0)
this.b >= this.c
(this.aXb == 0) ==> (this.b == 0)
this.b <= this.aXb
(this.b == 0) ==> (this.size == 0)
this.b >= this.size
this.size is a bitwise subset of this.b
(this.aXb == 0) ==> (this.c == 0)
this.c <= this.aXb
this.c <= this.aXc
(this.c == 0) ==> (this.size == 0)
this.c >= this.size
this.size is a bitwise subset of this.c
(this.aXb == 0) ==> (this.size == 0)
this.aXb >= this.size
this.aXc > this.size
(this.size & size(this.s[])-1) == 0
3 * this.a - 3.5 * this.b + 0.5 * this.aXb - 3 == 0
11 * this.a - 11.5 * this.b + 1.5 * this.aXc - 12 == 0
3 * this.a - 3.5 * this.c + 0.5 * this.aXb - 3 == 0
11 * this.a - 11.5 * this.c + 1.5 * this.aXc - 12 == 0
16 * this.a - 3.5 * this.aXb - 0.5 * this.aXc - 12 == 0
3 * this.a + 0.5 * this.aXb - 10.5 * this.size - 3 == 0
3 * this.a + 0.5 * this.aXb - 10.5 * size(this.s[])-1 - 13.5 == 0
3.5 * this.a + this.aXc - 11.5 * this.size - 8 == 0
3.5 * this.a + this.aXc - 11.5 * size(this.s[])-1 - 19.5 == 0
11 * this.b - 11.5 * this.c + 1.5 * this.aXc - 12 == 0
16 * this.b - 5.5 * this.aXb + 1.5 * this.aXc - 12 == 0
3.5 * this.b + this.aXc - 11.5 * this.size - 8 == 0
3.5 * this.b + this.aXc - 11.5 * size(this.s[])-1 - 19.5 == 0
16 * this.c - 5.5 * this.aXb + 1.5 * this.aXc - 12 == 0
4.5 * this.c - 0.5 * this.aXb - 9 * this.size - 3 == 0
4.5 * this.c - 0.5 * this.aXb - 9 * size(this.s[])-1 - 12 == 0
3.5 * this.c + 0.5 * this.aXc - 11 * this.size - 4 == 0
3.5 * this.c + 0.5 * this.aXc - 11 * size(this.s[])-1 - 15 == 0
3.5 * this.aXb + 0.5 * this.aXc - 32 * this.size - 4 == 0
3.5 * this.aXb + 0.5 * this.aXc - 32 * size(this.s[])-1 - 36 == 0
===========================================================================
misc.Smithnosky.Smithnosky(int, int, int):::ENTER
a == 2
b == 3
c == 4
===========================================================================
misc.Smithnosky.Smithnosky(int, int, int):::EXIT
this.a == this.b
this.a == this.c
this.a == this.size
this.a == size(this.s[])
this.aXb == 6
this.aXc == 8
this.s[] == []
this.s[].getClass() == []
===========================================================================
misc.Smithnosky.add(java.lang.Object):::ENTER
this.a == this.b
this.a == this.c
this.aXb == this.aXc
o has only one value
o.getClass() == java.lang.String.class
this.a == 3
this.aXb == 9
this.size one of { 0, 1 }
this.s[].getClass() one of { [], [java.lang.String] }
this.s[] elements == o
===========================================================================
misc.Smithnosky.add(java.lang.Object):::EXIT
this.a == this.b
this.a == this.c
this.a == orig(this.a)
this.a == orig(this.b)
this.a == orig(this.c)
this.aXb == this.aXc
this.aXb == orig(this.aXb)
this.aXb == orig(this.aXc)
this.s == orig(this.s)
orig(o) == this.s[this.size-1]
orig(o) == this.s[orig(this.size)]
orig(this.size) == size(this.s[])-1
orig(this.s[]) == this.s[0..orig(this.size)-1]
this.a == 3
this.aXb == 9
this.size one of { 1, 2 }
this.s[].getClass() one of { [java.lang.String], [java.lang.String, java.lang.String] }
this.s[orig(this.size)..] contains no nulls and has only one value, of length 1
this.s[] elements == orig(o)
orig(o.getClass()) in this.s[].getClass()
===========================================================================
misc.Smithnosky.incA():::ENTER
this.a == this.b
this.a == this.c
this.a one of { 0, 1, 2 }
this.aXb one of { 1, 4, 6 }
this.aXc one of { 1, 4, 8 }
this.s[] == []
this.s[].getClass() == []
(this.aXc >> this.aXb == 0)
===========================================================================
misc.Smithnosky.incA():::EXIT
this.b == this.c
this.b == orig(this.a)
this.b == orig(this.b)
this.b == orig(this.c)
this.aXc == orig(this.aXc)
this.size == orig(this.size)
this.size == orig(size(this.s[]))
this.s == orig(this.s)
this.s[] == orig(this.s[])
this.a one of { 1, 2, 3 }
this.b one of { 0, 1, 2 }
this.aXb one of { 0, 2, 6 }
this.aXc one of { 1, 4, 8 }
this.s[] == []
this.s[].getClass() == []
(this.aXb >> this.a == 0)
this.aXb % this.a == 0
(this.a & this.aXc) == 0
(this.a & orig(this.aXb)) == 0
(this.b == 0) ==> (this.aXb == 0)
(this.aXc >> orig(this.aXb) == 0)
this.aXb == (this.a * this.b)
this.b == (this.aXb / this.a)
===========================================================================
misc.Smithnosky.incB():::ENTER
this.b == this.c
this.a one of { 1, 2, 3 }
this.b one of { 0, 1, 2 }
this.aXb one of { 0, 2, 6 }
this.aXc one of { 1, 4, 8 }
this.s[] == []
this.s[].getClass() == []
(this.aXb >> this.a == 0)
this.aXb % this.a == 0
(this.a & this.aXc) == 0
(this.b == 0) ==> (this.aXb == 0)
this.aXb == (this.a * this.b)
this.b == (this.aXb / this.a)
===========================================================================
misc.Smithnosky.incB():::EXIT
this.a == this.b
this.a == orig(this.a)
this.c == orig(this.b)
this.c == orig(this.c)
this.aXc == orig(this.aXc)
this.size == orig(this.size)
this.size == orig(size(this.s[]))
this.s == orig(this.s)
this.s[] == orig(this.s[])
this.a one of { 1, 2, 3 }
this.c one of { 0, 1, 2 }
this.aXb one of { 1, 4, 9 }
this.aXc one of { 1, 4, 8 }
this.s[] == []
this.s[].getClass() == []
this.aXb % this.a == 0
this.aXb == this.a**2
(this.a & this.aXc) == 0
(orig(this.aXb) >> this.a == 0)
orig(this.aXb) % this.a == 0
(this.c & this.aXb) == 0
(orig(this.aXb) == 0) ==> (this.c == 0)
(this.c == 0) ==> (orig(this.aXb) == 0)
(this.aXb & this.aXc) == 0
(this.aXb & orig(this.aXb)) == 0
orig(this.aXb) == (this.a * this.c)
this.c == (orig(this.aXb) / this.a)
this.a == (plume.MathMDE.gcd(this.aXb, orig(this.aXb)))
===========================================================================
misc.Smithnosky.incC():::ENTER
this.a == this.b
this.a one of { 1, 2, 3 }
this.c one of { 0, 1, 2 }
this.aXb one of { 1, 4, 9 }
this.aXc one of { 1, 4, 8 }
this.s[] == []
this.s[].getClass() == []
this.aXb % this.a == 0
this.aXb == this.a**2
(this.a & this.aXc) == 0
(this.c & this.aXb) == 0
(this.aXb & this.aXc) == 0
===========================================================================
misc.Smithnosky.incC():::EXIT
this.a == this.b
this.a == this.c
this.a == orig(this.a)
this.a == orig(this.b)
this.aXb == this.aXc
this.aXb == orig(this.aXb)
this.size == orig(this.size)
this.size == orig(size(this.s[]))
this.s == orig(this.s)
this.s[] == orig(this.s[])
this.a one of { 1, 2, 3 }
this.aXb one of { 1, 4, 9 }
this.s[] == []
this.s[].getClass() == []
this.aXb % this.a == 0
this.aXb == this.a**2
(this.a & orig(this.aXc)) == 0
(this.aXb & orig(this.c)) == 0
(this.aXb & orig(this.aXc)) == 0
===========================================================================
misc.Smithnosky.main(java.lang.String[]):::ENTER
args has only one value
args.getClass() == java.lang.String[].class
args[] == []
===========================================================================
misc.Smithnosky.main(java.lang.String[]):::EXIT
args[] == []
