===========================================================================
MapQuick1.StreetNumberSet:::OBJECT
    Variables: this this.begins this.begins[] this.ends this.ends[] size(this.begins[]) size(this.begins[])-1 size(this.ends[]) size(this.ends[])-1
this.begins.length == this.ends.length
this.begins != null
warning: method daikon.inv.unary.sequence.NoDuplicates.format_esc() needs to be implemented: this.begins[] contains no duplicates
(\forall int i; (0 <= i && i <= this.begins.length-1) ==> (this.begins[i] >= 0))
this.ends != null
warning: method daikon.inv.unary.sequence.NoDuplicates.format_esc() needs to be implemented: this.ends[] contains no duplicates
(\forall int i; (0 <= i && i <= this.ends.length-1) ==> (this.ends[i] >= 0))
this.begins.length >= 1
(\forall int i, j; (0 <= i && i <= this.begins.length-1 && 0 <= j && j <= this.ends.length-1 && i == j) ==> (this.begins[i] <= this.ends[j]))
===========================================================================
MapQuick1.StreetNumberSet.StreetNumberSet(java.lang.String):::ENTER
    Variables: numbers numbers.toString
numbers != null
===========================================================================
MapQuick1.StreetNumberSet.StreetNumberSet(java.lang.String):::EXIT68
    Variables: numbers numbers.toString this this.begins this.begins[] this.ends this.ends[] orig(numbers) orig(numbers.toString) size(this.begins[]) size(this.begins[])-1 size(this.ends[]) size(this.ends[])-1
      Unmodified variables: numbers numbers.toString
===========================================================================
MapQuick1.StreetNumberSet.checkRep():::ENTER
    Variables: this this.begins this.begins[] this.ends this.ends[] size(this.begins[]) size(this.begins[])-1 size(this.ends[]) size(this.ends[])-1
===========================================================================
MapQuick1.StreetNumberSet.checkRep():::EXIT104
    Variables: this this.begins this.begins[] this.ends this.ends[] orig(this) orig(this.begins) orig(this.begins[]) orig(this.ends) orig(this.ends[]) size(this.begins[]) size(this.begins[])-1 size(this.ends[]) size(this.ends[])-1
      Unmodified variables: this this.begins this.begins[] this.ends this.ends[]
===========================================================================
MapQuick1.StreetNumberSet.contains(int):::ENTER
    Variables: n this this.begins this.begins[] this.ends this.ends[] size(this.begins[]) size(this.begins[])-1 size(this.ends[]) size(this.ends[])-1 this.begins[n] this.begins[n-1] this.begins[n..] this.begins[n+1..] this.begins[0..n] this.begins[0..n-1] this.ends[n] this.ends[n-1] this.ends[n..] this.ends[n+1..] this.ends[0..n] this.ends[0..n-1]
n >= 0
===========================================================================
MapQuick1.StreetNumberSet.contains(int):::EXIT
    Variables: n return this this.begins this.begins[] this.ends this.ends[] orig(n) orig(this) orig(this.begins) orig(this.begins[]) orig(this.ends) orig(this.ends[]) size(this.begins[]) size(this.begins[])-1 size(this.ends[]) size(this.ends[])-1 this.begins[n] this.begins[n-1] this.begins[n..] this.begins[n+1..] this.begins[0..n] this.begins[0..n-1] this.ends[n] this.ends[n-1] this.ends[n..] this.ends[n+1..] this.ends[0..n] this.ends[0..n-1]
      Unmodified variables: n this this.begins this.begins[] this.ends this.ends[]
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::ENTER
    Variables: other other.begins other.begins[] other.ends other.ends[] this this.begins this.begins[] this.ends this.ends[] size(this.begins[]) size(this.begins[])-1 size(this.ends[]) size(this.ends[])-1
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT
    Variables: other other.begins other.begins[] other.ends other.ends[] return this this.begins this.begins[] this.ends this.ends[] orig(other) orig(other.begins) orig(other.begins[]) orig(other.ends) orig(other.ends[]) orig(this) orig(this.begins) orig(this.begins[]) orig(this.ends) orig(this.ends[]) size(other.begins[]) size(other.begins[])-1 size(other.ends[]) size(other.ends[])-1 size(this.begins[]) size(this.begins[])-1 size(this.ends[]) size(this.ends[])-1
      Unmodified variables: other other.begins other.begins[] other.ends other.ends[] this this.begins this.begins[] this.ends this.ends[]
(\result == true)  ==>  (other != null)
(\result == true)  ==>  (other.begins.length >= 1)
warning: method daikon.inv.unary.sequence.NoDuplicates.format_esc() needs to be implemented: other.begins[] contains no duplicates
(\forall int i; (0 <= i && i <= other.begins.length-1) ==> (other.begins[i] >= 0))
warning: method daikon.inv.unary.sequence.NoDuplicates.format_esc() needs to be implemented: other.ends[] contains no duplicates
(\forall int i; (0 <= i && i <= other.ends.length-1) ==> (other.ends[i] >= 0))
(\forall int i, j; (0 <= i && i <= other.begins.length-1 && 0 <= j && j <= other.ends.length-1 && i == j) ==> (other.begins[i] <= other.ends[j]))
===========================================================================
MapQuick1.StreetNumberSet.equals(java.lang.Object):::ENTER
    Variables: o o.class this this.begins this.begins[] this.ends this.ends[] size(this.begins[]) size(this.begins[])-1 size(this.ends[]) size(this.ends[])-1
===========================================================================
MapQuick1.StreetNumberSet.equals(java.lang.Object):::EXIT266
    Variables: o o.class return this this.begins this.begins[] this.ends this.ends[] orig(o) orig(o.class) orig(this) orig(this.begins) orig(this.begins[]) orig(this.ends) orig(this.ends[]) size(this.begins[]) size(this.begins[])-1 size(this.ends[]) size(this.ends[])-1
      Modified variables: o.class
      Unmodified variables: o this this.begins this.begins[] this.ends this.ends[]
(\result == true)  ==>  (o != null)
(\result == true)  ==>  (\typeof(o) == \type(MapQuick1.StreetNumberSet))
===========================================================================
MapQuick1.StreetNumberSet.hashCode():::ENTER
    Variables: this this.begins this.begins[] this.ends this.ends[] size(this.begins[]) size(this.begins[])-1 size(this.ends[]) size(this.ends[])-1
OneOf problem: num_elts 3, num_mod 2: this.begins[] elements one of { 1, 3, 7 }
(\forall int i; (0 <= i && i <= this.begins.length-1) ==> (this.begins[i] == 1 || this.begins[i] == 3 || this.begins[i] == 7))
warning: method daikon.inv.unary.sequence.OneOfSequence.format_esc() needs to be implemented: this.begins[] one of { [1], [3, 1, 7] }
OneOf problem: num_elts 3, num_mod 2: this.ends[] elements one of { 1, 5, 7 }
(\forall int i; (0 <= i && i <= this.ends.length-1) ==> (this.ends[i] == 1 || this.ends[i] == 5 || this.ends[i] == 7))
warning: method daikon.inv.unary.sequence.OneOfSequence.format_esc() needs to be implemented: this.ends[] one of { [5, 1, 7], [7] }
this.begins.length == 1 || this.begins.length == 3
===========================================================================
MapQuick1.StreetNumberSet.hashCode():::EXIT295
    Variables: return this this.begins this.begins[] this.ends this.ends[] orig(this) orig(this.begins) orig(this.begins[]) orig(this.ends) orig(this.ends[]) size(this.begins[]) size(this.begins[])-1 size(this.ends[]) size(this.ends[])-1 this.begins[return] this.begins[return-1] this.begins[return..] this.begins[return+1..] this.begins[0..return] this.begins[0..return-1] this.ends[return] this.ends[return-1] this.ends[return..] this.ends[return+1..] this.ends[0..return] this.ends[0..return-1]
      Unmodified variables: this this.begins this.begins[] this.ends this.ends[]
\result == 122
OneOf problem: num_elts 3, num_mod 2: this.begins[] elements one of { 1, 3, 7 }
OneOf problem: num_elts 3, num_mod 2: this.begins[] elements one of { 1, 3, 7 }
OneOf problem: num_elts 3, num_mod 2: this.ends[] elements one of { 1, 5, 7 }
OneOf problem: num_elts 3, num_mod 2: this.ends[] elements one of { 1, 5, 7 }
OneOf problem: num_elts 3, num_mod 2: orig(this.begins[]) elements one of { 1, 3, 7 }
OneOf problem: num_elts 3, num_mod 2: orig(this.ends[]) elements one of { 1, 5, 7 }
this.begins.length == 1 || this.begins.length == 3
===========================================================================
MapQuick1.StreetNumberSet.intersects(MapQuick1.StreetNumberSet):::ENTER
    Variables: other other.begins other.begins[] other.ends other.ends[] this this.begins this.begins[] this.ends this.ends[] size(other.begins[]) size(other.begins[])-1 size(other.ends[]) size(other.ends[])-1 size(this.begins[]) size(this.begins[])-1 size(this.ends[]) size(this.ends[])-1
other.begins.length == other.ends.length
other != null
warning: method daikon.inv.unary.sequence.NoDuplicates.format_esc() needs to be implemented: other.begins[] contains no duplicates
warning: method daikon.inv.unary.sequence.NoDuplicates.format_esc() needs to be implemented: other.ends[] contains no duplicates
===========================================================================
MapQuick1.StreetNumberSet.intersects(MapQuick1.StreetNumberSet):::EXIT
    Variables: other other.begins other.begins[] other.ends other.ends[] return this this.begins this.begins[] this.ends this.ends[] orig(other) orig(other.begins) orig(other.begins[]) orig(other.ends) orig(other.ends[]) orig(this) orig(this.begins) orig(this.begins[]) orig(this.ends) orig(this.ends[]) size(other.begins[]) size(other.begins[])-1 size(other.ends[]) size(other.ends[])-1 size(this.begins[]) size(this.begins[])-1 size(this.ends[]) size(this.ends[])-1
      Unmodified variables: other other.begins other.begins[] other.ends other.ends[] this this.begins this.begins[] this.ends this.ends[]
other.begins.length == other.ends.length
other.begins.length >= 1
===========================================================================
MapQuick1.StreetNumberSet.isEmpty():::ENTER
    Variables: this this.begins this.begins[] this.ends this.ends[] size(this.begins[]) size(this.begins[])-1 size(this.ends[]) size(this.ends[])-1
===========================================================================
MapQuick1.StreetNumberSet.isEmpty():::EXIT190
    Variables: return this this.begins this.begins[] this.ends this.ends[] orig(this) orig(this.begins) orig(this.begins[]) orig(this.ends) orig(this.ends[]) size(this.begins[]) size(this.begins[])-1 size(this.ends[]) size(this.ends[])-1
      Unmodified variables: this this.begins this.begins[] this.ends this.ends[]
\result == false
===========================================================================
MapQuick1.StreetNumberSet.max():::ENTER
    Variables: this this.begins this.begins[] this.ends this.ends[] size(this.begins[]) size(this.begins[])-1 size(this.ends[]) size(this.ends[])-1
===========================================================================
MapQuick1.StreetNumberSet.max():::EXIT230
    Variables: return this this.begins this.begins[] this.ends this.ends[] orig(this) orig(this.begins) orig(this.begins[]) orig(this.ends) orig(this.ends[]) size(this.begins[]) size(this.begins[])-1 size(this.ends[]) size(this.ends[])-1 this.begins[return] this.begins[return-1] this.begins[return..] this.begins[return+1..] this.begins[0..return] this.begins[0..return-1] this.ends[return] this.ends[return-1] this.ends[return..] this.ends[return+1..] this.ends[0..return] this.ends[0..return-1]
      Unmodified variables: this this.begins this.begins[] this.ends this.ends[]
(\forall int i; (0 <= i && i <= this.begins.length-1) ==> (this.begins[i] <= \result))
!(\forall int i; (0 <= i && i <= this.ends.length-1) ==> (this.ends[i] != \result))
(\forall int i; (0 <= i && i <= this.ends.length-1) ==> (this.ends[i] <= \result))
===========================================================================
MapQuick1.StreetNumberSet.min():::ENTER
    Variables: this this.begins this.begins[] this.ends this.ends[] size(this.begins[]) size(this.begins[])-1 size(this.ends[]) size(this.ends[])-1
===========================================================================
MapQuick1.StreetNumberSet.min():::EXIT210
    Variables: return this this.begins this.begins[] this.ends this.ends[] orig(this) orig(this.begins) orig(this.begins[]) orig(this.ends) orig(this.ends[]) size(this.begins[]) size(this.begins[])-1 size(this.ends[]) size(this.ends[])-1 this.begins[return] this.begins[return-1] this.begins[return..] this.begins[return+1..] this.begins[0..return] this.begins[0..return-1] this.ends[return] this.ends[return-1] this.ends[return..] this.ends[return+1..] this.ends[0..return] this.ends[0..return-1]
      Unmodified variables: this this.begins this.begins[] this.ends this.ends[]
!(\forall int i; (0 <= i && i <= this.begins.length-1) ==> (this.begins[i] != \result))
(\forall int i; (0 <= i && i <= this.begins.length-1) ==> (this.begins[i] >= \result))
(\forall int i; (0 <= i && i <= this.ends.length-1) ==> (this.ends[i] >= \result))
===========================================================================
MapQuick1.StreetNumberSet.orderStatistic(int):::ENTER
    Variables: n this this.begins this.begins[] this.ends this.ends[] size(this.begins[]) size(this.begins[])-1 size(this.ends[]) size(this.ends[])-1
n >= 0
===========================================================================
MapQuick1.StreetNumberSet.orderStatistic(int):::EXIT162
    Variables: n return this this.begins this.begins[] this.ends this.ends[] orig(n) orig(this) orig(this.begins) orig(this.begins[]) orig(this.ends) orig(this.ends[]) size(this.begins[]) size(this.begins[])-1 size(this.ends[]) size(this.ends[])-1 this.begins[return] this.begins[return-1] this.begins[return..] this.begins[return+1..] this.begins[0..return] this.begins[0..return-1] this.ends[return] this.ends[return-1] this.ends[return..] this.ends[return+1..] this.ends[0..return] this.ends[0..return-1]
      Unmodified variables: n this this.begins this.begins[] this.ends this.ends[]
\result >= 0
===========================================================================
MapQuick1.StreetNumberSet.parityOf(int):::ENTER
    Variables: i
i >= 0
===========================================================================
MapQuick1.StreetNumberSet.parityOf(int):::EXIT72
    Variables: i return orig(i)
      Unmodified variables: i
\result == 0 || \result == 1
i >= \result
===========================================================================
MapQuick1.StreetNumberSet.size():::ENTER
    Variables: this this.begins this.begins[] this.ends this.ends[] size(this.begins[]) size(this.begins[])-1 size(this.ends[]) size(this.ends[])-1
===========================================================================
MapQuick1.StreetNumberSet.size():::EXIT181
    Variables: return this this.begins this.begins[] this.ends this.ends[] orig(this) orig(this.begins) orig(this.begins[]) orig(this.ends) orig(this.ends[]) size(this.begins[]) size(this.begins[])-1 size(this.ends[]) size(this.ends[])-1
      Unmodified variables: this this.begins this.begins[] this.ends this.ends[]
