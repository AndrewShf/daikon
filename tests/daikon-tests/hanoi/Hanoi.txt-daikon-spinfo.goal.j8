===========================================================================
six170.Hanoi:::OBJECT
this.height == size(this.diskLocation[])
this.diskLocation != null
this.diskLocation[] elements one of { 0, 1, 2 }
this.diskLocation[this.height..] == []
===========================================================================
six170.Hanoi.Hanoi(int):::ENTER
===========================================================================
six170.Hanoi.Hanoi(int):::EXIT
this.height == orig(height)
this.diskLocation[] elements == 0
this.noOutput == false
this.diskLocation[] elements == this.diskLocation[this.height-1]
===========================================================================
six170.Hanoi.Hanoi(int, boolean):::ENTER
noOutput == true
===========================================================================
six170.Hanoi.Hanoi(int, boolean):::EXIT
this.height == orig(height)
this.noOutput == orig(noOutput)
this.diskLocation[] elements == 0
this.noOutput == true
this.diskLocation[] elements == this.diskLocation[this.height-1]
===========================================================================
six170.Hanoi.moveDisk(int, int):::ENTER
this.noOutput == true
fromPeg one of { 0, 1, 2 }
toPeg one of { 0, 1, 2 }
fromPeg in this.diskLocation[]
(fromPeg & toPeg) == 0
fromPeg != toPeg
===========================================================================
six170.Hanoi.moveDisk(int, int):::EXIT
this.diskLocation == orig(this.diskLocation)
this.height == orig(this.height)
this.height == orig(size(this.diskLocation[]))
this.noOutput == orig(this.noOutput)
this.noOutput == true
orig(toPeg) in this.diskLocation[]
===========================================================================
six170.Hanoi.moveTower(int, int, int):::ENTER
fromPeg == this.diskLocation[towerHeight-1]
this.noOutput == true
fromPeg one of { 0, 1, 2 }
toPeg one of { 0, 1, 2 }
towerHeight >= 1
this.diskLocation[0..towerHeight-1] elements are equal
this.height >= towerHeight
this.diskLocation[towerHeight..] elements <= this.height
(fromPeg & toPeg) == 0
fromPeg != toPeg
this.diskLocation[0..towerHeight-1] elements == fromPeg
===========================================================================
six170.Hanoi.moveTower(int, int, int):::EXIT
this.diskLocation == orig(this.diskLocation)
this.height == orig(this.height)
this.height == orig(size(this.diskLocation[]))
this.noOutput == orig(this.noOutput)
orig(fromPeg) == orig(this.diskLocation[post(towerHeight)-1])
orig(toPeg) == this.diskLocation[orig(towerHeight)-1]
this.diskLocation[orig(towerHeight)..] == orig(this.diskLocation[post(towerHeight)..])
this.diskLocation[orig(towerHeight)..] == orig(this.diskLocation[towerHeight..])
(orig(towerHeight) == 1)  ==>  (orig(this.diskLocation[0..towerHeight-1]) one of { [0], [1], [2] })
(orig(towerHeight) == 1)  ==>  (this.diskLocation[0..orig(towerHeight)-1] one of { [0], [1], [2] })
(orig(towerHeight) >= 2)  ==>  (orig(fromPeg) <= orig(towerHeight))
(orig(towerHeight) >= 2)  ==>  (orig(this.diskLocation[0..fromPeg-1]) != (index))
(orig(towerHeight) >= 2)  ==>  (orig(this.diskLocation[0..fromPeg-1]) elements are equal)
(orig(towerHeight) >= 2)  ==>  (orig(this.diskLocation[0..fromPeg-1]) elements one of { 1, 2 })
(orig(towerHeight) >= 2)  ==>  (orig(this.diskLocation[0..fromPeg-1]) one of { [], [1], [2, 2] })
(orig(towerHeight) >= 2)  ==>  (orig(this.diskLocation[0..post(fromPeg)-1]) != (index))
(orig(towerHeight) >= 2)  ==>  (orig(this.diskLocation[0..post(fromPeg)-1]) elements are equal)
(orig(towerHeight) >= 2)  ==>  (orig(this.diskLocation[0..post(fromPeg)-1]) elements one of { 1, 2 })
(orig(towerHeight) >= 2)  ==>  (orig(this.diskLocation[0..post(fromPeg)-1]) one of { [], [1], [2, 2] })
(orig(towerHeight) >= 2)  ==>  (orig(this.diskLocation[0..post(toPeg)-1]) elements <= size(this.diskLocation[])-1)
(orig(towerHeight) >= 2)  ==>  (orig(this.diskLocation[0..post(toPeg)-1]) elements are equal)
(orig(towerHeight) >= 2)  ==>  (orig(this.diskLocation[0..toPeg-1]) elements <= size(this.diskLocation[])-1)
(orig(towerHeight) >= 2)  ==>  (orig(this.diskLocation[0..toPeg-1]) elements are equal)
(orig(towerHeight) >= 2)  ==>  (orig(this.diskLocation[]) elements <= orig(towerHeight))
(orig(towerHeight) >= 2)  ==>  (orig(this.diskLocation[]) elements <= this.height)
(orig(towerHeight) >= 2)  ==>  (orig(this.diskLocation[fromPeg..]) elements <= size(this.diskLocation[])-1)
(orig(towerHeight) >= 2)  ==>  (orig(this.diskLocation[post(fromPeg)..]) elements <= size(this.diskLocation[])-1)
(orig(towerHeight) >= 2)  ==>  (orig(toPeg) <= orig(towerHeight))
(orig(towerHeight) >= 2)  ==>  (orig(towerHeight) >= orig(this.diskLocation[this.height-1]))
(orig(towerHeight) >= 2)  ==>  (orig(towerHeight) >= this.diskLocation[this.height-1])
(orig(towerHeight) >= 2)  ==>  (this.diskLocation[0..fromPeg-1] elements are equal)
(orig(towerHeight) >= 2)  ==>  (this.diskLocation[0..orig(fromPeg)-1] elements are equal)
(orig(towerHeight) >= 2)  ==>  (this.diskLocation[0..orig(toPeg)-1] != (index))
(orig(towerHeight) >= 2)  ==>  (this.diskLocation[0..orig(toPeg)-1] elements are equal)
(orig(towerHeight) >= 2)  ==>  (this.diskLocation[0..orig(toPeg)-1] elements one of { 1, 2 })
(orig(towerHeight) >= 2)  ==>  (this.diskLocation[0..orig(toPeg)-1] one of { [], [1], [2, 2] })
(orig(towerHeight) >= 2)  ==>  (this.diskLocation[0..toPeg-1] != (index))
(orig(towerHeight) >= 2)  ==>  (this.diskLocation[0..toPeg-1] elements are equal)
(orig(towerHeight) >= 2)  ==>  (this.diskLocation[0..toPeg-1] elements one of { 1, 2 })
(orig(towerHeight) >= 2)  ==>  (this.diskLocation[0..toPeg-1] one of { [], [1], [2, 2] })
(orig(towerHeight) >= 2)  ==>  (this.diskLocation[] elements <= orig(towerHeight))
(orig(towerHeight) >= 2)  ==>  (this.diskLocation[] elements <= this.height)
(orig(towerHeight) >= 2)  ==>  (this.diskLocation[orig(toPeg)..] elements <= size(this.diskLocation[])-1)
(orig(towerHeight) >= 2)  ==>  (this.diskLocation[toPeg..] elements <= size(this.diskLocation[])-1)
(orig(towerHeight) >= 2)  ==>  (this.height >= orig(fromPeg))
(orig(towerHeight) >= 2)  ==>  (this.height >= orig(this.diskLocation[this.height-1]))
(orig(towerHeight) >= 2)  ==>  (this.height >= orig(toPeg))
(orig(towerHeight) >= 2)  ==>  (this.height >= this.diskLocation[this.height-1])
this.noOutput == true
this.diskLocation[0..orig(towerHeight)-1] elements are equal
this.height >= orig(towerHeight)
this.diskLocation[orig(towerHeight)..] elements <= this.height
this.diskLocation[0..orig(towerHeight)-1] elements == orig(toPeg)
===========================================================================
six170.Hanoi.moveTower(int, int, int):::EXIT;condition="towerHeight == 1"
orig(towerHeight) == 1
this.diskLocation[0..orig(towerHeight)-1] one of { [0], [1], [2] }
orig(this.diskLocation[0..towerHeight-1]) one of { [0], [1], [2] }
===========================================================================
six170.Hanoi.moveTower(int, int, int):::EXIT;condition="not(towerHeight == 1)"
orig(towerHeight) >= 2
this.diskLocation[0..orig(fromPeg)-1] elements are equal
this.diskLocation[0..orig(toPeg)-1] elements one of { 1, 2 }
this.diskLocation[0..orig(toPeg)-1] one of { [], [1], [2, 2] }
this.diskLocation[0..orig(toPeg)-1] != (index)
this.diskLocation[0..orig(toPeg)-1] elements are equal
orig(this.diskLocation[0..fromPeg-1]) elements one of { 1, 2 }
orig(this.diskLocation[0..fromPeg-1]) one of { [], [1], [2, 2] }
orig(this.diskLocation[0..fromPeg-1]) != (index)
orig(this.diskLocation[0..fromPeg-1]) elements are equal
orig(this.diskLocation[0..toPeg-1]) elements are equal
this.diskLocation[] elements <= this.height
this.diskLocation[] elements <= orig(towerHeight)
orig(this.diskLocation[]) elements <= this.height
this.height >= orig(fromPeg)
this.height >= orig(toPeg)
this.height >= this.diskLocation[this.height-1]
this.height >= orig(this.diskLocation[this.height-1])
orig(this.diskLocation[]) elements <= orig(towerHeight)
orig(fromPeg) <= orig(towerHeight)
orig(toPeg) <= orig(towerHeight)
orig(towerHeight) >= this.diskLocation[this.height-1]
orig(towerHeight) >= orig(this.diskLocation[this.height-1])
this.diskLocation[orig(toPeg)..] elements <= size(this.diskLocation[])-1
orig(this.diskLocation[fromPeg..]) elements <= size(this.diskLocation[])-1
orig(this.diskLocation[0..toPeg-1]) elements <= size(this.diskLocation[])-1
===========================================================================
six170.Hanoi.otherPeg(int, int):::ENTER
pegA one of { 0, 1, 2 }
pegB one of { 0, 1, 2 }
(pegA & pegB) == 0
pegA != pegB
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT65
return == 2
orig(pegA) == 0
orig(pegB) == 1
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT65;condition="(pegA == 0)&&(pegB == 1)"
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT65;condition="not((pegA == 0)&&(pegB == 2))"
return == 2
orig(pegA) == 0
orig(pegB) == 1
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT65;condition="not((pegA == 1)&&(pegB == 0))"
return == 2
orig(pegA) == 0
orig(pegB) == 1
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT65;condition="not((pegA == 1)&&(pegB == 2))"
return == 2
orig(pegA) == 0
orig(pegB) == 1
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT65;condition="not((pegA == 2)&&(pegB == 0))"
return == 2
orig(pegA) == 0
orig(pegB) == 1
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT65;condition="not((pegA == 2)&&(pegB == 1))"
return == 2
orig(pegA) == 0
orig(pegB) == 1
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT66
return == 2
orig(pegA) == 1
orig(pegB) == 0
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT66;condition="not((pegA == 0)&&(pegB == 1))"
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT66;condition="not((pegA == 0)&&(pegB == 2))"
return == 2
orig(pegA) == 1
orig(pegB) == 0
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT66;condition="(pegA == 1)&&(pegB == 0)"
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT66;condition="not((pegA == 1)&&(pegB == 2))"
return == 2
orig(pegA) == 1
orig(pegB) == 0
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT66;condition="not((pegA == 2)&&(pegB == 0))"
return == 2
orig(pegA) == 1
orig(pegB) == 0
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT66;condition="not((pegA == 2)&&(pegB == 1))"
return == 2
orig(pegA) == 1
orig(pegB) == 0
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT67
return == 1
orig(pegA) == 0
orig(pegB) == 2
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT67;condition="not((pegA == 0)&&(pegB == 1))"
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT67;condition="(pegA == 0)&&(pegB == 2)"
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT67;condition="not((pegA == 1)&&(pegB == 0))"
return == 1
orig(pegA) == 0
orig(pegB) == 2
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT67;condition="not((pegA == 1)&&(pegB == 2))"
return == 1
orig(pegA) == 0
orig(pegB) == 2
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT67;condition="not((pegA == 2)&&(pegB == 0))"
return == 1
orig(pegA) == 0
orig(pegB) == 2
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT67;condition="not((pegA == 2)&&(pegB == 1))"
return == 1
orig(pegA) == 0
orig(pegB) == 2
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT68
return == 1
orig(pegA) == 2
orig(pegB) == 0
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT68;condition="not((pegA == 0)&&(pegB == 1))"
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT68;condition="not((pegA == 0)&&(pegB == 2))"
return == 1
orig(pegA) == 2
orig(pegB) == 0
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT68;condition="not((pegA == 1)&&(pegB == 0))"
return == 1
orig(pegA) == 2
orig(pegB) == 0
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT68;condition="not((pegA == 1)&&(pegB == 2))"
return == 1
orig(pegA) == 2
orig(pegB) == 0
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT68;condition="(pegA == 2)&&(pegB == 0)"
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT68;condition="not((pegA == 2)&&(pegB == 1))"
return == 1
orig(pegA) == 2
orig(pegB) == 0
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT69
return == 0
orig(pegA) == 1
orig(pegB) == 2
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT69;condition="not((pegA == 0)&&(pegB == 1))"
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT69;condition="not((pegA == 0)&&(pegB == 2))"
return == 0
orig(pegA) == 1
orig(pegB) == 2
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT69;condition="not((pegA == 1)&&(pegB == 0))"
return == 0
orig(pegA) == 1
orig(pegB) == 2
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT69;condition="(pegA == 1)&&(pegB == 2)"
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT69;condition="not((pegA == 2)&&(pegB == 0))"
return == 0
orig(pegA) == 1
orig(pegB) == 2
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT69;condition="not((pegA == 2)&&(pegB == 1))"
return == 0
orig(pegA) == 1
orig(pegB) == 2
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT70
return == 0
orig(pegA) == 2
orig(pegB) == 1
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT70;condition="not((pegA == 0)&&(pegB == 1))"
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT70;condition="not((pegA == 0)&&(pegB == 2))"
return == 0
orig(pegA) == 2
orig(pegB) == 1
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT70;condition="not((pegA == 1)&&(pegB == 0))"
return == 0
orig(pegA) == 2
orig(pegB) == 1
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT70;condition="not((pegA == 1)&&(pegB == 2))"
return == 0
orig(pegA) == 2
orig(pegB) == 1
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT70;condition="not((pegA == 2)&&(pegB == 0))"
return == 0
orig(pegA) == 2
orig(pegB) == 1
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT70;condition="(pegA == 2)&&(pegB == 1)"
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT
return one of { 0, 1, 2 }
(return & orig(pegA)) == 0
return != orig(pegA)
(return & orig(pegB)) == 0
return != orig(pegB)
return + orig(pegA) + orig(pegB) - 3 == 0
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT;condition="(pegA == 0)&&(pegB == 1)"
return == 2
orig(pegA) == 0
orig(pegB) == 1
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT;condition="not((pegA == 0)&&(pegB == 1))"
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT;condition="(pegA == 0)&&(pegB == 2)"
return == 1
orig(pegA) == 0
orig(pegB) == 2
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT;condition="not((pegA == 0)&&(pegB == 2))"
return one of { 0, 1, 2 }
orig(pegA) one of { 0, 1, 2 }
orig(pegB) one of { 0, 1, 2 }
(return & orig(pegA)) == 0
return != orig(pegA)
(return & orig(pegB)) == 0
return != orig(pegB)
(orig(pegA) & orig(pegB)) == 0
orig(pegA) != orig(pegB)
return + orig(pegA) + orig(pegB) - 3 == 0
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT;condition="(pegA == 1)&&(pegB == 0)"
return == 2
orig(pegA) == 1
orig(pegB) == 0
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT;condition="not((pegA == 1)&&(pegB == 0))"
return one of { 0, 1, 2 }
orig(pegA) one of { 0, 1, 2 }
orig(pegB) one of { 0, 1, 2 }
(return & orig(pegA)) == 0
return != orig(pegA)
(return & orig(pegB)) == 0
return != orig(pegB)
(orig(pegA) & orig(pegB)) == 0
orig(pegA) != orig(pegB)
return + orig(pegA) + orig(pegB) - 3 == 0
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT;condition="(pegA == 1)&&(pegB == 2)"
return == 0
orig(pegA) == 1
orig(pegB) == 2
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT;condition="not((pegA == 1)&&(pegB == 2))"
return one of { 0, 1, 2 }
orig(pegA) one of { 0, 1, 2 }
orig(pegB) one of { 0, 1, 2 }
(return & orig(pegA)) == 0
return != orig(pegA)
(return & orig(pegB)) == 0
return != orig(pegB)
(orig(pegA) & orig(pegB)) == 0
orig(pegA) != orig(pegB)
return + orig(pegA) + orig(pegB) - 3 == 0
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT;condition="(pegA == 2)&&(pegB == 0)"
return == 1
orig(pegA) == 2
orig(pegB) == 0
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT;condition="not((pegA == 2)&&(pegB == 0))"
return one of { 0, 1, 2 }
orig(pegA) one of { 0, 1, 2 }
orig(pegB) one of { 0, 1, 2 }
(return & orig(pegA)) == 0
return != orig(pegA)
(return & orig(pegB)) == 0
return != orig(pegB)
(orig(pegA) & orig(pegB)) == 0
orig(pegA) != orig(pegB)
return + orig(pegA) + orig(pegB) - 3 == 0
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT;condition="(pegA == 2)&&(pegB == 1)"
return == 0
orig(pegA) == 2
orig(pegB) == 1
===========================================================================
six170.Hanoi.otherPeg(int, int):::EXIT;condition="not((pegA == 2)&&(pegB == 1))"
return one of { 0, 1, 2 }
orig(pegA) one of { 0, 1, 2 }
orig(pegB) one of { 0, 1, 2 }
(return & orig(pegA)) == 0
return != orig(pegA)
(return & orig(pegB)) == 0
return != orig(pegB)
(orig(pegA) & orig(pegB)) == 0
orig(pegA) != orig(pegB)
return + orig(pegA) + orig(pegB) - 3 == 0
===========================================================================
six170.Hanoi.showTowers():::ENTER
this.noOutput == true
===========================================================================
six170.Hanoi.showTowers():::EXIT
this.diskLocation == orig(this.diskLocation)
this.diskLocation[] == orig(this.diskLocation[])
this.height == orig(this.height)
this.height == orig(size(this.diskLocation[]))
this.noOutput == orig(this.noOutput)
this.noOutput == true
===========================================================================
six170.Hanoi.showTowers():::EXIT;condition="not(!noOutput)"
this.diskLocation == orig(this.diskLocation)
this.diskLocation[] == orig(this.diskLocation[])
this.height == orig(this.height)
this.height == size(this.diskLocation[])
this.height == orig(size(this.diskLocation[]))
this.noOutput == orig(this.noOutput)
this.diskLocation != null
this.diskLocation[] elements one of { 0, 1, 2 }
this.noOutput == true
this.diskLocation[this.height..] == []
