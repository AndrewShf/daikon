===========================================================================
DataStructures.RedBlackNode:::OBJECT
    Variables: this this.element this.element.getClass() this.left this.left.element this.left.element.getClass() this.left.left this.left.left.element this.left.left.element.getClass() this.left.left.left this.left.left.right this.left.left.color this.left.right this.left.right.element this.left.right.element.getClass() this.left.right.left this.left.right.right this.left.right.color this.left.color this.right this.right.element this.right.element.getClass() this.right.left this.right.left.element this.right.left.element.getClass() this.right.left.left this.right.left.right this.right.left.color this.right.right this.right.right.element this.right.right.element.getClass() this.right.right.left this.right.right.right this.right.right.color this.right.color this.color
(this.left != null)  ==>  (this.element == this.left.element)
(this.left != null)  ==>  (this.left == this.left.left)
this.left == this.right
((this.left != null) && (this.left.left != null))  ==>  (this.left.element == this.left.left.element)
((this.left != null) && (this.left.right != null))  ==>  (this.left.element == this.left.right.element)
((this.left != null) && (this.right != null))  ==>  (this.left.element == this.right.element)
((this.left != null) && (this.right != null) && (this.right.left != null))  ==>  (this.left.element == this.right.left.element)
((this.left != null) && (this.right != null) && (this.right.right != null))  ==>  (this.left.element == this.right.right.element)
((this.left != null) && (this.left.left != null))  ==>  (this.left.left == this.left.left.left)
((this.left != null) && (this.left.left != null))  ==>  (this.left.left == this.left.left.right)
(this.left != null)  ==>  (this.left.left == this.left.right)
((this.left != null) && (this.left.right != null))  ==>  (this.left.left == this.left.right.left)
((this.left != null) && (this.left.right != null))  ==>  (this.left.left == this.left.right.right)
((this.left != null) && (this.right != null))  ==>  (this.left.left == this.right.left)
((this.left != null) && (this.right != null) && (this.right.left != null))  ==>  (this.left.left == this.right.left.left)
((this.left != null) && (this.right != null) && (this.right.left != null))  ==>  (this.left.left == this.right.left.right)
((this.left != null) && (this.right != null))  ==>  (this.left.left == this.right.right)
((this.left != null) && (this.right != null) && (this.right.right != null))  ==>  (this.left.left == this.right.right.left)
((this.left != null) && (this.right != null) && (this.right.right != null))  ==>  (this.left.left == this.right.right.right)
((this.left != null) && (this.left.left != null))  ==>  (this.left.left.color == this.left.color)
((this.left != null) && (this.left.right != null))  ==>  (this.left.right.color == this.left.color)
((this.left != null) && (this.right != null) && (this.right.left != null))  ==>  (this.left.color == this.right.left.color)
((this.left != null) && (this.right != null) && (this.right.right != null))  ==>  (this.left.color == this.right.right.color)
((this.left != null) && (this.right != null))  ==>  (this.left.color == this.right.color)
(this.left != null)  ==>  (this.left.color == this.color)
(this.element != null)  ==>  (this.element.getClass() == DataStructures.MyInteger.class)
(this.left != null)  ==>  (this.left.element != null)
((this.left != null) && (this.left.element != null))  ==>  (this.left.element.getClass() == DataStructures.MyInteger.class)
(this.left != null)  ==>  (this.left.left != null)
(this.left != null)  ==>  (this.left.left != null)
(this.left != null)  ==>  (this.left.color == 1)
this.color == 1
((this.element != null) && (this.left != null) && (this.left.element != null))  ==>  (this.element.getClass() == this.left.element.getClass())
((this.left != null) && (this.left.element != null) && (this.left.left != null) && (this.left.left.element != null))  ==>  (this.left.element.getClass() == this.left.left.element.getClass())
((this.left != null) && (this.left.element != null) && (this.left.right != null) && (this.left.right.element != null))  ==>  (this.left.element.getClass() == this.left.right.element.getClass())
((this.left != null) && (this.left.element != null) && (this.right != null) && (this.right.element != null))  ==>  (this.left.element.getClass() == this.right.element.getClass())
((this.left != null) && (this.left.element != null) && (this.right != null) && (this.right.left != null) && (this.right.left.element != null))  ==>  (this.left.element.getClass() == this.right.left.element.getClass())
((this.left != null) && (this.left.element != null) && (this.right != null) && (this.right.right != null) && (this.right.right.element != null))  ==>  (this.left.element.getClass() == this.right.right.element.getClass())
===========================================================================
DataStructures.RedBlackNode.RedBlackNode(DataStructures.Comparable):::ENTER
    Variables: theElement theElement.getClass()
(theElement != null)  ==>  (theElement.getClass() == DataStructures.MyInteger.class)
===========================================================================
DataStructures.RedBlackNode.RedBlackNode(DataStructures.Comparable):::EXIT
    Variables: this this.element this.element.getClass() this.left this.left.element this.left.element.getClass() this.left.left this.left.left.element this.left.left.element.getClass() this.left.left.left this.left.left.right this.left.left.color this.left.right this.left.right.element this.left.right.element.getClass() this.left.right.left this.left.right.right this.left.right.color this.left.color this.right this.right.element this.right.element.getClass() this.right.left this.right.left.element this.right.left.element.getClass() this.right.left.left this.right.left.right this.right.left.color this.right.right this.right.right.element this.right.right.element.getClass() this.right.right.left this.right.right.right this.right.right.color this.right.color this.color theElement theElement.getClass() orig(theElement) orig(theElement.getClass())
this.element == \old(theElement)
this.left == null
((this.element != null) && (\old(theElement) != null))  ==>  (this.element.getClass() == \old(theElement.getClass()))
===========================================================================
DataStructures.RedBlackNode.RedBlackNode(DataStructures.Comparable, DataStructures.RedBlackNode, DataStructures.RedBlackNode):::ENTER
    Variables: theElement theElement.getClass() lt lt.element lt.element.getClass() lt.left lt.left.element lt.left.element.getClass() lt.left.left lt.left.right lt.left.color lt.right lt.right.element lt.right.element.getClass() lt.right.left lt.right.right lt.right.color lt.color rt rt.element rt.element.getClass() rt.left rt.left.element rt.left.element.getClass() rt.left.left rt.left.right rt.left.color rt.right rt.right.element rt.right.element.getClass() rt.right.left rt.right.right rt.right.color rt.color
(lt != null)  ==>  (theElement == lt.element)
(lt != null)  ==>  (lt == lt.left)
lt == rt
((lt != null) && (lt.left != null))  ==>  (lt.element == lt.left.element)
((lt != null) && (lt.right != null))  ==>  (lt.element == lt.right.element)
((lt != null) && (rt != null))  ==>  (lt.element == rt.element)
((lt != null) && (rt != null) && (rt.left != null))  ==>  (lt.element == rt.left.element)
((lt != null) && (rt != null) && (rt.right != null))  ==>  (lt.element == rt.right.element)
((lt != null) && (lt.left != null))  ==>  (lt.left == lt.left.left)
((lt != null) && (lt.left != null))  ==>  (lt.left == lt.left.right)
(lt != null)  ==>  (lt.left == lt.right)
((lt != null) && (lt.right != null))  ==>  (lt.left == lt.right.left)
((lt != null) && (lt.right != null))  ==>  (lt.left == lt.right.right)
((lt != null) && (rt != null))  ==>  (lt.left == rt.left)
((lt != null) && (rt != null) && (rt.left != null))  ==>  (lt.left == rt.left.left)
((lt != null) && (rt != null) && (rt.left != null))  ==>  (lt.left == rt.left.right)
((lt != null) && (rt != null))  ==>  (lt.left == rt.right)
((lt != null) && (rt != null) && (rt.right != null))  ==>  (lt.left == rt.right.left)
((lt != null) && (rt != null) && (rt.right != null))  ==>  (lt.left == rt.right.right)
((lt != null) && (lt.left != null))  ==>  (lt.left.color == lt.color)
((lt != null) && (lt.right != null))  ==>  (lt.right.color == lt.color)
((lt != null) && (rt != null) && (rt.left != null))  ==>  (lt.color == rt.left.color)
((lt != null) && (rt != null) && (rt.right != null))  ==>  (lt.color == rt.right.color)
((lt != null) && (rt != null))  ==>  (lt.color == rt.color)
(theElement != null)  ==>  (theElement.getClass() == DataStructures.MyInteger.class)
(lt != null)  ==>  (lt.element != null)
((lt != null) && (lt.element != null))  ==>  (lt.element.getClass() == DataStructures.MyInteger.class)
(lt != null)  ==>  (lt.left != null)
(lt != null)  ==>  (lt.left != null)
(lt != null)  ==>  (lt.color == 1)
((theElement != null) && (lt != null) && (lt.element != null))  ==>  (theElement.getClass() == lt.element.getClass())
((lt != null) && (lt.element != null) && (lt.left != null) && (lt.left.element != null))  ==>  (lt.element.getClass() == lt.left.element.getClass())
((lt != null) && (lt.element != null) && (lt.right != null) && (lt.right.element != null))  ==>  (lt.element.getClass() == lt.right.element.getClass())
((lt != null) && (lt.element != null) && (rt != null) && (rt.element != null))  ==>  (lt.element.getClass() == rt.element.getClass())
((lt != null) && (lt.element != null) && (rt != null) && (rt.left != null) && (rt.left.element != null))  ==>  (lt.element.getClass() == rt.left.element.getClass())
((lt != null) && (lt.element != null) && (rt != null) && (rt.right != null) && (rt.right.element != null))  ==>  (lt.element.getClass() == rt.right.element.getClass())
===========================================================================
DataStructures.RedBlackNode.RedBlackNode(DataStructures.Comparable, DataStructures.RedBlackNode, DataStructures.RedBlackNode):::EXIT
    Variables: this this.element this.element.getClass() this.left this.left.element this.left.element.getClass() this.left.left this.left.left.element this.left.left.element.getClass() this.left.left.left this.left.left.right this.left.left.color this.left.right this.left.right.element this.left.right.element.getClass() this.left.right.left this.left.right.right this.left.right.color this.left.color this.right this.right.element this.right.element.getClass() this.right.left this.right.left.element this.right.left.element.getClass() this.right.left.left this.right.left.right this.right.left.color this.right.right this.right.right.element this.right.right.element.getClass() this.right.right.left this.right.right.right this.right.right.color this.right.color this.color theElement theElement.getClass() lt lt.element lt.element.getClass() lt.left lt.left.element lt.left.element.getClass() lt.left.left lt.left.right lt.left.color lt.right lt.right.element lt.right.element.getClass() lt.right.left lt.right.right lt.right.color lt.color rt rt.element rt.element.getClass() rt.left rt.left.element rt.left.element.getClass() rt.left.left rt.left.right rt.left.color rt.right rt.right.element rt.right.element.getClass() rt.right.left rt.right.right rt.right.color rt.color orig(theElement) orig(theElement.getClass()) orig(lt) orig(lt.element) orig(lt.element.getClass()) orig(lt.left) orig(lt.left.element) orig(lt.left.element.getClass()) orig(lt.left.left) orig(lt.left.right) orig(lt.left.color) orig(lt.right) orig(lt.right.element) orig(lt.right.element.getClass()) orig(lt.right.left) orig(lt.right.right) orig(lt.right.color) orig(lt.color) orig(rt) orig(rt.element) orig(rt.element.getClass()) orig(rt.left) orig(rt.left.element) orig(rt.left.element.getClass()) orig(rt.left.left) orig(rt.left.right) orig(rt.left.color) orig(rt.right) orig(rt.right.element) orig(rt.right.element.getClass()) orig(rt.right.left) orig(rt.right.right) orig(rt.right.color) orig(rt.color)
(lt != null)  ==>  (this.element == lt.element)
this.element == \old(theElement)
(lt != null)  ==>  (this.left == lt.left)
this.left == \old(lt)
this.left == \old(rt)
((this.left != null) && (lt != null))  ==>  (this.left.element == lt.element)
((this.left != null) && (lt != null))  ==>  (this.left.left == lt.left)
((this.left != null) && (this.left.left != null) && (lt != null))  ==>  (this.left.left.element == lt.element)
((this.left != null) && (this.left.left != null) && (lt != null))  ==>  (this.left.left.left == lt.left)
((this.left != null) && (this.left.left != null) && (lt != null))  ==>  (this.left.left.right == lt.left)
((this.left != null) && (this.left.left != null) && (lt != null))  ==>  (this.left.left.color == lt.color)
((this.left != null) && (lt != null))  ==>  (this.left.right == lt.left)
((this.left != null) && (this.left.right != null) && (lt != null))  ==>  (this.left.right.element == lt.element)
((this.left != null) && (this.left.right != null) && (lt != null))  ==>  (this.left.right.left == lt.left)
((this.left != null) && (this.left.right != null) && (lt != null))  ==>  (this.left.right.right == lt.left)
((this.left != null) && (this.left.right != null) && (lt != null))  ==>  (this.left.right.color == lt.color)
((this.left != null) && (lt != null))  ==>  (this.left.color == lt.color)
((this.right != null) && (lt != null))  ==>  (this.right.element == lt.element)
((this.right != null) && (lt != null))  ==>  (this.right.left == lt.left)
((this.right != null) && (this.right.left != null) && (lt != null))  ==>  (this.right.left.element == lt.element)
((this.right != null) && (this.right.left != null) && (lt != null))  ==>  (this.right.left.left == lt.left)
((this.right != null) && (this.right.left != null) && (lt != null))  ==>  (this.right.left.right == lt.left)
((this.right != null) && (this.right.left != null) && (lt != null))  ==>  (this.right.left.color == lt.color)
((this.right != null) && (lt != null))  ==>  (this.right.right == lt.left)
((this.right != null) && (this.right.right != null) && (lt != null))  ==>  (this.right.right.element == lt.element)
((this.right != null) && (this.right.right != null) && (lt != null))  ==>  (this.right.right.left == lt.left)
((this.right != null) && (this.right.right != null) && (lt != null))  ==>  (this.right.right.right == lt.left)
((this.right != null) && (this.right.right != null) && (lt != null))  ==>  (this.right.right.color == lt.color)
((this.right != null) && (lt != null))  ==>  (this.right.color == lt.color)
(lt != null)  ==>  (this.color == lt.color)
((lt != null) && (lt.left != null))  ==>  (lt.element == lt.left.element)
((lt != null) && (lt.right != null))  ==>  (lt.element == lt.right.element)
((lt != null) && (rt != null))  ==>  (lt.element == rt.element)
((lt != null) && (rt != null) && (rt.left != null))  ==>  (lt.element == rt.left.element)
((lt != null) && (rt != null) && (rt.right != null))  ==>  (lt.element == rt.right.element)
((lt != null) && (\old(lt) != null))  ==>  (lt.element == \old(lt.element))
((lt != null) && (\old(lt) != null) && (\old(lt.left) != null))  ==>  (lt.element == \old(lt.left.element))
((lt != null) && (\old(lt) != null) && (\old(lt.right) != null))  ==>  (lt.element == \old(lt.right.element))
((lt != null) && (\old(rt) != null))  ==>  (lt.element == \old(rt.element))
((lt != null) && (\old(rt) != null) && (\old(rt.left) != null))  ==>  (lt.element == \old(rt.left.element))
((lt != null) && (\old(rt) != null) && (\old(rt.right) != null))  ==>  (lt.element == \old(rt.right.element))
((lt != null) && (lt.left != null))  ==>  (lt.left == lt.left.left)
((lt != null) && (lt.left != null))  ==>  (lt.left == lt.left.right)
(lt != null)  ==>  (lt.left == lt.right)
((lt != null) && (lt.right != null))  ==>  (lt.left == lt.right.left)
((lt != null) && (lt.right != null))  ==>  (lt.left == lt.right.right)
((lt != null) && (rt != null))  ==>  (lt.left == rt.left)
((lt != null) && (rt != null) && (rt.left != null))  ==>  (lt.left == rt.left.left)
((lt != null) && (rt != null) && (rt.left != null))  ==>  (lt.left == rt.left.right)
((lt != null) && (rt != null))  ==>  (lt.left == rt.right)
((lt != null) && (rt != null) && (rt.right != null))  ==>  (lt.left == rt.right.left)
((lt != null) && (rt != null) && (rt.right != null))  ==>  (lt.left == rt.right.right)
((lt != null) && (\old(lt) != null))  ==>  (lt.left == \old(lt.left))
((lt != null) && (\old(lt) != null) && (\old(lt.left) != null))  ==>  (lt.left == \old(lt.left.left))
((lt != null) && (\old(lt) != null) && (\old(lt.left) != null))  ==>  (lt.left == \old(lt.left.right))
((lt != null) && (\old(lt) != null))  ==>  (lt.left == \old(lt.right))
((lt != null) && (\old(lt) != null) && (\old(lt.right) != null))  ==>  (lt.left == \old(lt.right.left))
((lt != null) && (\old(lt) != null) && (\old(lt.right) != null))  ==>  (lt.left == \old(lt.right.right))
((lt != null) && (\old(rt) != null))  ==>  (lt.left == \old(rt.left))
((lt != null) && (\old(rt) != null) && (\old(rt.left) != null))  ==>  (lt.left == \old(rt.left.left))
((lt != null) && (\old(rt) != null) && (\old(rt.left) != null))  ==>  (lt.left == \old(rt.left.right))
((lt != null) && (\old(rt) != null))  ==>  (lt.left == \old(rt.right))
((lt != null) && (\old(rt) != null) && (\old(rt.right) != null))  ==>  (lt.left == \old(rt.right.left))
((lt != null) && (\old(rt) != null) && (\old(rt.right) != null))  ==>  (lt.left == \old(rt.right.right))
((lt != null) && (lt.left != null))  ==>  (lt.left.color == lt.color)
((lt != null) && (lt.right != null))  ==>  (lt.right.color == lt.color)
((lt != null) && (rt != null) && (rt.left != null))  ==>  (lt.color == rt.left.color)
((lt != null) && (rt != null) && (rt.right != null))  ==>  (lt.color == rt.right.color)
((lt != null) && (rt != null))  ==>  (lt.color == rt.color)
((lt != null) && (\old(lt) != null) && (\old(lt.left) != null))  ==>  (lt.color == \old(lt.left.color))
((lt != null) && (\old(lt) != null) && (\old(lt.right) != null))  ==>  (lt.color == \old(lt.right.color))
((lt != null) && (\old(lt) != null))  ==>  (lt.color == \old(lt.color))
((lt != null) && (\old(rt) != null) && (\old(rt.left) != null))  ==>  (lt.color == \old(rt.left.color))
((lt != null) && (\old(rt) != null) && (\old(rt.right) != null))  ==>  (lt.color == \old(rt.right.color))
((lt != null) && (\old(rt) != null))  ==>  (lt.color == \old(rt.color))
(lt != null)  ==>  (lt.element != null)
((lt != null) && (lt.element != null))  ==>  (lt.element.getClass() == DataStructures.MyInteger.class)
(lt != null)  ==>  (lt.left != null)
(lt != null)  ==>  (lt.left != null)
(lt != null)  ==>  (lt.color == 1)
((this.element != null) && (lt != null) && (lt.element != null))  ==>  (this.element.getClass() == lt.element.getClass())
((this.element != null) && (\old(theElement) != null))  ==>  (this.element.getClass() == \old(theElement.getClass()))
((this.left != null) && (this.left.element != null) && (lt != null) && (lt.element != null))  ==>  (this.left.element.getClass() == lt.element.getClass())
((this.left != null) && (this.left.left != null) && (this.left.left.element != null) && (lt != null) && (lt.element != null))  ==>  (this.left.left.element.getClass() == lt.element.getClass())
((this.left != null) && (this.left.right != null) && (this.left.right.element != null) && (lt != null) && (lt.element != null))  ==>  (this.left.right.element.getClass() == lt.element.getClass())
((this.right != null) && (this.right.element != null) && (lt != null) && (lt.element != null))  ==>  (this.right.element.getClass() == lt.element.getClass())
((this.right != null) && (this.right.left != null) && (this.right.left.element != null) && (lt != null) && (lt.element != null))  ==>  (this.right.left.element.getClass() == lt.element.getClass())
((this.right != null) && (this.right.right != null) && (this.right.right.element != null) && (lt != null) && (lt.element != null))  ==>  (this.right.right.element.getClass() == lt.element.getClass())
((lt != null) && (lt.element != null) && (lt.left != null) && (lt.left.element != null))  ==>  (lt.element.getClass() == lt.left.element.getClass())
((lt != null) && (lt.element != null) && (lt.right != null) && (lt.right.element != null))  ==>  (lt.element.getClass() == lt.right.element.getClass())
((lt != null) && (lt.element != null) && (rt != null) && (rt.element != null))  ==>  (lt.element.getClass() == rt.element.getClass())
((lt != null) && (lt.element != null) && (rt != null) && (rt.left != null) && (rt.left.element != null))  ==>  (lt.element.getClass() == rt.left.element.getClass())
((lt != null) && (lt.element != null) && (rt != null) && (rt.right != null) && (rt.right.element != null))  ==>  (lt.element.getClass() == rt.right.element.getClass())
((lt != null) && (lt.element != null) && (\old(lt) != null) && (\old(lt.element) != null))  ==>  (lt.element.getClass() == \old(lt.element.getClass()))
((lt != null) && (lt.element != null) && (\old(lt) != null) && (\old(lt.left) != null) && (\old(lt.left.element) != null))  ==>  (lt.element.getClass() == \old(lt.left.element.getClass()))
((lt != null) && (lt.element != null) && (\old(lt) != null) && (\old(lt.right) != null) && (\old(lt.right.element) != null))  ==>  (lt.element.getClass() == \old(lt.right.element.getClass()))
((lt != null) && (lt.element != null) && (\old(rt) != null) && (\old(rt.element) != null))  ==>  (lt.element.getClass() == \old(rt.element.getClass()))
((lt != null) && (lt.element != null) && (\old(rt) != null) && (\old(rt.left) != null) && (\old(rt.left.element) != null))  ==>  (lt.element.getClass() == \old(rt.left.element.getClass()))
((lt != null) && (lt.element != null) && (\old(rt) != null) && (\old(rt.right) != null) && (\old(rt.right.element) != null))  ==>  (lt.element.getClass() == \old(rt.right.element.getClass()))
===========================================================================
DataStructures.RedBlackTree:::CLASS
    Variables: DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.nullNode.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.nullNode.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.nullNode.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.nullNode.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.nullNode.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.nullNode.right.right
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.nullNode.left.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.nullNode.right.element
DataStructures.RedBlackTree.nullNode.left.color == DataStructures.RedBlackTree.BLACK
DataStructures.RedBlackTree.nullNode.right.color == DataStructures.RedBlackTree.BLACK
DataStructures.RedBlackTree.nullNode.color == DataStructures.RedBlackTree.BLACK
DataStructures.RedBlackTree.nullNode != null
DataStructures.RedBlackTree.nullNode != null
(DataStructures.RedBlackTree.nullNode.element != null)  ==>  (DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.MyInteger.class)
(DataStructures.RedBlackTree.current != null)  ==>  (DataStructures.RedBlackTree.current.element != null)
(DataStructures.RedBlackTree.current != null)  ==>  (DataStructures.RedBlackTree.current.left != null)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.left != null))  ==>  (DataStructures.RedBlackTree.current.left.element != null)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.left != null))  ==>  (DataStructures.RedBlackTree.current.left.left != null)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.left != null))  ==>  (DataStructures.RedBlackTree.current.left.right != null)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.left != null))  ==>  (DataStructures.RedBlackTree.current.left.color == 0 || DataStructures.RedBlackTree.current.left.color == 1)
(DataStructures.RedBlackTree.current != null)  ==>  (DataStructures.RedBlackTree.current.right != null)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.right != null))  ==>  (DataStructures.RedBlackTree.current.right.element != null)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.right != null))  ==>  (DataStructures.RedBlackTree.current.right.left != null)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.right != null))  ==>  (DataStructures.RedBlackTree.current.right.right != null)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.right != null))  ==>  (DataStructures.RedBlackTree.current.right.color == 0 || DataStructures.RedBlackTree.current.right.color == 1)
(DataStructures.RedBlackTree.current != null)  ==>  (DataStructures.RedBlackTree.current.color == 0 || DataStructures.RedBlackTree.current.color == 1)
(DataStructures.RedBlackTree.parent != null)  ==>  (DataStructures.RedBlackTree.parent.element != null)
(DataStructures.RedBlackTree.parent != null)  ==>  (DataStructures.RedBlackTree.parent.left != null)
((DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.left != null))  ==>  (DataStructures.RedBlackTree.parent.left.element != null)
((DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.left != null))  ==>  (DataStructures.RedBlackTree.parent.left.left != null)
((DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.left != null))  ==>  (DataStructures.RedBlackTree.parent.left.right != null)
((DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.left != null))  ==>  (DataStructures.RedBlackTree.parent.left.color == 0 || DataStructures.RedBlackTree.parent.left.color == 1)
(DataStructures.RedBlackTree.parent != null)  ==>  (DataStructures.RedBlackTree.parent.right != null)
((DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.right != null))  ==>  (DataStructures.RedBlackTree.parent.right.element != null)
((DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.right != null))  ==>  (DataStructures.RedBlackTree.parent.right.left != null)
((DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.right != null))  ==>  (DataStructures.RedBlackTree.parent.right.right != null)
((DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.right != null))  ==>  (DataStructures.RedBlackTree.parent.right.color == 0 || DataStructures.RedBlackTree.parent.right.color == 1)
(DataStructures.RedBlackTree.parent != null)  ==>  (DataStructures.RedBlackTree.parent.color == 0 || DataStructures.RedBlackTree.parent.color == 1)
(DataStructures.RedBlackTree.grand != null)  ==>  (DataStructures.RedBlackTree.grand.element != null)
(DataStructures.RedBlackTree.grand != null)  ==>  (DataStructures.RedBlackTree.grand.left != null)
((DataStructures.RedBlackTree.grand != null) && (DataStructures.RedBlackTree.grand.left != null))  ==>  (DataStructures.RedBlackTree.grand.left.element != null)
((DataStructures.RedBlackTree.grand != null) && (DataStructures.RedBlackTree.grand.left != null))  ==>  (DataStructures.RedBlackTree.grand.left.left != null)
((DataStructures.RedBlackTree.grand != null) && (DataStructures.RedBlackTree.grand.left != null))  ==>  (DataStructures.RedBlackTree.grand.left.right != null)
((DataStructures.RedBlackTree.grand != null) && (DataStructures.RedBlackTree.grand.left != null))  ==>  (DataStructures.RedBlackTree.grand.left.color == 0 || DataStructures.RedBlackTree.grand.left.color == 1)
(DataStructures.RedBlackTree.grand != null)  ==>  (DataStructures.RedBlackTree.grand.right != null)
((DataStructures.RedBlackTree.grand != null) && (DataStructures.RedBlackTree.grand.right != null))  ==>  (DataStructures.RedBlackTree.grand.right.element != null)
((DataStructures.RedBlackTree.grand != null) && (DataStructures.RedBlackTree.grand.right != null))  ==>  (DataStructures.RedBlackTree.grand.right.left != null)
((DataStructures.RedBlackTree.grand != null) && (DataStructures.RedBlackTree.grand.right != null))  ==>  (DataStructures.RedBlackTree.grand.right.right != null)
((DataStructures.RedBlackTree.grand != null) && (DataStructures.RedBlackTree.grand.right != null))  ==>  (DataStructures.RedBlackTree.grand.right.color == 0 || DataStructures.RedBlackTree.grand.right.color == 1)
(DataStructures.RedBlackTree.grand != null)  ==>  (DataStructures.RedBlackTree.grand.color == 0 || DataStructures.RedBlackTree.grand.color == 1)
(DataStructures.RedBlackTree.great != null)  ==>  (DataStructures.RedBlackTree.great.element != null)
(DataStructures.RedBlackTree.great != null)  ==>  (DataStructures.RedBlackTree.great.left != null)
((DataStructures.RedBlackTree.great != null) && (DataStructures.RedBlackTree.great.left != null))  ==>  (DataStructures.RedBlackTree.great.left.element != null)
((DataStructures.RedBlackTree.great != null) && (DataStructures.RedBlackTree.great.left != null))  ==>  (DataStructures.RedBlackTree.great.left.left != null)
((DataStructures.RedBlackTree.great != null) && (DataStructures.RedBlackTree.great.left != null))  ==>  (DataStructures.RedBlackTree.great.left.right != null)
((DataStructures.RedBlackTree.great != null) && (DataStructures.RedBlackTree.great.left != null))  ==>  (DataStructures.RedBlackTree.great.left.color == 0 || DataStructures.RedBlackTree.great.left.color == 1)
(DataStructures.RedBlackTree.great != null)  ==>  (DataStructures.RedBlackTree.great.right != null)
((DataStructures.RedBlackTree.great != null) && (DataStructures.RedBlackTree.great.right != null))  ==>  (DataStructures.RedBlackTree.great.right.element != null)
((DataStructures.RedBlackTree.great != null) && (DataStructures.RedBlackTree.great.right != null))  ==>  (DataStructures.RedBlackTree.great.right.left != null)
((DataStructures.RedBlackTree.great != null) && (DataStructures.RedBlackTree.great.right != null))  ==>  (DataStructures.RedBlackTree.great.right.right != null)
((DataStructures.RedBlackTree.great != null) && (DataStructures.RedBlackTree.great.right != null))  ==>  (DataStructures.RedBlackTree.great.right.color == 0 || DataStructures.RedBlackTree.great.right.color == 1)
(DataStructures.RedBlackTree.great != null)  ==>  (DataStructures.RedBlackTree.great.color == 0 || DataStructures.RedBlackTree.great.color == 1)
((DataStructures.RedBlackTree.nullNode.element != null) && (DataStructures.RedBlackTree.nullNode.left.element != null))  ==>  (DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.left.element.getClass())
((DataStructures.RedBlackTree.nullNode.element != null) && (DataStructures.RedBlackTree.nullNode.right.element != null))  ==>  (DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.right.element.getClass())
((DataStructures.RedBlackTree.nullNode.element != null) && (DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.element != null))  ==>  (DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.element.getClass())
((DataStructures.RedBlackTree.nullNode.element != null) && (DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.left != null) && (DataStructures.RedBlackTree.current.left.element != null))  ==>  (DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.left.element.getClass())
((DataStructures.RedBlackTree.nullNode.element != null) && (DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.right != null) && (DataStructures.RedBlackTree.current.right.element != null))  ==>  (DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.right.element.getClass())
((DataStructures.RedBlackTree.nullNode.element != null) && (DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.element != null))  ==>  (DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.element.getClass())
((DataStructures.RedBlackTree.nullNode.element != null) && (DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.left != null) && (DataStructures.RedBlackTree.parent.left.element != null))  ==>  (DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.left.element.getClass())
((DataStructures.RedBlackTree.nullNode.element != null) && (DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.right != null) && (DataStructures.RedBlackTree.parent.right.element != null))  ==>  (DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.right.element.getClass())
((DataStructures.RedBlackTree.nullNode.element != null) && (DataStructures.RedBlackTree.grand != null) && (DataStructures.RedBlackTree.grand.element != null))  ==>  (DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.element.getClass())
((DataStructures.RedBlackTree.nullNode.element != null) && (DataStructures.RedBlackTree.grand != null) && (DataStructures.RedBlackTree.grand.left != null) && (DataStructures.RedBlackTree.grand.left.element != null))  ==>  (DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.left.element.getClass())
((DataStructures.RedBlackTree.nullNode.element != null) && (DataStructures.RedBlackTree.grand != null) && (DataStructures.RedBlackTree.grand.right != null) && (DataStructures.RedBlackTree.grand.right.element != null))  ==>  (DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.right.element.getClass())
((DataStructures.RedBlackTree.nullNode.element != null) && (DataStructures.RedBlackTree.great != null) && (DataStructures.RedBlackTree.great.element != null))  ==>  (DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.element.getClass())
((DataStructures.RedBlackTree.nullNode.element != null) && (DataStructures.RedBlackTree.great != null) && (DataStructures.RedBlackTree.great.left != null) && (DataStructures.RedBlackTree.great.left.element != null))  ==>  (DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.left.element.getClass())
((DataStructures.RedBlackTree.nullNode.element != null) && (DataStructures.RedBlackTree.great != null) && (DataStructures.RedBlackTree.great.right != null) && (DataStructures.RedBlackTree.great.right.element != null))  ==>  (DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.right.element.getClass())
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.left != null))  ==>  (DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.current.left.color)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.right != null))  ==>  (DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.current.right.color)
(DataStructures.RedBlackTree.current != null)  ==>  (DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.current.color)
((DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.left != null))  ==>  (DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.parent.left.color)
((DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.right != null))  ==>  (DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.parent.right.color)
(DataStructures.RedBlackTree.parent != null)  ==>  (DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.parent.color)
((DataStructures.RedBlackTree.grand != null) && (DataStructures.RedBlackTree.grand.left != null))  ==>  (DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.grand.left.color)
((DataStructures.RedBlackTree.grand != null) && (DataStructures.RedBlackTree.grand.right != null))  ==>  (DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.grand.right.color)
(DataStructures.RedBlackTree.grand != null)  ==>  (DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.grand.color)
((DataStructures.RedBlackTree.great != null) && (DataStructures.RedBlackTree.great.left != null))  ==>  (DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.left.color)
((DataStructures.RedBlackTree.great != null) && (DataStructures.RedBlackTree.great.right != null))  ==>  (DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.right.color)
(DataStructures.RedBlackTree.great != null)  ==>  (DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.color)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.left != null))  ==>  (DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.current.left.color)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.right != null))  ==>  (DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.current.right.color)
(DataStructures.RedBlackTree.current != null)  ==>  (DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.current.color)
((DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.left != null))  ==>  (DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.parent.left.color)
((DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.right != null))  ==>  (DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.parent.right.color)
(DataStructures.RedBlackTree.parent != null)  ==>  (DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.parent.color)
((DataStructures.RedBlackTree.grand != null) && (DataStructures.RedBlackTree.grand.left != null))  ==>  (DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.grand.left.color)
((DataStructures.RedBlackTree.grand != null) && (DataStructures.RedBlackTree.grand.right != null))  ==>  (DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.grand.right.color)
(DataStructures.RedBlackTree.grand != null)  ==>  (DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.grand.color)
((DataStructures.RedBlackTree.great != null) && (DataStructures.RedBlackTree.great.left != null))  ==>  (DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.left.color)
((DataStructures.RedBlackTree.great != null) && (DataStructures.RedBlackTree.great.right != null))  ==>  (DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.right.color)
(DataStructures.RedBlackTree.great != null)  ==>  (DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.color)
===========================================================================
DataStructures.RedBlackTree:::OBJECT
    Variables: this this.header this.header.element this.header.element.getClass() this.header.left this.header.left.element this.header.left.element.getClass() this.header.left.left this.header.left.right this.header.left.color this.header.right this.header.right.element this.header.right.element.getClass() this.header.right.left this.header.right.right this.header.right.color this.header.color DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color
this.header.left == DataStructures.RedBlackTree.nullNode
this.header.left.element == DataStructures.RedBlackTree.nullNode.element
this.header.left.left == DataStructures.RedBlackTree.nullNode
this.header.left.right == DataStructures.RedBlackTree.nullNode
this.header.left.color == DataStructures.RedBlackTree.BLACK
this.header.color == DataStructures.RedBlackTree.BLACK
this != null
this.header != null
this.header != null
this.header.element != null
this.header.element != null
this.header.element.getClass() == DataStructures.MyInteger.class
this.header.right != null
this.header.right.left != null
this.header.right.right != null
this.header.right.color == 0 || this.header.right.color == 1
(DataStructures.RedBlackTree.nullNode.element != null)  ==>  (this.header.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass())
((this.header.left.element != null) && (DataStructures.RedBlackTree.nullNode.element != null))  ==>  (this.header.left.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass())
((this.header.right.element != null) && (DataStructures.RedBlackTree.nullNode.element != null))  ==>  (this.header.right.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass())
this.header.right.color <= DataStructures.RedBlackTree.BLACK
this.header.right.color >= DataStructures.RedBlackTree.RED
(DataStructures.RedBlackTree.current != null)  ==>  (this.header.right.color >= DataStructures.RedBlackTree.current.color)
((DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.right != null))  ==>  (this.header.right.color >= DataStructures.RedBlackTree.parent.right.color)
(DataStructures.RedBlackTree.parent != null)  ==>  (this.header.right.color >= DataStructures.RedBlackTree.parent.color)
(DataStructures.RedBlackTree.grand != null)  ==>  (this.header.right.color >= DataStructures.RedBlackTree.grand.color)
((DataStructures.RedBlackTree.great != null) && (DataStructures.RedBlackTree.great.right != null))  ==>  (this.header.right.color >= DataStructures.RedBlackTree.great.right.color)
===========================================================================
DataStructures.RedBlackTree.RedBlackTree(DataStructures.Comparable):::ENTER
    Variables: negInf negInf.getClass()
negInf != null
negInf.getClass() == DataStructures.MyInteger.class
===========================================================================
DataStructures.RedBlackTree.RedBlackTree(DataStructures.Comparable):::EXIT
    Variables: this this.header this.header.element this.header.element.getClass() this.header.left this.header.left.element this.header.left.element.getClass() this.header.left.left this.header.left.right this.header.left.color this.header.right this.header.right.element this.header.right.element.getClass() this.header.right.left this.header.right.right this.header.right.color this.header.color DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color negInf negInf.getClass() orig(negInf) orig(negInf.getClass())
this.header.element == \old(negInf)
this.header.right == DataStructures.RedBlackTree.nullNode
this.header.right.element == DataStructures.RedBlackTree.nullNode.element
this.header.right.left == DataStructures.RedBlackTree.nullNode
this.header.right.right == DataStructures.RedBlackTree.nullNode
this.header.right.color == DataStructures.RedBlackTree.BLACK
DataStructures.RedBlackTree.current == DataStructures.RedBlackTree.parent
DataStructures.RedBlackTree.current == DataStructures.RedBlackTree.grand
DataStructures.RedBlackTree.current == DataStructures.RedBlackTree.great
DataStructures.RedBlackTree.nullNode.element == null
DataStructures.RedBlackTree.current == null
this.header.element.getClass() == \old(negInf.getClass())
===========================================================================
DataStructures.RedBlackTree.find(DataStructures.Comparable):::ENTER
    Variables: this this.header this.header.element this.header.element.getClass() this.header.left this.header.left.element this.header.left.element.getClass() this.header.left.left this.header.left.right this.header.left.color this.header.right this.header.right.element this.header.right.element.getClass() this.header.right.left this.header.right.right this.header.right.color this.header.color DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color x x.getClass()
this.header.right.color == DataStructures.RedBlackTree.BLACK
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right.right
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.parent.left.element
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.parent.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.parent.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.great.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.grand.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.parent == DataStructures.RedBlackTree.grand.left
DataStructures.RedBlackTree.parent == DataStructures.RedBlackTree.great.left.left
DataStructures.RedBlackTree.parent.element == DataStructures.RedBlackTree.grand.left.element
DataStructures.RedBlackTree.parent.right == DataStructures.RedBlackTree.grand.left.right
DataStructures.RedBlackTree.grand == DataStructures.RedBlackTree.great.left
DataStructures.RedBlackTree.grand.element == DataStructures.RedBlackTree.great.left.element
DataStructures.RedBlackTree.grand.right == DataStructures.RedBlackTree.great.left.right
this.header.right != null
this.header.right.element != null
this.header.right.element != null
this.header.right.left != null
this.header.right.right != null
DataStructures.RedBlackTree.nullNode.element != null
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.MyInteger.class
DataStructures.RedBlackTree.current != null
DataStructures.RedBlackTree.current.element != null
DataStructures.RedBlackTree.current.left != null
DataStructures.RedBlackTree.current.left.element != null
DataStructures.RedBlackTree.current.left.left != null
DataStructures.RedBlackTree.current.left.right != null
DataStructures.RedBlackTree.current.left.color == 0 || DataStructures.RedBlackTree.current.left.color == 1
DataStructures.RedBlackTree.current.right != null
DataStructures.RedBlackTree.current.right.element != null
DataStructures.RedBlackTree.current.right.left != null
DataStructures.RedBlackTree.current.right.right != null
DataStructures.RedBlackTree.current.right.color == 0 || DataStructures.RedBlackTree.current.right.color == 1
DataStructures.RedBlackTree.current.color == 0 || DataStructures.RedBlackTree.current.color == 1
DataStructures.RedBlackTree.parent != null
DataStructures.RedBlackTree.parent != null
DataStructures.RedBlackTree.parent.element != null
DataStructures.RedBlackTree.parent.element != null
DataStructures.RedBlackTree.parent.right != null
DataStructures.RedBlackTree.parent.right != null
DataStructures.RedBlackTree.parent.right.element != null
DataStructures.RedBlackTree.parent.right.element != null
DataStructures.RedBlackTree.grand != null
DataStructures.RedBlackTree.grand != null
DataStructures.RedBlackTree.grand.element != null
DataStructures.RedBlackTree.grand.element != null
DataStructures.RedBlackTree.grand.right != null
DataStructures.RedBlackTree.grand.right != null
DataStructures.RedBlackTree.grand.right.element != null
DataStructures.RedBlackTree.grand.right.element != null
DataStructures.RedBlackTree.great != null
DataStructures.RedBlackTree.great != null
DataStructures.RedBlackTree.great.element != null
DataStructures.RedBlackTree.great.element != null
DataStructures.RedBlackTree.great.right != null
DataStructures.RedBlackTree.great.right != null
DataStructures.RedBlackTree.great.right.element != null
DataStructures.RedBlackTree.great.right.element != null
DataStructures.RedBlackTree.great.right.left != null
DataStructures.RedBlackTree.great.right.left != null
DataStructures.RedBlackTree.great.right.right != null
DataStructures.RedBlackTree.great.right.right != null
x != null
this.header.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
this.header.left.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
this.header.right.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == x.getClass()
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.current.left.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.current.right.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.current.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.current.left.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.current.right.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.current.color
===========================================================================
DataStructures.RedBlackTree.find(DataStructures.Comparable):::EXIT128
    Variables: this this.header this.header.element this.header.element.getClass() this.header.left this.header.left.element this.header.left.element.getClass() this.header.left.left this.header.left.right this.header.left.color this.header.right this.header.right.element this.header.right.element.getClass() this.header.right.left this.header.right.right this.header.right.color this.header.color DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color x x.getClass() return return.getClass() orig(this) orig(this.header) orig(this.header.element) orig(this.header.element.getClass()) orig(this.header.left) orig(this.header.left.element) orig(this.header.left.element.getClass()) orig(this.header.left.left) orig(this.header.left.right) orig(this.header.left.color) orig(this.header.right) orig(this.header.right.element) orig(this.header.right.element.getClass()) orig(this.header.right.left) orig(this.header.right.right) orig(this.header.right.color) orig(this.header.color) orig(DataStructures.RedBlackTree.nullNode) orig(DataStructures.RedBlackTree.nullNode.element) orig(DataStructures.RedBlackTree.nullNode.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left) orig(DataStructures.RedBlackTree.nullNode.left.element) orig(DataStructures.RedBlackTree.nullNode.left.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left.left) orig(DataStructures.RedBlackTree.nullNode.left.right) orig(DataStructures.RedBlackTree.nullNode.left.color) orig(DataStructures.RedBlackTree.nullNode.right) orig(DataStructures.RedBlackTree.nullNode.right.element) orig(DataStructures.RedBlackTree.nullNode.right.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.right.left) orig(DataStructures.RedBlackTree.nullNode.right.right) orig(DataStructures.RedBlackTree.nullNode.right.color) orig(DataStructures.RedBlackTree.nullNode.color) orig(DataStructures.RedBlackTree.current) orig(DataStructures.RedBlackTree.current.element) orig(DataStructures.RedBlackTree.current.element.getClass()) orig(DataStructures.RedBlackTree.current.left) orig(DataStructures.RedBlackTree.current.left.element) orig(DataStructures.RedBlackTree.current.left.element.getClass()) orig(DataStructures.RedBlackTree.current.left.left) orig(DataStructures.RedBlackTree.current.left.right) orig(DataStructures.RedBlackTree.current.left.color) orig(DataStructures.RedBlackTree.current.right) orig(DataStructures.RedBlackTree.current.right.element) orig(DataStructures.RedBlackTree.current.right.element.getClass()) orig(DataStructures.RedBlackTree.current.right.left) orig(DataStructures.RedBlackTree.current.right.right) orig(DataStructures.RedBlackTree.current.right.color) orig(DataStructures.RedBlackTree.current.color) orig(DataStructures.RedBlackTree.parent) orig(DataStructures.RedBlackTree.parent.element) orig(DataStructures.RedBlackTree.parent.element.getClass()) orig(DataStructures.RedBlackTree.parent.left) orig(DataStructures.RedBlackTree.parent.left.element) orig(DataStructures.RedBlackTree.parent.left.element.getClass()) orig(DataStructures.RedBlackTree.parent.left.left) orig(DataStructures.RedBlackTree.parent.left.right) orig(DataStructures.RedBlackTree.parent.left.color) orig(DataStructures.RedBlackTree.parent.right) orig(DataStructures.RedBlackTree.parent.right.element) orig(DataStructures.RedBlackTree.parent.right.element.getClass()) orig(DataStructures.RedBlackTree.parent.right.left) orig(DataStructures.RedBlackTree.parent.right.right) orig(DataStructures.RedBlackTree.parent.right.color) orig(DataStructures.RedBlackTree.parent.color) orig(DataStructures.RedBlackTree.grand) orig(DataStructures.RedBlackTree.grand.element) orig(DataStructures.RedBlackTree.grand.element.getClass()) orig(DataStructures.RedBlackTree.grand.left) orig(DataStructures.RedBlackTree.grand.left.element) orig(DataStructures.RedBlackTree.grand.left.element.getClass()) orig(DataStructures.RedBlackTree.grand.left.left) orig(DataStructures.RedBlackTree.grand.left.right) orig(DataStructures.RedBlackTree.grand.left.color) orig(DataStructures.RedBlackTree.grand.right) orig(DataStructures.RedBlackTree.grand.right.element) orig(DataStructures.RedBlackTree.grand.right.element.getClass()) orig(DataStructures.RedBlackTree.grand.right.left) orig(DataStructures.RedBlackTree.grand.right.right) orig(DataStructures.RedBlackTree.grand.right.color) orig(DataStructures.RedBlackTree.grand.color) orig(DataStructures.RedBlackTree.great) orig(DataStructures.RedBlackTree.great.element) orig(DataStructures.RedBlackTree.great.element.getClass()) orig(DataStructures.RedBlackTree.great.left) orig(DataStructures.RedBlackTree.great.left.element) orig(DataStructures.RedBlackTree.great.left.element.getClass()) orig(DataStructures.RedBlackTree.great.left.left) orig(DataStructures.RedBlackTree.great.left.right) orig(DataStructures.RedBlackTree.great.left.color) orig(DataStructures.RedBlackTree.great.right) orig(DataStructures.RedBlackTree.great.right.element) orig(DataStructures.RedBlackTree.great.right.element.getClass()) orig(DataStructures.RedBlackTree.great.right.left) orig(DataStructures.RedBlackTree.great.right.right) orig(DataStructures.RedBlackTree.great.right.color) orig(DataStructures.RedBlackTree.great.color) orig(x) orig(x.getClass())
assignable this.header.left.element, DataStructures.RedBlackTree.nullNode.element, DataStructures.RedBlackTree.nullNode.left.element, DataStructures.RedBlackTree.nullNode.right.element, DataStructures.RedBlackTree.current, DataStructures.RedBlackTree.current.element, DataStructures.RedBlackTree.current.left, DataStructures.RedBlackTree.current.left.element, DataStructures.RedBlackTree.current.left.left, DataStructures.RedBlackTree.current.left.right, DataStructures.RedBlackTree.current.left.color, DataStructures.RedBlackTree.current.right, DataStructures.RedBlackTree.current.right.element, DataStructures.RedBlackTree.current.right.left, DataStructures.RedBlackTree.current.right.right, DataStructures.RedBlackTree.current.right.color, DataStructures.RedBlackTree.current.color, DataStructures.RedBlackTree.parent.left.element
===========================================================================
DataStructures.RedBlackTree.find(DataStructures.Comparable):::EXIT
    Variables: this this.header this.header.element this.header.element.getClass() this.header.left this.header.left.element this.header.left.element.getClass() this.header.left.left this.header.left.right this.header.left.color this.header.right this.header.right.element this.header.right.element.getClass() this.header.right.left this.header.right.right this.header.right.color this.header.color DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color x x.getClass() return return.getClass() orig(this) orig(this.header) orig(this.header.element) orig(this.header.element.getClass()) orig(this.header.left) orig(this.header.left.element) orig(this.header.left.element.getClass()) orig(this.header.left.left) orig(this.header.left.right) orig(this.header.left.color) orig(this.header.right) orig(this.header.right.element) orig(this.header.right.element.getClass()) orig(this.header.right.left) orig(this.header.right.right) orig(this.header.right.color) orig(this.header.color) orig(DataStructures.RedBlackTree.nullNode) orig(DataStructures.RedBlackTree.nullNode.element) orig(DataStructures.RedBlackTree.nullNode.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left) orig(DataStructures.RedBlackTree.nullNode.left.element) orig(DataStructures.RedBlackTree.nullNode.left.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left.left) orig(DataStructures.RedBlackTree.nullNode.left.right) orig(DataStructures.RedBlackTree.nullNode.left.color) orig(DataStructures.RedBlackTree.nullNode.right) orig(DataStructures.RedBlackTree.nullNode.right.element) orig(DataStructures.RedBlackTree.nullNode.right.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.right.left) orig(DataStructures.RedBlackTree.nullNode.right.right) orig(DataStructures.RedBlackTree.nullNode.right.color) orig(DataStructures.RedBlackTree.nullNode.color) orig(DataStructures.RedBlackTree.current) orig(DataStructures.RedBlackTree.current.element) orig(DataStructures.RedBlackTree.current.element.getClass()) orig(DataStructures.RedBlackTree.current.left) orig(DataStructures.RedBlackTree.current.left.element) orig(DataStructures.RedBlackTree.current.left.element.getClass()) orig(DataStructures.RedBlackTree.current.left.left) orig(DataStructures.RedBlackTree.current.left.right) orig(DataStructures.RedBlackTree.current.left.color) orig(DataStructures.RedBlackTree.current.right) orig(DataStructures.RedBlackTree.current.right.element) orig(DataStructures.RedBlackTree.current.right.element.getClass()) orig(DataStructures.RedBlackTree.current.right.left) orig(DataStructures.RedBlackTree.current.right.right) orig(DataStructures.RedBlackTree.current.right.color) orig(DataStructures.RedBlackTree.current.color) orig(DataStructures.RedBlackTree.parent) orig(DataStructures.RedBlackTree.parent.element) orig(DataStructures.RedBlackTree.parent.element.getClass()) orig(DataStructures.RedBlackTree.parent.left) orig(DataStructures.RedBlackTree.parent.left.element) orig(DataStructures.RedBlackTree.parent.left.element.getClass()) orig(DataStructures.RedBlackTree.parent.left.left) orig(DataStructures.RedBlackTree.parent.left.right) orig(DataStructures.RedBlackTree.parent.left.color) orig(DataStructures.RedBlackTree.parent.right) orig(DataStructures.RedBlackTree.parent.right.element) orig(DataStructures.RedBlackTree.parent.right.element.getClass()) orig(DataStructures.RedBlackTree.parent.right.left) orig(DataStructures.RedBlackTree.parent.right.right) orig(DataStructures.RedBlackTree.parent.right.color) orig(DataStructures.RedBlackTree.parent.color) orig(DataStructures.RedBlackTree.grand) orig(DataStructures.RedBlackTree.grand.element) orig(DataStructures.RedBlackTree.grand.element.getClass()) orig(DataStructures.RedBlackTree.grand.left) orig(DataStructures.RedBlackTree.grand.left.element) orig(DataStructures.RedBlackTree.grand.left.element.getClass()) orig(DataStructures.RedBlackTree.grand.left.left) orig(DataStructures.RedBlackTree.grand.left.right) orig(DataStructures.RedBlackTree.grand.left.color) orig(DataStructures.RedBlackTree.grand.right) orig(DataStructures.RedBlackTree.grand.right.element) orig(DataStructures.RedBlackTree.grand.right.element.getClass()) orig(DataStructures.RedBlackTree.grand.right.left) orig(DataStructures.RedBlackTree.grand.right.right) orig(DataStructures.RedBlackTree.grand.right.color) orig(DataStructures.RedBlackTree.grand.color) orig(DataStructures.RedBlackTree.great) orig(DataStructures.RedBlackTree.great.element) orig(DataStructures.RedBlackTree.great.element.getClass()) orig(DataStructures.RedBlackTree.great.left) orig(DataStructures.RedBlackTree.great.left.element) orig(DataStructures.RedBlackTree.great.left.element.getClass()) orig(DataStructures.RedBlackTree.great.left.left) orig(DataStructures.RedBlackTree.great.left.right) orig(DataStructures.RedBlackTree.great.left.color) orig(DataStructures.RedBlackTree.great.right) orig(DataStructures.RedBlackTree.great.right.element) orig(DataStructures.RedBlackTree.great.right.element.getClass()) orig(DataStructures.RedBlackTree.great.right.left) orig(DataStructures.RedBlackTree.great.right.right) orig(DataStructures.RedBlackTree.great.right.color) orig(DataStructures.RedBlackTree.great.color) orig(x) orig(x.getClass())
assignable this.header.left.element, DataStructures.RedBlackTree.nullNode.element, DataStructures.RedBlackTree.nullNode.left.element, DataStructures.RedBlackTree.nullNode.right.element, DataStructures.RedBlackTree.current, DataStructures.RedBlackTree.current.element, DataStructures.RedBlackTree.current.left, DataStructures.RedBlackTree.current.left.element, DataStructures.RedBlackTree.current.left.left, DataStructures.RedBlackTree.current.left.right, DataStructures.RedBlackTree.current.left.color, DataStructures.RedBlackTree.current.right, DataStructures.RedBlackTree.current.right.element, DataStructures.RedBlackTree.current.right.left, DataStructures.RedBlackTree.current.right.right, DataStructures.RedBlackTree.current.right.color, DataStructures.RedBlackTree.current.color, DataStructures.RedBlackTree.parent.left.element
this.header == \old(this.header)
this.header.element == \old(this.header.element)
this.header.right == \old(this.header.right)
this.header.right.element == \old(this.header.right.element)
this.header.right.left == \old(this.header.right.left)
this.header.right.right == \old(this.header.right.right)
this.header.right.color == DataStructures.RedBlackTree.BLACK
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right.right
DataStructures.RedBlackTree.nullNode == \old(this.header.left)
DataStructures.RedBlackTree.nullNode == \old(this.header.left.left)
DataStructures.RedBlackTree.nullNode == \old(this.header.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.right.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.grand.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.grand.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.grand.right.right)
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.parent.left.element
DataStructures.RedBlackTree.nullNode.element == \old(x)
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.parent.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.parent.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.great.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.grand.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.current.element == \result
DataStructures.RedBlackTree.parent == DataStructures.RedBlackTree.grand.left
DataStructures.RedBlackTree.parent == DataStructures.RedBlackTree.great.left.left
DataStructures.RedBlackTree.parent == \old(DataStructures.RedBlackTree.parent)
DataStructures.RedBlackTree.parent == \old(DataStructures.RedBlackTree.grand.left)
DataStructures.RedBlackTree.parent == \old(DataStructures.RedBlackTree.great.left.left)
DataStructures.RedBlackTree.parent.element == DataStructures.RedBlackTree.grand.left.element
DataStructures.RedBlackTree.parent.element == \old(DataStructures.RedBlackTree.parent.element)
DataStructures.RedBlackTree.parent.element == \old(DataStructures.RedBlackTree.grand.left.element)
DataStructures.RedBlackTree.parent.right == DataStructures.RedBlackTree.grand.left.right
DataStructures.RedBlackTree.parent.right == \old(DataStructures.RedBlackTree.parent.right)
DataStructures.RedBlackTree.parent.right == \old(DataStructures.RedBlackTree.grand.left.right)
DataStructures.RedBlackTree.parent.right.element == \old(DataStructures.RedBlackTree.parent.right.element)
DataStructures.RedBlackTree.grand == DataStructures.RedBlackTree.great.left
DataStructures.RedBlackTree.grand == \old(DataStructures.RedBlackTree.grand)
DataStructures.RedBlackTree.grand == \old(DataStructures.RedBlackTree.great.left)
DataStructures.RedBlackTree.grand.element == DataStructures.RedBlackTree.great.left.element
DataStructures.RedBlackTree.grand.element == \old(DataStructures.RedBlackTree.grand.element)
DataStructures.RedBlackTree.grand.element == \old(DataStructures.RedBlackTree.great.left.element)
DataStructures.RedBlackTree.grand.right == DataStructures.RedBlackTree.great.left.right
DataStructures.RedBlackTree.grand.right == \old(DataStructures.RedBlackTree.grand.right)
DataStructures.RedBlackTree.grand.right == \old(DataStructures.RedBlackTree.great.left.right)
DataStructures.RedBlackTree.grand.right.element == \old(DataStructures.RedBlackTree.grand.right.element)
DataStructures.RedBlackTree.great == \old(DataStructures.RedBlackTree.great)
DataStructures.RedBlackTree.great.element == \old(DataStructures.RedBlackTree.great.element)
DataStructures.RedBlackTree.great.right == \old(DataStructures.RedBlackTree.great.right)
DataStructures.RedBlackTree.great.right.element == \old(DataStructures.RedBlackTree.great.right.element)
DataStructures.RedBlackTree.great.right.left == \old(DataStructures.RedBlackTree.great.right.left)
DataStructures.RedBlackTree.great.right.right == \old(DataStructures.RedBlackTree.great.right.right)
this.header.right != null
this.header.right.element != null
this.header.right.element != null
this.header.right.left != null
this.header.right.right != null
DataStructures.RedBlackTree.nullNode.element != null
DataStructures.RedBlackTree.current != null
DataStructures.RedBlackTree.current.left != null
DataStructures.RedBlackTree.current.left.element != null
DataStructures.RedBlackTree.current.left.left != null
DataStructures.RedBlackTree.current.left.right != null
DataStructures.RedBlackTree.current.left.color == 0 || DataStructures.RedBlackTree.current.left.color == 1
DataStructures.RedBlackTree.current.right != null
DataStructures.RedBlackTree.current.right.element != null
DataStructures.RedBlackTree.current.right.left != null
DataStructures.RedBlackTree.current.right.right != null
DataStructures.RedBlackTree.current.right.color == 0 || DataStructures.RedBlackTree.current.right.color == 1
DataStructures.RedBlackTree.current.color == 0 || DataStructures.RedBlackTree.current.color == 1
DataStructures.RedBlackTree.parent != null
DataStructures.RedBlackTree.parent != null
DataStructures.RedBlackTree.parent.element != null
DataStructures.RedBlackTree.parent.element != null
DataStructures.RedBlackTree.parent.right != null
DataStructures.RedBlackTree.parent.right != null
DataStructures.RedBlackTree.parent.right.element != null
DataStructures.RedBlackTree.parent.right.element != null
DataStructures.RedBlackTree.grand != null
DataStructures.RedBlackTree.grand != null
DataStructures.RedBlackTree.grand.element != null
DataStructures.RedBlackTree.grand.element != null
DataStructures.RedBlackTree.grand.right != null
DataStructures.RedBlackTree.grand.right != null
DataStructures.RedBlackTree.grand.right.element != null
DataStructures.RedBlackTree.grand.right.element != null
DataStructures.RedBlackTree.great != null
DataStructures.RedBlackTree.great != null
DataStructures.RedBlackTree.great.element != null
DataStructures.RedBlackTree.great.element != null
DataStructures.RedBlackTree.great.right != null
DataStructures.RedBlackTree.great.right != null
DataStructures.RedBlackTree.great.right.element != null
DataStructures.RedBlackTree.great.right.element != null
DataStructures.RedBlackTree.great.right.left != null
DataStructures.RedBlackTree.great.right.left != null
DataStructures.RedBlackTree.great.right.right != null
DataStructures.RedBlackTree.great.right.right != null
\result != null
\result.getClass() == DataStructures.MyInteger.class
this.header.element.getClass() == \result.getClass()
this.header.left.element.getClass() == \result.getClass()
this.header.right.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.nullNode.left.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.nullNode.right.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.current.left.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.current.right.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.current.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.current.left.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.current.right.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.current.color
DataStructures.RedBlackTree.current.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.current.left.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.current.right.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.parent.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.parent.left.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.parent.right.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.grand.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.grand.left.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.grand.right.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.great.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.great.left.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.great.right.element.getClass() == \result.getClass()
\result.getClass() == \old(this.header.element.getClass())
\result.getClass() == \old(this.header.left.element.getClass())
\result.getClass() == \old(this.header.right.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.nullNode.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.nullNode.left.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.nullNode.right.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.current.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.current.left.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.current.right.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.parent.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.parent.left.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.parent.right.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.grand.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.grand.left.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.grand.right.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.great.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.great.left.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.great.right.element.getClass())
\result.getClass() == \old(x.getClass())
===========================================================================
DataStructures.RedBlackTree.findMax():::ENTER
    Variables: this this.header this.header.element this.header.element.getClass() this.header.left this.header.left.element this.header.left.element.getClass() this.header.left.left this.header.left.right this.header.left.color this.header.right this.header.right.element this.header.right.element.getClass() this.header.right.left this.header.right.right this.header.right.color this.header.color DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color
this.header.right.color == DataStructures.RedBlackTree.BLACK
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right.right
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.left.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.right.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.parent.left.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.parent.right.element
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.parent.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.parent.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.great.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.current.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.grand.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.current == DataStructures.RedBlackTree.parent.right
DataStructures.RedBlackTree.current == DataStructures.RedBlackTree.grand.left.right
DataStructures.RedBlackTree.parent == DataStructures.RedBlackTree.grand.left
DataStructures.RedBlackTree.parent == DataStructures.RedBlackTree.great.left.left
DataStructures.RedBlackTree.parent.element == DataStructures.RedBlackTree.grand.left.element
DataStructures.RedBlackTree.grand == DataStructures.RedBlackTree.great.left
DataStructures.RedBlackTree.grand.element == DataStructures.RedBlackTree.great.left.element
DataStructures.RedBlackTree.grand.right == DataStructures.RedBlackTree.great.left.right
this.header.right != null
this.header.right.element != null
this.header.right.left != null
this.header.right.right != null
DataStructures.RedBlackTree.nullNode.element != null
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.MyInteger.class
DataStructures.RedBlackTree.current != null
DataStructures.RedBlackTree.parent != null
DataStructures.RedBlackTree.parent.element != null
DataStructures.RedBlackTree.grand != null
DataStructures.RedBlackTree.grand.element != null
DataStructures.RedBlackTree.grand.right != null
DataStructures.RedBlackTree.grand.right.element != null
DataStructures.RedBlackTree.great != null
DataStructures.RedBlackTree.great.element != null
DataStructures.RedBlackTree.great.right != null
DataStructures.RedBlackTree.great.right.element != null
DataStructures.RedBlackTree.great.right.left != null
DataStructures.RedBlackTree.great.right.right != null
this.header.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
this.header.left.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
this.header.right.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.right.element.getClass()
===========================================================================
DataStructures.RedBlackTree.findMax():::EXIT108
    Variables: this this.header this.header.element this.header.element.getClass() this.header.left this.header.left.element this.header.left.element.getClass() this.header.left.left this.header.left.right this.header.left.color this.header.right this.header.right.element this.header.right.element.getClass() this.header.right.left this.header.right.right this.header.right.color this.header.color DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color return return.getClass() orig(this) orig(this.header) orig(this.header.element) orig(this.header.element.getClass()) orig(this.header.left) orig(this.header.left.element) orig(this.header.left.element.getClass()) orig(this.header.left.left) orig(this.header.left.right) orig(this.header.left.color) orig(this.header.right) orig(this.header.right.element) orig(this.header.right.element.getClass()) orig(this.header.right.left) orig(this.header.right.right) orig(this.header.right.color) orig(this.header.color) orig(DataStructures.RedBlackTree.nullNode) orig(DataStructures.RedBlackTree.nullNode.element) orig(DataStructures.RedBlackTree.nullNode.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left) orig(DataStructures.RedBlackTree.nullNode.left.element) orig(DataStructures.RedBlackTree.nullNode.left.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left.left) orig(DataStructures.RedBlackTree.nullNode.left.right) orig(DataStructures.RedBlackTree.nullNode.left.color) orig(DataStructures.RedBlackTree.nullNode.right) orig(DataStructures.RedBlackTree.nullNode.right.element) orig(DataStructures.RedBlackTree.nullNode.right.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.right.left) orig(DataStructures.RedBlackTree.nullNode.right.right) orig(DataStructures.RedBlackTree.nullNode.right.color) orig(DataStructures.RedBlackTree.nullNode.color) orig(DataStructures.RedBlackTree.current) orig(DataStructures.RedBlackTree.current.element) orig(DataStructures.RedBlackTree.current.element.getClass()) orig(DataStructures.RedBlackTree.current.left) orig(DataStructures.RedBlackTree.current.left.element) orig(DataStructures.RedBlackTree.current.left.element.getClass()) orig(DataStructures.RedBlackTree.current.left.left) orig(DataStructures.RedBlackTree.current.left.right) orig(DataStructures.RedBlackTree.current.left.color) orig(DataStructures.RedBlackTree.current.right) orig(DataStructures.RedBlackTree.current.right.element) orig(DataStructures.RedBlackTree.current.right.element.getClass()) orig(DataStructures.RedBlackTree.current.right.left) orig(DataStructures.RedBlackTree.current.right.right) orig(DataStructures.RedBlackTree.current.right.color) orig(DataStructures.RedBlackTree.current.color) orig(DataStructures.RedBlackTree.parent) orig(DataStructures.RedBlackTree.parent.element) orig(DataStructures.RedBlackTree.parent.element.getClass()) orig(DataStructures.RedBlackTree.parent.left) orig(DataStructures.RedBlackTree.parent.left.element) orig(DataStructures.RedBlackTree.parent.left.element.getClass()) orig(DataStructures.RedBlackTree.parent.left.left) orig(DataStructures.RedBlackTree.parent.left.right) orig(DataStructures.RedBlackTree.parent.left.color) orig(DataStructures.RedBlackTree.parent.right) orig(DataStructures.RedBlackTree.parent.right.element) orig(DataStructures.RedBlackTree.parent.right.element.getClass()) orig(DataStructures.RedBlackTree.parent.right.left) orig(DataStructures.RedBlackTree.parent.right.right) orig(DataStructures.RedBlackTree.parent.right.color) orig(DataStructures.RedBlackTree.parent.color) orig(DataStructures.RedBlackTree.grand) orig(DataStructures.RedBlackTree.grand.element) orig(DataStructures.RedBlackTree.grand.element.getClass()) orig(DataStructures.RedBlackTree.grand.left) orig(DataStructures.RedBlackTree.grand.left.element) orig(DataStructures.RedBlackTree.grand.left.element.getClass()) orig(DataStructures.RedBlackTree.grand.left.left) orig(DataStructures.RedBlackTree.grand.left.right) orig(DataStructures.RedBlackTree.grand.left.color) orig(DataStructures.RedBlackTree.grand.right) orig(DataStructures.RedBlackTree.grand.right.element) orig(DataStructures.RedBlackTree.grand.right.element.getClass()) orig(DataStructures.RedBlackTree.grand.right.left) orig(DataStructures.RedBlackTree.grand.right.right) orig(DataStructures.RedBlackTree.grand.right.color) orig(DataStructures.RedBlackTree.grand.color) orig(DataStructures.RedBlackTree.great) orig(DataStructures.RedBlackTree.great.element) orig(DataStructures.RedBlackTree.great.element.getClass()) orig(DataStructures.RedBlackTree.great.left) orig(DataStructures.RedBlackTree.great.left.element) orig(DataStructures.RedBlackTree.great.left.element.getClass()) orig(DataStructures.RedBlackTree.great.left.left) orig(DataStructures.RedBlackTree.great.left.right) orig(DataStructures.RedBlackTree.great.left.color) orig(DataStructures.RedBlackTree.great.right) orig(DataStructures.RedBlackTree.great.right.element) orig(DataStructures.RedBlackTree.great.right.element.getClass()) orig(DataStructures.RedBlackTree.great.right.left) orig(DataStructures.RedBlackTree.great.right.right) orig(DataStructures.RedBlackTree.great.right.color) orig(DataStructures.RedBlackTree.great.color)
===========================================================================
DataStructures.RedBlackTree.findMax():::EXIT
    Variables: this this.header this.header.element this.header.element.getClass() this.header.left this.header.left.element this.header.left.element.getClass() this.header.left.left this.header.left.right this.header.left.color this.header.right this.header.right.element this.header.right.element.getClass() this.header.right.left this.header.right.right this.header.right.color this.header.color DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color return return.getClass() orig(this) orig(this.header) orig(this.header.element) orig(this.header.element.getClass()) orig(this.header.left) orig(this.header.left.element) orig(this.header.left.element.getClass()) orig(this.header.left.left) orig(this.header.left.right) orig(this.header.left.color) orig(this.header.right) orig(this.header.right.element) orig(this.header.right.element.getClass()) orig(this.header.right.left) orig(this.header.right.right) orig(this.header.right.color) orig(this.header.color) orig(DataStructures.RedBlackTree.nullNode) orig(DataStructures.RedBlackTree.nullNode.element) orig(DataStructures.RedBlackTree.nullNode.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left) orig(DataStructures.RedBlackTree.nullNode.left.element) orig(DataStructures.RedBlackTree.nullNode.left.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left.left) orig(DataStructures.RedBlackTree.nullNode.left.right) orig(DataStructures.RedBlackTree.nullNode.left.color) orig(DataStructures.RedBlackTree.nullNode.right) orig(DataStructures.RedBlackTree.nullNode.right.element) orig(DataStructures.RedBlackTree.nullNode.right.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.right.left) orig(DataStructures.RedBlackTree.nullNode.right.right) orig(DataStructures.RedBlackTree.nullNode.right.color) orig(DataStructures.RedBlackTree.nullNode.color) orig(DataStructures.RedBlackTree.current) orig(DataStructures.RedBlackTree.current.element) orig(DataStructures.RedBlackTree.current.element.getClass()) orig(DataStructures.RedBlackTree.current.left) orig(DataStructures.RedBlackTree.current.left.element) orig(DataStructures.RedBlackTree.current.left.element.getClass()) orig(DataStructures.RedBlackTree.current.left.left) orig(DataStructures.RedBlackTree.current.left.right) orig(DataStructures.RedBlackTree.current.left.color) orig(DataStructures.RedBlackTree.current.right) orig(DataStructures.RedBlackTree.current.right.element) orig(DataStructures.RedBlackTree.current.right.element.getClass()) orig(DataStructures.RedBlackTree.current.right.left) orig(DataStructures.RedBlackTree.current.right.right) orig(DataStructures.RedBlackTree.current.right.color) orig(DataStructures.RedBlackTree.current.color) orig(DataStructures.RedBlackTree.parent) orig(DataStructures.RedBlackTree.parent.element) orig(DataStructures.RedBlackTree.parent.element.getClass()) orig(DataStructures.RedBlackTree.parent.left) orig(DataStructures.RedBlackTree.parent.left.element) orig(DataStructures.RedBlackTree.parent.left.element.getClass()) orig(DataStructures.RedBlackTree.parent.left.left) orig(DataStructures.RedBlackTree.parent.left.right) orig(DataStructures.RedBlackTree.parent.left.color) orig(DataStructures.RedBlackTree.parent.right) orig(DataStructures.RedBlackTree.parent.right.element) orig(DataStructures.RedBlackTree.parent.right.element.getClass()) orig(DataStructures.RedBlackTree.parent.right.left) orig(DataStructures.RedBlackTree.parent.right.right) orig(DataStructures.RedBlackTree.parent.right.color) orig(DataStructures.RedBlackTree.parent.color) orig(DataStructures.RedBlackTree.grand) orig(DataStructures.RedBlackTree.grand.element) orig(DataStructures.RedBlackTree.grand.element.getClass()) orig(DataStructures.RedBlackTree.grand.left) orig(DataStructures.RedBlackTree.grand.left.element) orig(DataStructures.RedBlackTree.grand.left.element.getClass()) orig(DataStructures.RedBlackTree.grand.left.left) orig(DataStructures.RedBlackTree.grand.left.right) orig(DataStructures.RedBlackTree.grand.left.color) orig(DataStructures.RedBlackTree.grand.right) orig(DataStructures.RedBlackTree.grand.right.element) orig(DataStructures.RedBlackTree.grand.right.element.getClass()) orig(DataStructures.RedBlackTree.grand.right.left) orig(DataStructures.RedBlackTree.grand.right.right) orig(DataStructures.RedBlackTree.grand.right.color) orig(DataStructures.RedBlackTree.grand.color) orig(DataStructures.RedBlackTree.great) orig(DataStructures.RedBlackTree.great.element) orig(DataStructures.RedBlackTree.great.element.getClass()) orig(DataStructures.RedBlackTree.great.left) orig(DataStructures.RedBlackTree.great.left.element) orig(DataStructures.RedBlackTree.great.left.element.getClass()) orig(DataStructures.RedBlackTree.great.left.left) orig(DataStructures.RedBlackTree.great.left.right) orig(DataStructures.RedBlackTree.great.left.color) orig(DataStructures.RedBlackTree.great.right) orig(DataStructures.RedBlackTree.great.right.element) orig(DataStructures.RedBlackTree.great.right.element.getClass()) orig(DataStructures.RedBlackTree.great.right.left) orig(DataStructures.RedBlackTree.great.right.right) orig(DataStructures.RedBlackTree.great.right.color) orig(DataStructures.RedBlackTree.great.color)
this.header == \old(this.header)
this.header.element == \old(this.header.element)
this.header.right == \old(this.header.right)
this.header.right.element == \old(this.header.right.element)
this.header.right.left == \old(this.header.right.left)
this.header.right.right == \old(this.header.right.right)
this.header.right.color == DataStructures.RedBlackTree.BLACK
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right.right
DataStructures.RedBlackTree.nullNode == \old(this.header.left)
DataStructures.RedBlackTree.nullNode == \old(this.header.left.left)
DataStructures.RedBlackTree.nullNode == \old(this.header.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.right.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.right.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.grand.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.grand.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.grand.right.right)
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.left.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.right.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.parent.left.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.parent.right.element
DataStructures.RedBlackTree.nullNode.element == \old(this.header.left.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.nullNode.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.nullNode.left.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.nullNode.right.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.current.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.current.left.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.current.right.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.parent.left.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.parent.right.element)
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.parent.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.parent.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.great.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.current.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.grand.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.current == DataStructures.RedBlackTree.parent.right
DataStructures.RedBlackTree.current == DataStructures.RedBlackTree.grand.left.right
DataStructures.RedBlackTree.current == \old(DataStructures.RedBlackTree.current)
DataStructures.RedBlackTree.current == \old(DataStructures.RedBlackTree.parent.right)
DataStructures.RedBlackTree.current == \old(DataStructures.RedBlackTree.grand.left.right)
DataStructures.RedBlackTree.parent == DataStructures.RedBlackTree.grand.left
DataStructures.RedBlackTree.parent == DataStructures.RedBlackTree.great.left.left
DataStructures.RedBlackTree.parent == \old(DataStructures.RedBlackTree.parent)
DataStructures.RedBlackTree.parent == \old(DataStructures.RedBlackTree.grand.left)
DataStructures.RedBlackTree.parent == \old(DataStructures.RedBlackTree.great.left.left)
DataStructures.RedBlackTree.parent.element == DataStructures.RedBlackTree.grand.left.element
DataStructures.RedBlackTree.parent.element == \old(DataStructures.RedBlackTree.parent.element)
DataStructures.RedBlackTree.parent.element == \old(DataStructures.RedBlackTree.grand.left.element)
DataStructures.RedBlackTree.grand == DataStructures.RedBlackTree.great.left
DataStructures.RedBlackTree.grand == \old(DataStructures.RedBlackTree.grand)
DataStructures.RedBlackTree.grand == \old(DataStructures.RedBlackTree.great.left)
DataStructures.RedBlackTree.grand.element == DataStructures.RedBlackTree.great.left.element
DataStructures.RedBlackTree.grand.element == \old(DataStructures.RedBlackTree.grand.element)
DataStructures.RedBlackTree.grand.element == \old(DataStructures.RedBlackTree.great.left.element)
DataStructures.RedBlackTree.grand.right == DataStructures.RedBlackTree.great.left.right
DataStructures.RedBlackTree.grand.right == \old(DataStructures.RedBlackTree.grand.right)
DataStructures.RedBlackTree.grand.right == \old(DataStructures.RedBlackTree.great.left.right)
DataStructures.RedBlackTree.grand.right.element == \old(DataStructures.RedBlackTree.grand.right.element)
DataStructures.RedBlackTree.great == \old(DataStructures.RedBlackTree.great)
DataStructures.RedBlackTree.great.element == \old(DataStructures.RedBlackTree.great.element)
DataStructures.RedBlackTree.great.right == \old(DataStructures.RedBlackTree.great.right)
DataStructures.RedBlackTree.great.right.element == \old(DataStructures.RedBlackTree.great.right.element)
DataStructures.RedBlackTree.great.right.left == \old(DataStructures.RedBlackTree.great.right.left)
DataStructures.RedBlackTree.great.right.right == \old(DataStructures.RedBlackTree.great.right.right)
this.header.right != null
this.header.right.element != null
this.header.right.left != null
this.header.right.right != null
DataStructures.RedBlackTree.nullNode.element != null
DataStructures.RedBlackTree.current != null
DataStructures.RedBlackTree.parent != null
DataStructures.RedBlackTree.parent.element != null
DataStructures.RedBlackTree.grand != null
DataStructures.RedBlackTree.grand.element != null
DataStructures.RedBlackTree.grand.right != null
DataStructures.RedBlackTree.grand.right.element != null
DataStructures.RedBlackTree.great != null
DataStructures.RedBlackTree.great.element != null
DataStructures.RedBlackTree.great.right != null
DataStructures.RedBlackTree.great.right.element != null
DataStructures.RedBlackTree.great.right.left != null
DataStructures.RedBlackTree.great.right.right != null
\result != null
\result.getClass() == DataStructures.MyInteger.class
this.header.element.getClass() == \result.getClass()
this.header.left.element.getClass() == \result.getClass()
this.header.right.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.nullNode.left.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.nullNode.right.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.current.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.current.left.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.current.right.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.parent.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.parent.left.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.parent.right.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.grand.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.grand.left.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.grand.right.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.great.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.great.left.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.great.right.element.getClass() == \result.getClass()
\result.getClass() == \old(this.header.element.getClass())
\result.getClass() == \old(this.header.left.element.getClass())
\result.getClass() == \old(this.header.right.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.nullNode.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.nullNode.left.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.nullNode.right.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.current.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.current.left.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.current.right.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.parent.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.parent.left.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.parent.right.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.grand.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.grand.left.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.grand.right.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.great.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.great.left.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.great.right.element.getClass())
===========================================================================
DataStructures.RedBlackTree.findMin():::ENTER
    Variables: this this.header this.header.element this.header.element.getClass() this.header.left this.header.left.element this.header.left.element.getClass() this.header.left.left this.header.left.right this.header.left.color this.header.right this.header.right.element this.header.right.element.getClass() this.header.right.left this.header.right.right this.header.right.color this.header.color DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color
this.header.right.color == DataStructures.RedBlackTree.BLACK
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right.right
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.left.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.right.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.parent.left.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.parent.right.element
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.parent.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.parent.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.great.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.current.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.grand.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.current == DataStructures.RedBlackTree.parent.right
DataStructures.RedBlackTree.current == DataStructures.RedBlackTree.grand.left.right
DataStructures.RedBlackTree.parent == DataStructures.RedBlackTree.grand.left
DataStructures.RedBlackTree.parent == DataStructures.RedBlackTree.great.left.left
DataStructures.RedBlackTree.parent.element == DataStructures.RedBlackTree.grand.left.element
DataStructures.RedBlackTree.grand == DataStructures.RedBlackTree.great.left
DataStructures.RedBlackTree.grand.element == DataStructures.RedBlackTree.great.left.element
DataStructures.RedBlackTree.grand.right == DataStructures.RedBlackTree.great.left.right
this.header.right != null
this.header.right.element != null
this.header.right.left != null
this.header.right.right != null
DataStructures.RedBlackTree.nullNode.element != null
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.MyInteger.class
DataStructures.RedBlackTree.current != null
DataStructures.RedBlackTree.parent != null
DataStructures.RedBlackTree.parent.element != null
DataStructures.RedBlackTree.grand != null
DataStructures.RedBlackTree.grand.element != null
DataStructures.RedBlackTree.grand.right != null
DataStructures.RedBlackTree.grand.right.element != null
DataStructures.RedBlackTree.great != null
DataStructures.RedBlackTree.great.element != null
DataStructures.RedBlackTree.great.right != null
DataStructures.RedBlackTree.great.right.element != null
DataStructures.RedBlackTree.great.right.left != null
DataStructures.RedBlackTree.great.right.right != null
this.header.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
this.header.left.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
this.header.right.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.right.element.getClass()
===========================================================================
DataStructures.RedBlackTree.findMin():::EXIT91
    Variables: this this.header this.header.element this.header.element.getClass() this.header.left this.header.left.element this.header.left.element.getClass() this.header.left.left this.header.left.right this.header.left.color this.header.right this.header.right.element this.header.right.element.getClass() this.header.right.left this.header.right.right this.header.right.color this.header.color DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color return return.getClass() orig(this) orig(this.header) orig(this.header.element) orig(this.header.element.getClass()) orig(this.header.left) orig(this.header.left.element) orig(this.header.left.element.getClass()) orig(this.header.left.left) orig(this.header.left.right) orig(this.header.left.color) orig(this.header.right) orig(this.header.right.element) orig(this.header.right.element.getClass()) orig(this.header.right.left) orig(this.header.right.right) orig(this.header.right.color) orig(this.header.color) orig(DataStructures.RedBlackTree.nullNode) orig(DataStructures.RedBlackTree.nullNode.element) orig(DataStructures.RedBlackTree.nullNode.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left) orig(DataStructures.RedBlackTree.nullNode.left.element) orig(DataStructures.RedBlackTree.nullNode.left.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left.left) orig(DataStructures.RedBlackTree.nullNode.left.right) orig(DataStructures.RedBlackTree.nullNode.left.color) orig(DataStructures.RedBlackTree.nullNode.right) orig(DataStructures.RedBlackTree.nullNode.right.element) orig(DataStructures.RedBlackTree.nullNode.right.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.right.left) orig(DataStructures.RedBlackTree.nullNode.right.right) orig(DataStructures.RedBlackTree.nullNode.right.color) orig(DataStructures.RedBlackTree.nullNode.color) orig(DataStructures.RedBlackTree.current) orig(DataStructures.RedBlackTree.current.element) orig(DataStructures.RedBlackTree.current.element.getClass()) orig(DataStructures.RedBlackTree.current.left) orig(DataStructures.RedBlackTree.current.left.element) orig(DataStructures.RedBlackTree.current.left.element.getClass()) orig(DataStructures.RedBlackTree.current.left.left) orig(DataStructures.RedBlackTree.current.left.right) orig(DataStructures.RedBlackTree.current.left.color) orig(DataStructures.RedBlackTree.current.right) orig(DataStructures.RedBlackTree.current.right.element) orig(DataStructures.RedBlackTree.current.right.element.getClass()) orig(DataStructures.RedBlackTree.current.right.left) orig(DataStructures.RedBlackTree.current.right.right) orig(DataStructures.RedBlackTree.current.right.color) orig(DataStructures.RedBlackTree.current.color) orig(DataStructures.RedBlackTree.parent) orig(DataStructures.RedBlackTree.parent.element) orig(DataStructures.RedBlackTree.parent.element.getClass()) orig(DataStructures.RedBlackTree.parent.left) orig(DataStructures.RedBlackTree.parent.left.element) orig(DataStructures.RedBlackTree.parent.left.element.getClass()) orig(DataStructures.RedBlackTree.parent.left.left) orig(DataStructures.RedBlackTree.parent.left.right) orig(DataStructures.RedBlackTree.parent.left.color) orig(DataStructures.RedBlackTree.parent.right) orig(DataStructures.RedBlackTree.parent.right.element) orig(DataStructures.RedBlackTree.parent.right.element.getClass()) orig(DataStructures.RedBlackTree.parent.right.left) orig(DataStructures.RedBlackTree.parent.right.right) orig(DataStructures.RedBlackTree.parent.right.color) orig(DataStructures.RedBlackTree.parent.color) orig(DataStructures.RedBlackTree.grand) orig(DataStructures.RedBlackTree.grand.element) orig(DataStructures.RedBlackTree.grand.element.getClass()) orig(DataStructures.RedBlackTree.grand.left) orig(DataStructures.RedBlackTree.grand.left.element) orig(DataStructures.RedBlackTree.grand.left.element.getClass()) orig(DataStructures.RedBlackTree.grand.left.left) orig(DataStructures.RedBlackTree.grand.left.right) orig(DataStructures.RedBlackTree.grand.left.color) orig(DataStructures.RedBlackTree.grand.right) orig(DataStructures.RedBlackTree.grand.right.element) orig(DataStructures.RedBlackTree.grand.right.element.getClass()) orig(DataStructures.RedBlackTree.grand.right.left) orig(DataStructures.RedBlackTree.grand.right.right) orig(DataStructures.RedBlackTree.grand.right.color) orig(DataStructures.RedBlackTree.grand.color) orig(DataStructures.RedBlackTree.great) orig(DataStructures.RedBlackTree.great.element) orig(DataStructures.RedBlackTree.great.element.getClass()) orig(DataStructures.RedBlackTree.great.left) orig(DataStructures.RedBlackTree.great.left.element) orig(DataStructures.RedBlackTree.great.left.element.getClass()) orig(DataStructures.RedBlackTree.great.left.left) orig(DataStructures.RedBlackTree.great.left.right) orig(DataStructures.RedBlackTree.great.left.color) orig(DataStructures.RedBlackTree.great.right) orig(DataStructures.RedBlackTree.great.right.element) orig(DataStructures.RedBlackTree.great.right.element.getClass()) orig(DataStructures.RedBlackTree.great.right.left) orig(DataStructures.RedBlackTree.great.right.right) orig(DataStructures.RedBlackTree.great.right.color) orig(DataStructures.RedBlackTree.great.color)
===========================================================================
DataStructures.RedBlackTree.findMin():::EXIT
    Variables: this this.header this.header.element this.header.element.getClass() this.header.left this.header.left.element this.header.left.element.getClass() this.header.left.left this.header.left.right this.header.left.color this.header.right this.header.right.element this.header.right.element.getClass() this.header.right.left this.header.right.right this.header.right.color this.header.color DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color return return.getClass() orig(this) orig(this.header) orig(this.header.element) orig(this.header.element.getClass()) orig(this.header.left) orig(this.header.left.element) orig(this.header.left.element.getClass()) orig(this.header.left.left) orig(this.header.left.right) orig(this.header.left.color) orig(this.header.right) orig(this.header.right.element) orig(this.header.right.element.getClass()) orig(this.header.right.left) orig(this.header.right.right) orig(this.header.right.color) orig(this.header.color) orig(DataStructures.RedBlackTree.nullNode) orig(DataStructures.RedBlackTree.nullNode.element) orig(DataStructures.RedBlackTree.nullNode.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left) orig(DataStructures.RedBlackTree.nullNode.left.element) orig(DataStructures.RedBlackTree.nullNode.left.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left.left) orig(DataStructures.RedBlackTree.nullNode.left.right) orig(DataStructures.RedBlackTree.nullNode.left.color) orig(DataStructures.RedBlackTree.nullNode.right) orig(DataStructures.RedBlackTree.nullNode.right.element) orig(DataStructures.RedBlackTree.nullNode.right.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.right.left) orig(DataStructures.RedBlackTree.nullNode.right.right) orig(DataStructures.RedBlackTree.nullNode.right.color) orig(DataStructures.RedBlackTree.nullNode.color) orig(DataStructures.RedBlackTree.current) orig(DataStructures.RedBlackTree.current.element) orig(DataStructures.RedBlackTree.current.element.getClass()) orig(DataStructures.RedBlackTree.current.left) orig(DataStructures.RedBlackTree.current.left.element) orig(DataStructures.RedBlackTree.current.left.element.getClass()) orig(DataStructures.RedBlackTree.current.left.left) orig(DataStructures.RedBlackTree.current.left.right) orig(DataStructures.RedBlackTree.current.left.color) orig(DataStructures.RedBlackTree.current.right) orig(DataStructures.RedBlackTree.current.right.element) orig(DataStructures.RedBlackTree.current.right.element.getClass()) orig(DataStructures.RedBlackTree.current.right.left) orig(DataStructures.RedBlackTree.current.right.right) orig(DataStructures.RedBlackTree.current.right.color) orig(DataStructures.RedBlackTree.current.color) orig(DataStructures.RedBlackTree.parent) orig(DataStructures.RedBlackTree.parent.element) orig(DataStructures.RedBlackTree.parent.element.getClass()) orig(DataStructures.RedBlackTree.parent.left) orig(DataStructures.RedBlackTree.parent.left.element) orig(DataStructures.RedBlackTree.parent.left.element.getClass()) orig(DataStructures.RedBlackTree.parent.left.left) orig(DataStructures.RedBlackTree.parent.left.right) orig(DataStructures.RedBlackTree.parent.left.color) orig(DataStructures.RedBlackTree.parent.right) orig(DataStructures.RedBlackTree.parent.right.element) orig(DataStructures.RedBlackTree.parent.right.element.getClass()) orig(DataStructures.RedBlackTree.parent.right.left) orig(DataStructures.RedBlackTree.parent.right.right) orig(DataStructures.RedBlackTree.parent.right.color) orig(DataStructures.RedBlackTree.parent.color) orig(DataStructures.RedBlackTree.grand) orig(DataStructures.RedBlackTree.grand.element) orig(DataStructures.RedBlackTree.grand.element.getClass()) orig(DataStructures.RedBlackTree.grand.left) orig(DataStructures.RedBlackTree.grand.left.element) orig(DataStructures.RedBlackTree.grand.left.element.getClass()) orig(DataStructures.RedBlackTree.grand.left.left) orig(DataStructures.RedBlackTree.grand.left.right) orig(DataStructures.RedBlackTree.grand.left.color) orig(DataStructures.RedBlackTree.grand.right) orig(DataStructures.RedBlackTree.grand.right.element) orig(DataStructures.RedBlackTree.grand.right.element.getClass()) orig(DataStructures.RedBlackTree.grand.right.left) orig(DataStructures.RedBlackTree.grand.right.right) orig(DataStructures.RedBlackTree.grand.right.color) orig(DataStructures.RedBlackTree.grand.color) orig(DataStructures.RedBlackTree.great) orig(DataStructures.RedBlackTree.great.element) orig(DataStructures.RedBlackTree.great.element.getClass()) orig(DataStructures.RedBlackTree.great.left) orig(DataStructures.RedBlackTree.great.left.element) orig(DataStructures.RedBlackTree.great.left.element.getClass()) orig(DataStructures.RedBlackTree.great.left.left) orig(DataStructures.RedBlackTree.great.left.right) orig(DataStructures.RedBlackTree.great.left.color) orig(DataStructures.RedBlackTree.great.right) orig(DataStructures.RedBlackTree.great.right.element) orig(DataStructures.RedBlackTree.great.right.element.getClass()) orig(DataStructures.RedBlackTree.great.right.left) orig(DataStructures.RedBlackTree.great.right.right) orig(DataStructures.RedBlackTree.great.right.color) orig(DataStructures.RedBlackTree.great.color)
this.header == \old(this.header)
this.header.element == \old(this.header.element)
this.header.right == \old(this.header.right)
this.header.right.element == \old(this.header.right.element)
this.header.right.left == \old(this.header.right.left)
this.header.right.right == \old(this.header.right.right)
this.header.right.color == DataStructures.RedBlackTree.BLACK
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right.right
DataStructures.RedBlackTree.nullNode == \old(this.header.left)
DataStructures.RedBlackTree.nullNode == \old(this.header.left.left)
DataStructures.RedBlackTree.nullNode == \old(this.header.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.right.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.right.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.grand.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.grand.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.grand.right.right)
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.left.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.right.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.parent.left.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.parent.right.element
DataStructures.RedBlackTree.nullNode.element == \old(this.header.left.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.nullNode.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.nullNode.left.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.nullNode.right.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.current.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.current.left.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.current.right.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.parent.left.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.parent.right.element)
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.parent.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.parent.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.great.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.current.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.grand.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.current == DataStructures.RedBlackTree.parent.right
DataStructures.RedBlackTree.current == DataStructures.RedBlackTree.grand.left.right
DataStructures.RedBlackTree.current == \old(DataStructures.RedBlackTree.current)
DataStructures.RedBlackTree.current == \old(DataStructures.RedBlackTree.parent.right)
DataStructures.RedBlackTree.current == \old(DataStructures.RedBlackTree.grand.left.right)
DataStructures.RedBlackTree.parent == DataStructures.RedBlackTree.grand.left
DataStructures.RedBlackTree.parent == DataStructures.RedBlackTree.great.left.left
DataStructures.RedBlackTree.parent == \old(DataStructures.RedBlackTree.parent)
DataStructures.RedBlackTree.parent == \old(DataStructures.RedBlackTree.grand.left)
DataStructures.RedBlackTree.parent == \old(DataStructures.RedBlackTree.great.left.left)
DataStructures.RedBlackTree.parent.element == DataStructures.RedBlackTree.grand.left.element
DataStructures.RedBlackTree.parent.element == \old(DataStructures.RedBlackTree.parent.element)
DataStructures.RedBlackTree.parent.element == \old(DataStructures.RedBlackTree.grand.left.element)
DataStructures.RedBlackTree.grand == DataStructures.RedBlackTree.great.left
DataStructures.RedBlackTree.grand == \old(DataStructures.RedBlackTree.grand)
DataStructures.RedBlackTree.grand == \old(DataStructures.RedBlackTree.great.left)
DataStructures.RedBlackTree.grand.element == DataStructures.RedBlackTree.great.left.element
DataStructures.RedBlackTree.grand.element == \old(DataStructures.RedBlackTree.grand.element)
DataStructures.RedBlackTree.grand.element == \old(DataStructures.RedBlackTree.great.left.element)
DataStructures.RedBlackTree.grand.right == DataStructures.RedBlackTree.great.left.right
DataStructures.RedBlackTree.grand.right == \old(DataStructures.RedBlackTree.grand.right)
DataStructures.RedBlackTree.grand.right == \old(DataStructures.RedBlackTree.great.left.right)
DataStructures.RedBlackTree.grand.right.element == \old(DataStructures.RedBlackTree.grand.right.element)
DataStructures.RedBlackTree.great == \old(DataStructures.RedBlackTree.great)
DataStructures.RedBlackTree.great.element == \old(DataStructures.RedBlackTree.great.element)
DataStructures.RedBlackTree.great.right == \old(DataStructures.RedBlackTree.great.right)
DataStructures.RedBlackTree.great.right.element == \old(DataStructures.RedBlackTree.great.right.element)
DataStructures.RedBlackTree.great.right.left == \old(DataStructures.RedBlackTree.great.right.left)
DataStructures.RedBlackTree.great.right.right == \old(DataStructures.RedBlackTree.great.right.right)
this.header.right != null
this.header.right.element != null
this.header.right.left != null
this.header.right.right != null
DataStructures.RedBlackTree.nullNode.element != null
DataStructures.RedBlackTree.current != null
DataStructures.RedBlackTree.parent != null
DataStructures.RedBlackTree.parent.element != null
DataStructures.RedBlackTree.grand != null
DataStructures.RedBlackTree.grand.element != null
DataStructures.RedBlackTree.grand.right != null
DataStructures.RedBlackTree.grand.right.element != null
DataStructures.RedBlackTree.great != null
DataStructures.RedBlackTree.great.element != null
DataStructures.RedBlackTree.great.right != null
DataStructures.RedBlackTree.great.right.element != null
DataStructures.RedBlackTree.great.right.left != null
DataStructures.RedBlackTree.great.right.right != null
\result != null
\result.getClass() == DataStructures.MyInteger.class
this.header.element.getClass() == \result.getClass()
this.header.left.element.getClass() == \result.getClass()
this.header.right.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.nullNode.left.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.nullNode.right.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.current.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.current.left.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.current.right.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.parent.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.parent.left.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.parent.right.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.grand.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.grand.left.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.grand.right.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.great.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.great.left.element.getClass() == \result.getClass()
DataStructures.RedBlackTree.great.right.element.getClass() == \result.getClass()
\result.getClass() == \old(this.header.element.getClass())
\result.getClass() == \old(this.header.left.element.getClass())
\result.getClass() == \old(this.header.right.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.nullNode.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.nullNode.left.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.nullNode.right.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.current.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.current.left.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.current.right.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.parent.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.parent.left.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.parent.right.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.grand.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.grand.left.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.grand.right.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.great.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.great.left.element.getClass())
\result.getClass() == \old(DataStructures.RedBlackTree.great.right.element.getClass())
===========================================================================
DataStructures.RedBlackTree.handleReorient(DataStructures.Comparable):::ENTER
    Variables: this this.header this.header.element this.header.element.getClass() this.header.left this.header.left.element this.header.left.element.getClass() this.header.left.left this.header.left.right this.header.left.color this.header.right this.header.right.element this.header.right.element.getClass() this.header.right.left this.header.right.right this.header.right.color this.header.color DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color item item.getClass()
this.header.right.color == DataStructures.RedBlackTree.BLACK
DataStructures.RedBlackTree.nullNode.element == item
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.color
DataStructures.RedBlackTree.current.left.color == DataStructures.RedBlackTree.current.right.color
this.header.right.element != null
DataStructures.RedBlackTree.nullNode.element != null
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.MyInteger.class
DataStructures.RedBlackTree.current != null
DataStructures.RedBlackTree.current.element != null
DataStructures.RedBlackTree.current.left != null
DataStructures.RedBlackTree.current.left.element != null
DataStructures.RedBlackTree.current.left.left != null
DataStructures.RedBlackTree.current.left.right != null
DataStructures.RedBlackTree.current.left.color == 0 || DataStructures.RedBlackTree.current.left.color == 1
DataStructures.RedBlackTree.current.right != null
DataStructures.RedBlackTree.current.right.element != null
DataStructures.RedBlackTree.current.right.left != null
DataStructures.RedBlackTree.current.right.right != null
DataStructures.RedBlackTree.parent != null
DataStructures.RedBlackTree.parent.element != null
DataStructures.RedBlackTree.parent.left != null
DataStructures.RedBlackTree.parent.left.element != null
DataStructures.RedBlackTree.parent.left.left != null
DataStructures.RedBlackTree.parent.left.right != null
DataStructures.RedBlackTree.parent.left.color == 0 || DataStructures.RedBlackTree.parent.left.color == 1
DataStructures.RedBlackTree.parent.right != null
DataStructures.RedBlackTree.parent.right.element != null
DataStructures.RedBlackTree.parent.right.left != null
DataStructures.RedBlackTree.parent.right.right != null
DataStructures.RedBlackTree.parent.right.color == 0 || DataStructures.RedBlackTree.parent.right.color == 1
DataStructures.RedBlackTree.parent.color == 0 || DataStructures.RedBlackTree.parent.color == 1
DataStructures.RedBlackTree.grand != null
DataStructures.RedBlackTree.grand.element != null
DataStructures.RedBlackTree.grand.left != null
DataStructures.RedBlackTree.grand.left.element != null
DataStructures.RedBlackTree.grand.left.left != null
DataStructures.RedBlackTree.grand.left.right != null
DataStructures.RedBlackTree.grand.left.color == 0 || DataStructures.RedBlackTree.grand.left.color == 1
DataStructures.RedBlackTree.grand.right != null
DataStructures.RedBlackTree.grand.right.element != null
DataStructures.RedBlackTree.grand.right.left != null
DataStructures.RedBlackTree.grand.right.right != null
DataStructures.RedBlackTree.grand.right.color == 0 || DataStructures.RedBlackTree.grand.right.color == 1
DataStructures.RedBlackTree.grand.color == 0 || DataStructures.RedBlackTree.grand.color == 1
DataStructures.RedBlackTree.great != null
DataStructures.RedBlackTree.great.element != null
DataStructures.RedBlackTree.great.left != null
DataStructures.RedBlackTree.great.left.element != null
DataStructures.RedBlackTree.great.left.left != null
DataStructures.RedBlackTree.great.left.right != null
DataStructures.RedBlackTree.great.left.color == 0 || DataStructures.RedBlackTree.great.left.color == 1
DataStructures.RedBlackTree.great.right != null
DataStructures.RedBlackTree.great.right.element != null
DataStructures.RedBlackTree.great.right.left != null
DataStructures.RedBlackTree.great.right.right != null
DataStructures.RedBlackTree.great.right.color == 0 || DataStructures.RedBlackTree.great.right.color == 1
DataStructures.RedBlackTree.great.color == 0 || DataStructures.RedBlackTree.great.color == 1
this.header.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
this.header.left.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
this.header.right.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == item.getClass()
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.current.left.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.parent.left.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.parent.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.grand.left.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.grand.right.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.grand.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.current.left.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.parent.left.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.parent.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.grand.left.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.grand.right.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.grand.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.color
===========================================================================
DataStructures.RedBlackTree.handleReorient(DataStructures.Comparable):::EXIT
    Variables: this this.header this.header.element this.header.element.getClass() this.header.left this.header.left.element this.header.left.element.getClass() this.header.left.left this.header.left.right this.header.left.color this.header.right this.header.right.element this.header.right.element.getClass() this.header.right.left this.header.right.right this.header.right.color this.header.color DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color item item.getClass() orig(this) orig(this.header) orig(this.header.element) orig(this.header.element.getClass()) orig(this.header.left) orig(this.header.left.element) orig(this.header.left.element.getClass()) orig(this.header.left.left) orig(this.header.left.right) orig(this.header.left.color) orig(this.header.right) orig(this.header.right.element) orig(this.header.right.element.getClass()) orig(this.header.right.left) orig(this.header.right.right) orig(this.header.right.color) orig(this.header.color) orig(DataStructures.RedBlackTree.nullNode) orig(DataStructures.RedBlackTree.nullNode.element) orig(DataStructures.RedBlackTree.nullNode.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left) orig(DataStructures.RedBlackTree.nullNode.left.element) orig(DataStructures.RedBlackTree.nullNode.left.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left.left) orig(DataStructures.RedBlackTree.nullNode.left.right) orig(DataStructures.RedBlackTree.nullNode.left.color) orig(DataStructures.RedBlackTree.nullNode.right) orig(DataStructures.RedBlackTree.nullNode.right.element) orig(DataStructures.RedBlackTree.nullNode.right.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.right.left) orig(DataStructures.RedBlackTree.nullNode.right.right) orig(DataStructures.RedBlackTree.nullNode.right.color) orig(DataStructures.RedBlackTree.nullNode.color) orig(DataStructures.RedBlackTree.current) orig(DataStructures.RedBlackTree.current.element) orig(DataStructures.RedBlackTree.current.element.getClass()) orig(DataStructures.RedBlackTree.current.left) orig(DataStructures.RedBlackTree.current.left.element) orig(DataStructures.RedBlackTree.current.left.element.getClass()) orig(DataStructures.RedBlackTree.current.left.left) orig(DataStructures.RedBlackTree.current.left.right) orig(DataStructures.RedBlackTree.current.left.color) orig(DataStructures.RedBlackTree.current.right) orig(DataStructures.RedBlackTree.current.right.element) orig(DataStructures.RedBlackTree.current.right.element.getClass()) orig(DataStructures.RedBlackTree.current.right.left) orig(DataStructures.RedBlackTree.current.right.right) orig(DataStructures.RedBlackTree.current.right.color) orig(DataStructures.RedBlackTree.current.color) orig(DataStructures.RedBlackTree.parent) orig(DataStructures.RedBlackTree.parent.element) orig(DataStructures.RedBlackTree.parent.element.getClass()) orig(DataStructures.RedBlackTree.parent.left) orig(DataStructures.RedBlackTree.parent.left.element) orig(DataStructures.RedBlackTree.parent.left.element.getClass()) orig(DataStructures.RedBlackTree.parent.left.left) orig(DataStructures.RedBlackTree.parent.left.right) orig(DataStructures.RedBlackTree.parent.left.color) orig(DataStructures.RedBlackTree.parent.right) orig(DataStructures.RedBlackTree.parent.right.element) orig(DataStructures.RedBlackTree.parent.right.element.getClass()) orig(DataStructures.RedBlackTree.parent.right.left) orig(DataStructures.RedBlackTree.parent.right.right) orig(DataStructures.RedBlackTree.parent.right.color) orig(DataStructures.RedBlackTree.parent.color) orig(DataStructures.RedBlackTree.grand) orig(DataStructures.RedBlackTree.grand.element) orig(DataStructures.RedBlackTree.grand.element.getClass()) orig(DataStructures.RedBlackTree.grand.left) orig(DataStructures.RedBlackTree.grand.left.element) orig(DataStructures.RedBlackTree.grand.left.element.getClass()) orig(DataStructures.RedBlackTree.grand.left.left) orig(DataStructures.RedBlackTree.grand.left.right) orig(DataStructures.RedBlackTree.grand.left.color) orig(DataStructures.RedBlackTree.grand.right) orig(DataStructures.RedBlackTree.grand.right.element) orig(DataStructures.RedBlackTree.grand.right.element.getClass()) orig(DataStructures.RedBlackTree.grand.right.left) orig(DataStructures.RedBlackTree.grand.right.right) orig(DataStructures.RedBlackTree.grand.right.color) orig(DataStructures.RedBlackTree.grand.color) orig(DataStructures.RedBlackTree.great) orig(DataStructures.RedBlackTree.great.element) orig(DataStructures.RedBlackTree.great.element.getClass()) orig(DataStructures.RedBlackTree.great.left) orig(DataStructures.RedBlackTree.great.left.element) orig(DataStructures.RedBlackTree.great.left.element.getClass()) orig(DataStructures.RedBlackTree.great.left.left) orig(DataStructures.RedBlackTree.great.left.right) orig(DataStructures.RedBlackTree.great.left.color) orig(DataStructures.RedBlackTree.great.right) orig(DataStructures.RedBlackTree.great.right.element) orig(DataStructures.RedBlackTree.great.right.element.getClass()) orig(DataStructures.RedBlackTree.great.right.left) orig(DataStructures.RedBlackTree.great.right.right) orig(DataStructures.RedBlackTree.great.right.color) orig(DataStructures.RedBlackTree.great.color) orig(item) orig(item.getClass())
assignable this.header.right, this.header.right.element, this.header.right.left, this.header.right.right, DataStructures.RedBlackTree.current, DataStructures.RedBlackTree.current.element, DataStructures.RedBlackTree.current.left, DataStructures.RedBlackTree.current.left.element, DataStructures.RedBlackTree.current.left.left, DataStructures.RedBlackTree.current.left.right, DataStructures.RedBlackTree.current.left.color, DataStructures.RedBlackTree.current.right, DataStructures.RedBlackTree.current.right.element, DataStructures.RedBlackTree.current.right.left, DataStructures.RedBlackTree.current.right.right, DataStructures.RedBlackTree.current.right.color, DataStructures.RedBlackTree.current.color, DataStructures.RedBlackTree.parent.left, DataStructures.RedBlackTree.parent.left.element, DataStructures.RedBlackTree.parent.left.left, DataStructures.RedBlackTree.parent.left.right, DataStructures.RedBlackTree.parent.left.color, DataStructures.RedBlackTree.parent.right, DataStructures.RedBlackTree.parent.right.element, DataStructures.RedBlackTree.parent.right.color, DataStructures.RedBlackTree.parent.color, DataStructures.RedBlackTree.grand.left, DataStructures.RedBlackTree.grand.left.element, DataStructures.RedBlackTree.grand.left.left, DataStructures.RedBlackTree.grand.left.color, DataStructures.RedBlackTree.grand.right, DataStructures.RedBlackTree.grand.right.element, DataStructures.RedBlackTree.grand.right.left, DataStructures.RedBlackTree.grand.right.right, DataStructures.RedBlackTree.grand.right.color, DataStructures.RedBlackTree.grand.color, DataStructures.RedBlackTree.great.left, DataStructures.RedBlackTree.great.left.element, DataStructures.RedBlackTree.great.left.left, DataStructures.RedBlackTree.great.left.right, DataStructures.RedBlackTree.great.right, DataStructures.RedBlackTree.great.right.element, DataStructures.RedBlackTree.great.right.left, DataStructures.RedBlackTree.great.right.right
this.header == \old(this.header)
this.header.element == \old(this.header.element)
this.header.right.color == DataStructures.RedBlackTree.BLACK
DataStructures.RedBlackTree.nullNode == \old(this.header.left)
DataStructures.RedBlackTree.nullNode == \old(this.header.left.left)
DataStructures.RedBlackTree.nullNode == \old(this.header.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right.right)
DataStructures.RedBlackTree.nullNode.element == \old(this.header.left.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.nullNode.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.nullNode.left.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.nullNode.right.element)
DataStructures.RedBlackTree.nullNode.element == \old(item)
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.parent.color
DataStructures.RedBlackTree.current.left.color == DataStructures.RedBlackTree.current.right.color
DataStructures.RedBlackTree.current.left.color == \old(DataStructures.RedBlackTree.parent.color)
DataStructures.RedBlackTree.parent == \old(DataStructures.RedBlackTree.parent)
DataStructures.RedBlackTree.parent.element == \old(DataStructures.RedBlackTree.parent.element)
DataStructures.RedBlackTree.parent.right.left == \old(DataStructures.RedBlackTree.parent.right.left)
DataStructures.RedBlackTree.parent.right.right == \old(DataStructures.RedBlackTree.parent.right.right)
DataStructures.RedBlackTree.grand == \old(DataStructures.RedBlackTree.grand)
DataStructures.RedBlackTree.grand.element == \old(DataStructures.RedBlackTree.grand.element)
DataStructures.RedBlackTree.grand.left.right == \old(DataStructures.RedBlackTree.grand.left.right)
DataStructures.RedBlackTree.great == \old(DataStructures.RedBlackTree.great)
DataStructures.RedBlackTree.great.element == \old(DataStructures.RedBlackTree.great.element)
DataStructures.RedBlackTree.great.left.color == \old(DataStructures.RedBlackTree.great.left.color)
DataStructures.RedBlackTree.great.right.color == \old(DataStructures.RedBlackTree.great.right.color)
DataStructures.RedBlackTree.great.color == \old(DataStructures.RedBlackTree.great.color)
this.header.right.element != null
DataStructures.RedBlackTree.nullNode.element != null
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.MyInteger.class
DataStructures.RedBlackTree.current != null
DataStructures.RedBlackTree.current.element != null
DataStructures.RedBlackTree.current.left != null
DataStructures.RedBlackTree.current.left.element != null
DataStructures.RedBlackTree.current.left.left != null
DataStructures.RedBlackTree.current.left.right != null
DataStructures.RedBlackTree.current.left.color == 0 || DataStructures.RedBlackTree.current.left.color == 1
DataStructures.RedBlackTree.current.right != null
DataStructures.RedBlackTree.current.right.element != null
DataStructures.RedBlackTree.current.right.left != null
DataStructures.RedBlackTree.current.right.right != null
DataStructures.RedBlackTree.current.color == 0 || DataStructures.RedBlackTree.current.color == 1
DataStructures.RedBlackTree.parent != null
DataStructures.RedBlackTree.parent.element != null
DataStructures.RedBlackTree.parent.left != null
DataStructures.RedBlackTree.parent.left.element != null
DataStructures.RedBlackTree.parent.left.left != null
DataStructures.RedBlackTree.parent.left.right != null
DataStructures.RedBlackTree.parent.left.color == 0 || DataStructures.RedBlackTree.parent.left.color == 1
DataStructures.RedBlackTree.parent.right != null
DataStructures.RedBlackTree.parent.right.element != null
DataStructures.RedBlackTree.parent.right.left != null
DataStructures.RedBlackTree.parent.right.right != null
DataStructures.RedBlackTree.parent.right.color == 0 || DataStructures.RedBlackTree.parent.right.color == 1
DataStructures.RedBlackTree.grand != null
DataStructures.RedBlackTree.grand.element != null
DataStructures.RedBlackTree.grand.left != null
DataStructures.RedBlackTree.grand.left.element != null
DataStructures.RedBlackTree.grand.left.left != null
DataStructures.RedBlackTree.grand.left.right != null
DataStructures.RedBlackTree.grand.left.color == 0 || DataStructures.RedBlackTree.grand.left.color == 1
DataStructures.RedBlackTree.grand.right != null
DataStructures.RedBlackTree.grand.right.element != null
DataStructures.RedBlackTree.grand.right.left != null
DataStructures.RedBlackTree.grand.right.right != null
DataStructures.RedBlackTree.grand.right.color == 0 || DataStructures.RedBlackTree.grand.right.color == 1
DataStructures.RedBlackTree.grand.color == 0 || DataStructures.RedBlackTree.grand.color == 1
DataStructures.RedBlackTree.great != null
DataStructures.RedBlackTree.great.element != null
DataStructures.RedBlackTree.great.left != null
DataStructures.RedBlackTree.great.left.element != null
DataStructures.RedBlackTree.great.left.left != null
DataStructures.RedBlackTree.great.left.right != null
DataStructures.RedBlackTree.great.left.color == 0 || DataStructures.RedBlackTree.great.left.color == 1
DataStructures.RedBlackTree.great.right != null
DataStructures.RedBlackTree.great.right.element != null
DataStructures.RedBlackTree.great.right.left != null
DataStructures.RedBlackTree.great.right.right != null
DataStructures.RedBlackTree.great.right.color == 0 || DataStructures.RedBlackTree.great.right.color == 1
DataStructures.RedBlackTree.great.color == 0 || DataStructures.RedBlackTree.great.color == 1
this.header.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
this.header.left.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
this.header.right.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(this.header.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(this.header.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(this.header.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.nullNode.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.nullNode.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.nullNode.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.current.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.current.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.current.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.parent.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.parent.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.parent.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.grand.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.grand.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.grand.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.great.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.great.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.great.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(item.getClass())
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.current.left.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.current.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.parent.left.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.grand.left.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.grand.right.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.grand.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.current.left.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.current.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.parent.left.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.grand.left.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.grand.right.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.grand.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.color
DataStructures.RedBlackTree.current.left.color >= DataStructures.RedBlackTree.parent.left.color
DataStructures.RedBlackTree.current.left.color >= DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.current.left.color >= DataStructures.RedBlackTree.grand.color
DataStructures.RedBlackTree.current.color <= DataStructures.RedBlackTree.grand.left.color
DataStructures.RedBlackTree.current.color <= DataStructures.RedBlackTree.grand.right.color
DataStructures.RedBlackTree.current.color <= \old(DataStructures.RedBlackTree.parent.left.color)
DataStructures.RedBlackTree.current.color <= \old(DataStructures.RedBlackTree.parent.right.color)
DataStructures.RedBlackTree.current.color <= \old(DataStructures.RedBlackTree.grand.color)
DataStructures.RedBlackTree.parent.left.color <= \old(DataStructures.RedBlackTree.parent.left.color)
DataStructures.RedBlackTree.parent.left.color <= \old(DataStructures.RedBlackTree.parent.right.color)
DataStructures.RedBlackTree.parent.right.color <= \old(DataStructures.RedBlackTree.parent.left.color)
DataStructures.RedBlackTree.parent.right.color <= \old(DataStructures.RedBlackTree.parent.right.color)
DataStructures.RedBlackTree.grand.left.color >= \old(DataStructures.RedBlackTree.current.left.color)
DataStructures.RedBlackTree.grand.left.color >= \old(DataStructures.RedBlackTree.grand.left.color)
DataStructures.RedBlackTree.grand.right.color >= \old(DataStructures.RedBlackTree.grand.right.color)
DataStructures.RedBlackTree.grand.color <= \old(DataStructures.RedBlackTree.grand.color)
DataStructures.RedBlackTree.current.left.color == (java.lang.Math.pow(DataStructures.RedBlackTree.parent.left.color, DataStructures.RedBlackTree.current.color))
DataStructures.RedBlackTree.current.left.color == (java.lang.Math.pow(DataStructures.RedBlackTree.parent.right.color, DataStructures.RedBlackTree.current.color))
DataStructures.RedBlackTree.current.left.color == (java.lang.Math.pow(DataStructures.RedBlackTree.grand.color, DataStructures.RedBlackTree.current.color))
DataStructures.RedBlackTree.grand.left.color == (java.lang.Math.pow(\old(DataStructures.RedBlackTree.grand.left.color), DataStructures.RedBlackTree.current.left.color))
DataStructures.RedBlackTree.grand.right.color == (java.lang.Math.pow(\old(DataStructures.RedBlackTree.grand.right.color), DataStructures.RedBlackTree.current.left.color))
DataStructures.RedBlackTree.current.left.color == (java.lang.Math.pow(DataStructures.RedBlackTree.grand.color, \old(DataStructures.RedBlackTree.grand.color)))
DataStructures.RedBlackTree.grand.color == (DataStructures.RedBlackTree.current.left.color & \old(DataStructures.RedBlackTree.grand.color))
(DataStructures.RedBlackTree.grand.color != 0) == ((DataStructures.RedBlackTree.current.left.color != 0) && (\old(DataStructures.RedBlackTree.grand.color) != 0))
DataStructures.RedBlackTree.grand.color == (DataStructures.RedBlackTree.current.left.color * \old(DataStructures.RedBlackTree.grand.color))
DataStructures.RedBlackTree.grand.color == (java.lang.Math.min(DataStructures.RedBlackTree.current.left.color, \old(DataStructures.RedBlackTree.grand.color)))
\old(DataStructures.RedBlackTree.grand.color) == (java.lang.Math.pow(DataStructures.RedBlackTree.grand.color, DataStructures.RedBlackTree.current.left.color))
DataStructures.RedBlackTree.grand.left.color == (DataStructures.RedBlackTree.current.color | \old(DataStructures.RedBlackTree.grand.left.color))
(DataStructures.RedBlackTree.grand.left.color != 0) == ((DataStructures.RedBlackTree.current.color != 0) || (\old(DataStructures.RedBlackTree.grand.left.color) != 0))
DataStructures.RedBlackTree.grand.left.color == (java.lang.Math.max(DataStructures.RedBlackTree.current.color, \old(DataStructures.RedBlackTree.grand.left.color)))
DataStructures.RedBlackTree.grand.left.color == (plume.MathMDE.gcd(DataStructures.RedBlackTree.current.color, \old(DataStructures.RedBlackTree.grand.left.color)))
DataStructures.RedBlackTree.grand.right.color == (DataStructures.RedBlackTree.current.color | \old(DataStructures.RedBlackTree.grand.right.color))
(DataStructures.RedBlackTree.grand.right.color != 0) == ((DataStructures.RedBlackTree.current.color != 0) || (\old(DataStructures.RedBlackTree.grand.right.color) != 0))
DataStructures.RedBlackTree.grand.right.color == (java.lang.Math.max(DataStructures.RedBlackTree.current.color, \old(DataStructures.RedBlackTree.grand.right.color)))
DataStructures.RedBlackTree.grand.right.color == (plume.MathMDE.gcd(DataStructures.RedBlackTree.current.color, \old(DataStructures.RedBlackTree.grand.right.color)))
\old(DataStructures.RedBlackTree.grand.color) == (DataStructures.RedBlackTree.current.color | DataStructures.RedBlackTree.grand.color)
(\old(DataStructures.RedBlackTree.grand.color) != 0) == ((DataStructures.RedBlackTree.current.color != 0) || (DataStructures.RedBlackTree.grand.color != 0))
\old(DataStructures.RedBlackTree.grand.color) == (java.lang.Math.max(DataStructures.RedBlackTree.current.color, DataStructures.RedBlackTree.grand.color))
\old(DataStructures.RedBlackTree.grand.color) == (plume.MathMDE.gcd(DataStructures.RedBlackTree.current.color, DataStructures.RedBlackTree.grand.color))
DataStructures.RedBlackTree.grand.left.color == (java.lang.Math.pow(\old(DataStructures.RedBlackTree.grand.left.color), DataStructures.RedBlackTree.grand.color))
DataStructures.RedBlackTree.grand.left.color == (java.lang.Math.max(\old(DataStructures.RedBlackTree.current.left.color), \old(DataStructures.RedBlackTree.grand.left.color)))
DataStructures.RedBlackTree.grand.left.color == (\old(DataStructures.RedBlackTree.current.left.color) | \old(DataStructures.RedBlackTree.grand.left.color))
(DataStructures.RedBlackTree.grand.left.color != 0) == ((\old(DataStructures.RedBlackTree.current.left.color) != 0) || (\old(DataStructures.RedBlackTree.grand.left.color) != 0))
DataStructures.RedBlackTree.grand.left.color == (plume.MathMDE.gcd(\old(DataStructures.RedBlackTree.current.left.color), \old(DataStructures.RedBlackTree.grand.left.color)))
DataStructures.RedBlackTree.grand.right.color == (java.lang.Math.pow(\old(DataStructures.RedBlackTree.grand.right.color), DataStructures.RedBlackTree.grand.color))
===========================================================================
DataStructures.RedBlackTree.insert(DataStructures.Comparable):::ENTER
    Variables: this this.header this.header.element this.header.element.getClass() this.header.left this.header.left.element this.header.left.element.getClass() this.header.left.left this.header.left.right this.header.left.color this.header.right this.header.right.element this.header.right.element.getClass() this.header.right.left this.header.right.right this.header.right.color this.header.color DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color item item.getClass()
this.header.right.color == DataStructures.RedBlackTree.BLACK
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.left != null))  ==>  (DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.left)
(DataStructures.RedBlackTree.parent != null)  ==>  (DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.parent.color)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.left != null))  ==>  (DataStructures.RedBlackTree.current.left.left == DataStructures.RedBlackTree.current.left.right)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.left != null) && (DataStructures.RedBlackTree.current.right != null))  ==>  (DataStructures.RedBlackTree.current.left.left == DataStructures.RedBlackTree.current.right.left)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.left != null) && (DataStructures.RedBlackTree.current.right != null))  ==>  (DataStructures.RedBlackTree.current.left.left == DataStructures.RedBlackTree.current.right.right)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.left != null) && (DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.left != null))  ==>  (DataStructures.RedBlackTree.current.left.left == DataStructures.RedBlackTree.parent.left.left)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.left != null) && (DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.left != null))  ==>  (DataStructures.RedBlackTree.current.left.left == DataStructures.RedBlackTree.parent.left.right)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.left != null) && (DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.right != null))  ==>  (DataStructures.RedBlackTree.current.left.left == DataStructures.RedBlackTree.parent.right.left)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.left != null) && (DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.right != null))  ==>  (DataStructures.RedBlackTree.current.left.left == DataStructures.RedBlackTree.parent.right.right)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.left != null) && (DataStructures.RedBlackTree.current.right != null))  ==>  (DataStructures.RedBlackTree.current.left.color == DataStructures.RedBlackTree.current.right.color)
((DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.grand != null) && (DataStructures.RedBlackTree.grand.left != null))  ==>  (DataStructures.RedBlackTree.parent.color == DataStructures.RedBlackTree.grand.left.color)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.left != null))  ==>  (DataStructures.RedBlackTree.current.left.left != null)
(DataStructures.RedBlackTree.parent != null)  ==>  (DataStructures.RedBlackTree.parent.color == 1)
item != null
this.header.element.getClass() == item.getClass()
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.left != null) && (DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.left != null))  ==>  (DataStructures.RedBlackTree.current.left.color >= DataStructures.RedBlackTree.parent.left.color)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.left != null) && (DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.right != null))  ==>  (DataStructures.RedBlackTree.current.left.color >= DataStructures.RedBlackTree.parent.right.color)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.left != null) && (DataStructures.RedBlackTree.parent != null))  ==>  (DataStructures.RedBlackTree.current.left.color <= DataStructures.RedBlackTree.parent.color)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.left != null) && (DataStructures.RedBlackTree.grand != null))  ==>  (DataStructures.RedBlackTree.current.left.color >= DataStructures.RedBlackTree.grand.color)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.parent != null))  ==>  (DataStructures.RedBlackTree.current.color <= DataStructures.RedBlackTree.parent.color)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.grand != null) && (DataStructures.RedBlackTree.grand.right != null))  ==>  (DataStructures.RedBlackTree.current.color <= DataStructures.RedBlackTree.grand.right.color)
((DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.left != null))  ==>  (DataStructures.RedBlackTree.parent.left.color <= DataStructures.RedBlackTree.parent.color)
((DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.left != null) && (DataStructures.RedBlackTree.grand != null) && (DataStructures.RedBlackTree.grand.right != null))  ==>  (DataStructures.RedBlackTree.parent.left.color <= DataStructures.RedBlackTree.grand.right.color)
((DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.right != null))  ==>  (DataStructures.RedBlackTree.parent.right.color <= DataStructures.RedBlackTree.parent.color)
((DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.grand != null) && (DataStructures.RedBlackTree.grand.right != null))  ==>  (DataStructures.RedBlackTree.parent.color >= DataStructures.RedBlackTree.grand.right.color)
((DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.grand != null))  ==>  (DataStructures.RedBlackTree.parent.color >= DataStructures.RedBlackTree.grand.color)
((DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.great != null) && (DataStructures.RedBlackTree.great.left != null))  ==>  (DataStructures.RedBlackTree.parent.color >= DataStructures.RedBlackTree.great.left.color)
((DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.great != null) && (DataStructures.RedBlackTree.great.right != null))  ==>  (DataStructures.RedBlackTree.parent.color >= DataStructures.RedBlackTree.great.right.color)
((DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.great != null))  ==>  (DataStructures.RedBlackTree.parent.color >= DataStructures.RedBlackTree.great.color)
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.left != null) && (DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.left != null))  ==>  (DataStructures.RedBlackTree.current.left.color == (java.lang.Math.pow(DataStructures.RedBlackTree.parent.left.color, DataStructures.RedBlackTree.current.color)))
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.left != null) && (DataStructures.RedBlackTree.parent != null) && (DataStructures.RedBlackTree.parent.right != null))  ==>  (DataStructures.RedBlackTree.current.left.color == (java.lang.Math.pow(DataStructures.RedBlackTree.parent.right.color, DataStructures.RedBlackTree.current.color)))
((DataStructures.RedBlackTree.current != null) && (DataStructures.RedBlackTree.current.left != null) && (DataStructures.RedBlackTree.grand != null))  ==>  (DataStructures.RedBlackTree.current.left.color == (java.lang.Math.pow(DataStructures.RedBlackTree.grand.color, DataStructures.RedBlackTree.current.color)))
===========================================================================
DataStructures.RedBlackTree.insert(DataStructures.Comparable):::EXIT65
    Variables: this this.header this.header.element this.header.element.getClass() this.header.left this.header.left.element this.header.left.element.getClass() this.header.left.left this.header.left.right this.header.left.color this.header.right this.header.right.element this.header.right.element.getClass() this.header.right.left this.header.right.right this.header.right.color this.header.color DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color item item.getClass() orig(this) orig(this.header) orig(this.header.element) orig(this.header.element.getClass()) orig(this.header.left) orig(this.header.left.element) orig(this.header.left.element.getClass()) orig(this.header.left.left) orig(this.header.left.right) orig(this.header.left.color) orig(this.header.right) orig(this.header.right.element) orig(this.header.right.element.getClass()) orig(this.header.right.left) orig(this.header.right.right) orig(this.header.right.color) orig(this.header.color) orig(DataStructures.RedBlackTree.nullNode) orig(DataStructures.RedBlackTree.nullNode.element) orig(DataStructures.RedBlackTree.nullNode.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left) orig(DataStructures.RedBlackTree.nullNode.left.element) orig(DataStructures.RedBlackTree.nullNode.left.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left.left) orig(DataStructures.RedBlackTree.nullNode.left.right) orig(DataStructures.RedBlackTree.nullNode.left.color) orig(DataStructures.RedBlackTree.nullNode.right) orig(DataStructures.RedBlackTree.nullNode.right.element) orig(DataStructures.RedBlackTree.nullNode.right.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.right.left) orig(DataStructures.RedBlackTree.nullNode.right.right) orig(DataStructures.RedBlackTree.nullNode.right.color) orig(DataStructures.RedBlackTree.nullNode.color) orig(DataStructures.RedBlackTree.current) orig(DataStructures.RedBlackTree.current.element) orig(DataStructures.RedBlackTree.current.element.getClass()) orig(DataStructures.RedBlackTree.current.left) orig(DataStructures.RedBlackTree.current.left.element) orig(DataStructures.RedBlackTree.current.left.element.getClass()) orig(DataStructures.RedBlackTree.current.left.left) orig(DataStructures.RedBlackTree.current.left.right) orig(DataStructures.RedBlackTree.current.left.color) orig(DataStructures.RedBlackTree.current.right) orig(DataStructures.RedBlackTree.current.right.element) orig(DataStructures.RedBlackTree.current.right.element.getClass()) orig(DataStructures.RedBlackTree.current.right.left) orig(DataStructures.RedBlackTree.current.right.right) orig(DataStructures.RedBlackTree.current.right.color) orig(DataStructures.RedBlackTree.current.color) orig(DataStructures.RedBlackTree.parent) orig(DataStructures.RedBlackTree.parent.element) orig(DataStructures.RedBlackTree.parent.element.getClass()) orig(DataStructures.RedBlackTree.parent.left) orig(DataStructures.RedBlackTree.parent.left.element) orig(DataStructures.RedBlackTree.parent.left.element.getClass()) orig(DataStructures.RedBlackTree.parent.left.left) orig(DataStructures.RedBlackTree.parent.left.right) orig(DataStructures.RedBlackTree.parent.left.color) orig(DataStructures.RedBlackTree.parent.right) orig(DataStructures.RedBlackTree.parent.right.element) orig(DataStructures.RedBlackTree.parent.right.element.getClass()) orig(DataStructures.RedBlackTree.parent.right.left) orig(DataStructures.RedBlackTree.parent.right.right) orig(DataStructures.RedBlackTree.parent.right.color) orig(DataStructures.RedBlackTree.parent.color) orig(DataStructures.RedBlackTree.grand) orig(DataStructures.RedBlackTree.grand.element) orig(DataStructures.RedBlackTree.grand.element.getClass()) orig(DataStructures.RedBlackTree.grand.left) orig(DataStructures.RedBlackTree.grand.left.element) orig(DataStructures.RedBlackTree.grand.left.element.getClass()) orig(DataStructures.RedBlackTree.grand.left.left) orig(DataStructures.RedBlackTree.grand.left.right) orig(DataStructures.RedBlackTree.grand.left.color) orig(DataStructures.RedBlackTree.grand.right) orig(DataStructures.RedBlackTree.grand.right.element) orig(DataStructures.RedBlackTree.grand.right.element.getClass()) orig(DataStructures.RedBlackTree.grand.right.left) orig(DataStructures.RedBlackTree.grand.right.right) orig(DataStructures.RedBlackTree.grand.right.color) orig(DataStructures.RedBlackTree.grand.color) orig(DataStructures.RedBlackTree.great) orig(DataStructures.RedBlackTree.great.element) orig(DataStructures.RedBlackTree.great.element.getClass()) orig(DataStructures.RedBlackTree.great.left) orig(DataStructures.RedBlackTree.great.left.element) orig(DataStructures.RedBlackTree.great.left.element.getClass()) orig(DataStructures.RedBlackTree.great.left.left) orig(DataStructures.RedBlackTree.great.left.right) orig(DataStructures.RedBlackTree.great.left.color) orig(DataStructures.RedBlackTree.great.right) orig(DataStructures.RedBlackTree.great.right.element) orig(DataStructures.RedBlackTree.great.right.element.getClass()) orig(DataStructures.RedBlackTree.great.right.left) orig(DataStructures.RedBlackTree.great.right.right) orig(DataStructures.RedBlackTree.great.right.color) orig(DataStructures.RedBlackTree.great.color) orig(item) orig(item.getClass())
assignable this.header.left.element, this.header.right, this.header.right.element, this.header.right.left, this.header.right.right, DataStructures.RedBlackTree.nullNode.element, DataStructures.RedBlackTree.nullNode.left.element, DataStructures.RedBlackTree.nullNode.right.element, DataStructures.RedBlackTree.current, DataStructures.RedBlackTree.current.element, DataStructures.RedBlackTree.current.left, DataStructures.RedBlackTree.current.left.element, DataStructures.RedBlackTree.current.left.color, DataStructures.RedBlackTree.current.right, DataStructures.RedBlackTree.current.right.element, DataStructures.RedBlackTree.current.right.color, DataStructures.RedBlackTree.current.color, DataStructures.RedBlackTree.parent, DataStructures.RedBlackTree.parent.element, DataStructures.RedBlackTree.parent.left, DataStructures.RedBlackTree.parent.left.element, DataStructures.RedBlackTree.parent.left.color, DataStructures.RedBlackTree.parent.right, DataStructures.RedBlackTree.parent.right.element, DataStructures.RedBlackTree.parent.right.color, DataStructures.RedBlackTree.grand, DataStructures.RedBlackTree.grand.element, DataStructures.RedBlackTree.grand.left, DataStructures.RedBlackTree.grand.left.element, DataStructures.RedBlackTree.grand.left.left, DataStructures.RedBlackTree.grand.left.right, DataStructures.RedBlackTree.grand.right, DataStructures.RedBlackTree.grand.right.element, DataStructures.RedBlackTree.grand.right.left, DataStructures.RedBlackTree.grand.right.right, DataStructures.RedBlackTree.grand.right.color, DataStructures.RedBlackTree.grand.color, DataStructures.RedBlackTree.great, DataStructures.RedBlackTree.great.element, DataStructures.RedBlackTree.great.left, DataStructures.RedBlackTree.great.left.element, DataStructures.RedBlackTree.great.left.left, DataStructures.RedBlackTree.great.left.right, DataStructures.RedBlackTree.great.left.color, DataStructures.RedBlackTree.great.right, DataStructures.RedBlackTree.great.right.element, DataStructures.RedBlackTree.great.right.left, DataStructures.RedBlackTree.great.right.right, DataStructures.RedBlackTree.great.right.color, DataStructures.RedBlackTree.great.color
===========================================================================
DataStructures.RedBlackTree.insert(DataStructures.Comparable):::EXIT
    Variables: this this.header this.header.element this.header.element.getClass() this.header.left this.header.left.element this.header.left.element.getClass() this.header.left.left this.header.left.right this.header.left.color this.header.right this.header.right.element this.header.right.element.getClass() this.header.right.left this.header.right.right this.header.right.color this.header.color DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color item item.getClass() orig(this) orig(this.header) orig(this.header.element) orig(this.header.element.getClass()) orig(this.header.left) orig(this.header.left.element) orig(this.header.left.element.getClass()) orig(this.header.left.left) orig(this.header.left.right) orig(this.header.left.color) orig(this.header.right) orig(this.header.right.element) orig(this.header.right.element.getClass()) orig(this.header.right.left) orig(this.header.right.right) orig(this.header.right.color) orig(this.header.color) orig(DataStructures.RedBlackTree.nullNode) orig(DataStructures.RedBlackTree.nullNode.element) orig(DataStructures.RedBlackTree.nullNode.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left) orig(DataStructures.RedBlackTree.nullNode.left.element) orig(DataStructures.RedBlackTree.nullNode.left.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left.left) orig(DataStructures.RedBlackTree.nullNode.left.right) orig(DataStructures.RedBlackTree.nullNode.left.color) orig(DataStructures.RedBlackTree.nullNode.right) orig(DataStructures.RedBlackTree.nullNode.right.element) orig(DataStructures.RedBlackTree.nullNode.right.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.right.left) orig(DataStructures.RedBlackTree.nullNode.right.right) orig(DataStructures.RedBlackTree.nullNode.right.color) orig(DataStructures.RedBlackTree.nullNode.color) orig(DataStructures.RedBlackTree.current) orig(DataStructures.RedBlackTree.current.element) orig(DataStructures.RedBlackTree.current.element.getClass()) orig(DataStructures.RedBlackTree.current.left) orig(DataStructures.RedBlackTree.current.left.element) orig(DataStructures.RedBlackTree.current.left.element.getClass()) orig(DataStructures.RedBlackTree.current.left.left) orig(DataStructures.RedBlackTree.current.left.right) orig(DataStructures.RedBlackTree.current.left.color) orig(DataStructures.RedBlackTree.current.right) orig(DataStructures.RedBlackTree.current.right.element) orig(DataStructures.RedBlackTree.current.right.element.getClass()) orig(DataStructures.RedBlackTree.current.right.left) orig(DataStructures.RedBlackTree.current.right.right) orig(DataStructures.RedBlackTree.current.right.color) orig(DataStructures.RedBlackTree.current.color) orig(DataStructures.RedBlackTree.parent) orig(DataStructures.RedBlackTree.parent.element) orig(DataStructures.RedBlackTree.parent.element.getClass()) orig(DataStructures.RedBlackTree.parent.left) orig(DataStructures.RedBlackTree.parent.left.element) orig(DataStructures.RedBlackTree.parent.left.element.getClass()) orig(DataStructures.RedBlackTree.parent.left.left) orig(DataStructures.RedBlackTree.parent.left.right) orig(DataStructures.RedBlackTree.parent.left.color) orig(DataStructures.RedBlackTree.parent.right) orig(DataStructures.RedBlackTree.parent.right.element) orig(DataStructures.RedBlackTree.parent.right.element.getClass()) orig(DataStructures.RedBlackTree.parent.right.left) orig(DataStructures.RedBlackTree.parent.right.right) orig(DataStructures.RedBlackTree.parent.right.color) orig(DataStructures.RedBlackTree.parent.color) orig(DataStructures.RedBlackTree.grand) orig(DataStructures.RedBlackTree.grand.element) orig(DataStructures.RedBlackTree.grand.element.getClass()) orig(DataStructures.RedBlackTree.grand.left) orig(DataStructures.RedBlackTree.grand.left.element) orig(DataStructures.RedBlackTree.grand.left.element.getClass()) orig(DataStructures.RedBlackTree.grand.left.left) orig(DataStructures.RedBlackTree.grand.left.right) orig(DataStructures.RedBlackTree.grand.left.color) orig(DataStructures.RedBlackTree.grand.right) orig(DataStructures.RedBlackTree.grand.right.element) orig(DataStructures.RedBlackTree.grand.right.element.getClass()) orig(DataStructures.RedBlackTree.grand.right.left) orig(DataStructures.RedBlackTree.grand.right.right) orig(DataStructures.RedBlackTree.grand.right.color) orig(DataStructures.RedBlackTree.grand.color) orig(DataStructures.RedBlackTree.great) orig(DataStructures.RedBlackTree.great.element) orig(DataStructures.RedBlackTree.great.element.getClass()) orig(DataStructures.RedBlackTree.great.left) orig(DataStructures.RedBlackTree.great.left.element) orig(DataStructures.RedBlackTree.great.left.element.getClass()) orig(DataStructures.RedBlackTree.great.left.left) orig(DataStructures.RedBlackTree.great.left.right) orig(DataStructures.RedBlackTree.great.left.color) orig(DataStructures.RedBlackTree.great.right) orig(DataStructures.RedBlackTree.great.right.element) orig(DataStructures.RedBlackTree.great.right.element.getClass()) orig(DataStructures.RedBlackTree.great.right.left) orig(DataStructures.RedBlackTree.great.right.right) orig(DataStructures.RedBlackTree.great.right.color) orig(DataStructures.RedBlackTree.great.color) orig(item) orig(item.getClass())
assignable this.header.left.element, this.header.right, this.header.right.element, this.header.right.left, this.header.right.right, DataStructures.RedBlackTree.nullNode.element, DataStructures.RedBlackTree.nullNode.left.element, DataStructures.RedBlackTree.nullNode.right.element, DataStructures.RedBlackTree.current, DataStructures.RedBlackTree.current.element, DataStructures.RedBlackTree.current.left, DataStructures.RedBlackTree.current.left.element, DataStructures.RedBlackTree.current.left.color, DataStructures.RedBlackTree.current.right, DataStructures.RedBlackTree.current.right.element, DataStructures.RedBlackTree.current.right.color, DataStructures.RedBlackTree.current.color, DataStructures.RedBlackTree.parent, DataStructures.RedBlackTree.parent.element, DataStructures.RedBlackTree.parent.left, DataStructures.RedBlackTree.parent.left.element, DataStructures.RedBlackTree.parent.left.color, DataStructures.RedBlackTree.parent.right, DataStructures.RedBlackTree.parent.right.element, DataStructures.RedBlackTree.parent.right.color, DataStructures.RedBlackTree.grand, DataStructures.RedBlackTree.grand.element, DataStructures.RedBlackTree.grand.left, DataStructures.RedBlackTree.grand.left.element, DataStructures.RedBlackTree.grand.left.left, DataStructures.RedBlackTree.grand.left.right, DataStructures.RedBlackTree.grand.right, DataStructures.RedBlackTree.grand.right.element, DataStructures.RedBlackTree.grand.right.left, DataStructures.RedBlackTree.grand.right.right, DataStructures.RedBlackTree.grand.right.color, DataStructures.RedBlackTree.grand.color, DataStructures.RedBlackTree.great, DataStructures.RedBlackTree.great.element, DataStructures.RedBlackTree.great.left, DataStructures.RedBlackTree.great.left.element, DataStructures.RedBlackTree.great.left.left, DataStructures.RedBlackTree.great.left.right, DataStructures.RedBlackTree.great.left.color, DataStructures.RedBlackTree.great.right, DataStructures.RedBlackTree.great.right.element, DataStructures.RedBlackTree.great.right.left, DataStructures.RedBlackTree.great.right.right, DataStructures.RedBlackTree.great.right.color, DataStructures.RedBlackTree.great.color
this.header == \old(this.header)
this.header.element == \old(this.header.element)
this.header.right.color == DataStructures.RedBlackTree.BLACK
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.right
DataStructures.RedBlackTree.nullNode == \old(this.header.left)
DataStructures.RedBlackTree.nullNode == \old(this.header.left.left)
DataStructures.RedBlackTree.nullNode == \old(this.header.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right.right)
((\old(DataStructures.RedBlackTree.current) != null) && (\old(DataStructures.RedBlackTree.current.left) != null))  ==>  (DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.left.left))
DataStructures.RedBlackTree.nullNode.element == \old(item)
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.parent.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.left.color
DataStructures.RedBlackTree.current.left.color == DataStructures.RedBlackTree.current.right.color
this.header.right.element != null
DataStructures.RedBlackTree.nullNode.element != null
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.MyInteger.class
DataStructures.RedBlackTree.current != null
DataStructures.RedBlackTree.current.element != null
DataStructures.RedBlackTree.current.left != null
DataStructures.RedBlackTree.current.left.element != null
DataStructures.RedBlackTree.current.left.color == 0 || DataStructures.RedBlackTree.current.left.color == 1
DataStructures.RedBlackTree.current.right != null
DataStructures.RedBlackTree.current.right.element != null
DataStructures.RedBlackTree.current.color == 0 || DataStructures.RedBlackTree.current.color == 1
DataStructures.RedBlackTree.parent != null
DataStructures.RedBlackTree.parent.element != null
DataStructures.RedBlackTree.parent.left != null
DataStructures.RedBlackTree.parent.left.element != null
DataStructures.RedBlackTree.parent.left.color == 0 || DataStructures.RedBlackTree.parent.left.color == 1
DataStructures.RedBlackTree.parent.right != null
DataStructures.RedBlackTree.parent.right.element != null
DataStructures.RedBlackTree.parent.right.color == 0 || DataStructures.RedBlackTree.parent.right.color == 1
DataStructures.RedBlackTree.grand != null
DataStructures.RedBlackTree.grand.element != null
DataStructures.RedBlackTree.grand.left != null
DataStructures.RedBlackTree.grand.left.element != null
DataStructures.RedBlackTree.grand.left.left != null
DataStructures.RedBlackTree.grand.left.right != null
DataStructures.RedBlackTree.grand.right != null
DataStructures.RedBlackTree.grand.right.element != null
DataStructures.RedBlackTree.grand.right.left != null
DataStructures.RedBlackTree.grand.right.right != null
DataStructures.RedBlackTree.grand.right.color == 0 || DataStructures.RedBlackTree.grand.right.color == 1
DataStructures.RedBlackTree.grand.color == 0 || DataStructures.RedBlackTree.grand.color == 1
DataStructures.RedBlackTree.great != null
DataStructures.RedBlackTree.great.element != null
DataStructures.RedBlackTree.great.left != null
DataStructures.RedBlackTree.great.left.element != null
DataStructures.RedBlackTree.great.left.left != null
DataStructures.RedBlackTree.great.left.right != null
DataStructures.RedBlackTree.great.left.color == 0 || DataStructures.RedBlackTree.great.left.color == 1
DataStructures.RedBlackTree.great.right != null
DataStructures.RedBlackTree.great.right.element != null
DataStructures.RedBlackTree.great.right.left != null
DataStructures.RedBlackTree.great.right.right != null
DataStructures.RedBlackTree.great.right.color == 0 || DataStructures.RedBlackTree.great.right.color == 1
DataStructures.RedBlackTree.great.color == 0 || DataStructures.RedBlackTree.great.color == 1
this.header.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
this.header.left.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
this.header.right.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(this.header.element.getClass())
(\old(DataStructures.RedBlackTree.nullNode.element) != null)  ==>  (DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.nullNode.element.getClass()))
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(item.getClass())
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.current.left.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.current.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.parent.left.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.grand.right.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.grand.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.current.left.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.current.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.parent.left.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.grand.right.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.grand.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.color
DataStructures.RedBlackTree.current.left.color >= DataStructures.RedBlackTree.parent.left.color
DataStructures.RedBlackTree.current.left.color >= DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.current.left.color >= DataStructures.RedBlackTree.grand.color
(\old(DataStructures.RedBlackTree.parent) != null)  ==>  (DataStructures.RedBlackTree.current.left.color <= \old(DataStructures.RedBlackTree.parent.color))
DataStructures.RedBlackTree.current.color <= DataStructures.RedBlackTree.grand.right.color
(\old(DataStructures.RedBlackTree.parent) != null)  ==>  (DataStructures.RedBlackTree.current.color <= \old(DataStructures.RedBlackTree.parent.color))
((\old(DataStructures.RedBlackTree.grand) != null) && (\old(DataStructures.RedBlackTree.grand.right) != null))  ==>  (DataStructures.RedBlackTree.current.color <= \old(DataStructures.RedBlackTree.grand.right.color))
DataStructures.RedBlackTree.parent.left.color <= DataStructures.RedBlackTree.grand.right.color
(\old(DataStructures.RedBlackTree.parent) != null)  ==>  (DataStructures.RedBlackTree.parent.left.color <= \old(DataStructures.RedBlackTree.parent.color))
((\old(DataStructures.RedBlackTree.grand) != null) && (\old(DataStructures.RedBlackTree.grand.right) != null))  ==>  (DataStructures.RedBlackTree.parent.left.color <= \old(DataStructures.RedBlackTree.grand.right.color))
(\old(DataStructures.RedBlackTree.parent) != null)  ==>  (DataStructures.RedBlackTree.parent.right.color <= \old(DataStructures.RedBlackTree.parent.color))
(\old(DataStructures.RedBlackTree.current) != null)  ==>  (DataStructures.RedBlackTree.grand.right.color >= \old(DataStructures.RedBlackTree.current.color))
((\old(DataStructures.RedBlackTree.parent) != null) && (\old(DataStructures.RedBlackTree.parent.left) != null))  ==>  (DataStructures.RedBlackTree.grand.right.color >= \old(DataStructures.RedBlackTree.parent.left.color))
(\old(DataStructures.RedBlackTree.parent) != null)  ==>  (DataStructures.RedBlackTree.grand.right.color <= \old(DataStructures.RedBlackTree.parent.color))
(\old(DataStructures.RedBlackTree.parent) != null)  ==>  (DataStructures.RedBlackTree.grand.color <= \old(DataStructures.RedBlackTree.parent.color))
(\old(DataStructures.RedBlackTree.parent) != null)  ==>  (DataStructures.RedBlackTree.great.left.color <= \old(DataStructures.RedBlackTree.parent.color))
(\old(DataStructures.RedBlackTree.parent) != null)  ==>  (DataStructures.RedBlackTree.great.right.color <= \old(DataStructures.RedBlackTree.parent.color))
(\old(DataStructures.RedBlackTree.parent) != null)  ==>  (DataStructures.RedBlackTree.great.color <= \old(DataStructures.RedBlackTree.parent.color))
DataStructures.RedBlackTree.current.left.color == (java.lang.Math.pow(DataStructures.RedBlackTree.parent.left.color, DataStructures.RedBlackTree.current.color))
DataStructures.RedBlackTree.current.left.color == (java.lang.Math.pow(DataStructures.RedBlackTree.parent.right.color, DataStructures.RedBlackTree.current.color))
DataStructures.RedBlackTree.current.left.color == (java.lang.Math.pow(DataStructures.RedBlackTree.grand.color, DataStructures.RedBlackTree.current.color))
((\old(DataStructures.RedBlackTree.grand) != null) && (\old(DataStructures.RedBlackTree.grand.right) != null))  ==>  (DataStructures.RedBlackTree.current.color == (\old(DataStructures.RedBlackTree.grand.right.color) >> DataStructures.RedBlackTree.current.left.color))
((\old(DataStructures.RedBlackTree.grand) != null) && (\old(DataStructures.RedBlackTree.grand.right) != null))  ==>  (DataStructures.RedBlackTree.current.color == (\old(DataStructures.RedBlackTree.grand.right.color) >>> DataStructures.RedBlackTree.current.left.color))
===========================================================================
DataStructures.RedBlackTree.isEmpty():::ENTER
    Variables: this this.header this.header.element this.header.element.getClass() this.header.left this.header.left.element this.header.left.element.getClass() this.header.left.left this.header.left.right this.header.left.color this.header.right this.header.right.element this.header.right.element.getClass() this.header.right.left this.header.right.right this.header.right.color this.header.color DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color
this.header.right.color == DataStructures.RedBlackTree.BLACK
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right.right
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.left.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.right.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.parent.left.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.parent.right.element
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.parent.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.parent.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.great.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.current.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.grand.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.current == DataStructures.RedBlackTree.parent.right
DataStructures.RedBlackTree.current == DataStructures.RedBlackTree.grand.left.right
DataStructures.RedBlackTree.parent == DataStructures.RedBlackTree.grand.left
DataStructures.RedBlackTree.parent == DataStructures.RedBlackTree.great.left.left
DataStructures.RedBlackTree.parent.element == DataStructures.RedBlackTree.grand.left.element
DataStructures.RedBlackTree.grand == DataStructures.RedBlackTree.great.left
DataStructures.RedBlackTree.grand.element == DataStructures.RedBlackTree.great.left.element
DataStructures.RedBlackTree.grand.right == DataStructures.RedBlackTree.great.left.right
this.header.right != null
this.header.right.element != null
this.header.right.left != null
this.header.right.right != null
DataStructures.RedBlackTree.nullNode.element != null
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.MyInteger.class
DataStructures.RedBlackTree.current != null
DataStructures.RedBlackTree.parent != null
DataStructures.RedBlackTree.parent.element != null
DataStructures.RedBlackTree.grand != null
DataStructures.RedBlackTree.grand.element != null
DataStructures.RedBlackTree.grand.right != null
DataStructures.RedBlackTree.grand.right.element != null
DataStructures.RedBlackTree.great != null
DataStructures.RedBlackTree.great.element != null
DataStructures.RedBlackTree.great.right != null
DataStructures.RedBlackTree.great.right.element != null
DataStructures.RedBlackTree.great.right.left != null
DataStructures.RedBlackTree.great.right.right != null
this.header.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
this.header.left.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
this.header.right.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.right.element.getClass()
===========================================================================
DataStructures.RedBlackTree.isEmpty():::EXIT
    Variables: this this.header this.header.element this.header.element.getClass() this.header.left this.header.left.element this.header.left.element.getClass() this.header.left.left this.header.left.right this.header.left.color this.header.right this.header.right.element this.header.right.element.getClass() this.header.right.left this.header.right.right this.header.right.color this.header.color DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color return orig(this) orig(this.header) orig(this.header.element) orig(this.header.element.getClass()) orig(this.header.left) orig(this.header.left.element) orig(this.header.left.element.getClass()) orig(this.header.left.left) orig(this.header.left.right) orig(this.header.left.color) orig(this.header.right) orig(this.header.right.element) orig(this.header.right.element.getClass()) orig(this.header.right.left) orig(this.header.right.right) orig(this.header.right.color) orig(this.header.color) orig(DataStructures.RedBlackTree.nullNode) orig(DataStructures.RedBlackTree.nullNode.element) orig(DataStructures.RedBlackTree.nullNode.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left) orig(DataStructures.RedBlackTree.nullNode.left.element) orig(DataStructures.RedBlackTree.nullNode.left.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left.left) orig(DataStructures.RedBlackTree.nullNode.left.right) orig(DataStructures.RedBlackTree.nullNode.left.color) orig(DataStructures.RedBlackTree.nullNode.right) orig(DataStructures.RedBlackTree.nullNode.right.element) orig(DataStructures.RedBlackTree.nullNode.right.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.right.left) orig(DataStructures.RedBlackTree.nullNode.right.right) orig(DataStructures.RedBlackTree.nullNode.right.color) orig(DataStructures.RedBlackTree.nullNode.color) orig(DataStructures.RedBlackTree.current) orig(DataStructures.RedBlackTree.current.element) orig(DataStructures.RedBlackTree.current.element.getClass()) orig(DataStructures.RedBlackTree.current.left) orig(DataStructures.RedBlackTree.current.left.element) orig(DataStructures.RedBlackTree.current.left.element.getClass()) orig(DataStructures.RedBlackTree.current.left.left) orig(DataStructures.RedBlackTree.current.left.right) orig(DataStructures.RedBlackTree.current.left.color) orig(DataStructures.RedBlackTree.current.right) orig(DataStructures.RedBlackTree.current.right.element) orig(DataStructures.RedBlackTree.current.right.element.getClass()) orig(DataStructures.RedBlackTree.current.right.left) orig(DataStructures.RedBlackTree.current.right.right) orig(DataStructures.RedBlackTree.current.right.color) orig(DataStructures.RedBlackTree.current.color) orig(DataStructures.RedBlackTree.parent) orig(DataStructures.RedBlackTree.parent.element) orig(DataStructures.RedBlackTree.parent.element.getClass()) orig(DataStructures.RedBlackTree.parent.left) orig(DataStructures.RedBlackTree.parent.left.element) orig(DataStructures.RedBlackTree.parent.left.element.getClass()) orig(DataStructures.RedBlackTree.parent.left.left) orig(DataStructures.RedBlackTree.parent.left.right) orig(DataStructures.RedBlackTree.parent.left.color) orig(DataStructures.RedBlackTree.parent.right) orig(DataStructures.RedBlackTree.parent.right.element) orig(DataStructures.RedBlackTree.parent.right.element.getClass()) orig(DataStructures.RedBlackTree.parent.right.left) orig(DataStructures.RedBlackTree.parent.right.right) orig(DataStructures.RedBlackTree.parent.right.color) orig(DataStructures.RedBlackTree.parent.color) orig(DataStructures.RedBlackTree.grand) orig(DataStructures.RedBlackTree.grand.element) orig(DataStructures.RedBlackTree.grand.element.getClass()) orig(DataStructures.RedBlackTree.grand.left) orig(DataStructures.RedBlackTree.grand.left.element) orig(DataStructures.RedBlackTree.grand.left.element.getClass()) orig(DataStructures.RedBlackTree.grand.left.left) orig(DataStructures.RedBlackTree.grand.left.right) orig(DataStructures.RedBlackTree.grand.left.color) orig(DataStructures.RedBlackTree.grand.right) orig(DataStructures.RedBlackTree.grand.right.element) orig(DataStructures.RedBlackTree.grand.right.element.getClass()) orig(DataStructures.RedBlackTree.grand.right.left) orig(DataStructures.RedBlackTree.grand.right.right) orig(DataStructures.RedBlackTree.grand.right.color) orig(DataStructures.RedBlackTree.grand.color) orig(DataStructures.RedBlackTree.great) orig(DataStructures.RedBlackTree.great.element) orig(DataStructures.RedBlackTree.great.element.getClass()) orig(DataStructures.RedBlackTree.great.left) orig(DataStructures.RedBlackTree.great.left.element) orig(DataStructures.RedBlackTree.great.left.element.getClass()) orig(DataStructures.RedBlackTree.great.left.left) orig(DataStructures.RedBlackTree.great.left.right) orig(DataStructures.RedBlackTree.great.left.color) orig(DataStructures.RedBlackTree.great.right) orig(DataStructures.RedBlackTree.great.right.element) orig(DataStructures.RedBlackTree.great.right.element.getClass()) orig(DataStructures.RedBlackTree.great.right.left) orig(DataStructures.RedBlackTree.great.right.right) orig(DataStructures.RedBlackTree.great.right.color) orig(DataStructures.RedBlackTree.great.color)
this.header == \old(this.header)
this.header.element == \old(this.header.element)
this.header.right == \old(this.header.right)
this.header.right.element == \old(this.header.right.element)
this.header.right.left == \old(this.header.right.left)
this.header.right.right == \old(this.header.right.right)
this.header.right.color == DataStructures.RedBlackTree.BLACK
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right.right
DataStructures.RedBlackTree.nullNode == \old(this.header.left)
DataStructures.RedBlackTree.nullNode == \old(this.header.left.left)
DataStructures.RedBlackTree.nullNode == \old(this.header.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.right.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.right.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.grand.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.grand.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.grand.right.right)
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.left.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.right.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.parent.left.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.parent.right.element
DataStructures.RedBlackTree.nullNode.element == \old(this.header.left.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.nullNode.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.nullNode.left.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.nullNode.right.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.current.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.current.left.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.current.right.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.parent.left.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.parent.right.element)
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.parent.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.parent.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.great.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.current.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.grand.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.current == DataStructures.RedBlackTree.parent.right
DataStructures.RedBlackTree.current == DataStructures.RedBlackTree.grand.left.right
DataStructures.RedBlackTree.current == \old(DataStructures.RedBlackTree.current)
DataStructures.RedBlackTree.current == \old(DataStructures.RedBlackTree.parent.right)
DataStructures.RedBlackTree.current == \old(DataStructures.RedBlackTree.grand.left.right)
DataStructures.RedBlackTree.parent == DataStructures.RedBlackTree.grand.left
DataStructures.RedBlackTree.parent == DataStructures.RedBlackTree.great.left.left
DataStructures.RedBlackTree.parent == \old(DataStructures.RedBlackTree.parent)
DataStructures.RedBlackTree.parent == \old(DataStructures.RedBlackTree.grand.left)
DataStructures.RedBlackTree.parent == \old(DataStructures.RedBlackTree.great.left.left)
DataStructures.RedBlackTree.parent.element == DataStructures.RedBlackTree.grand.left.element
DataStructures.RedBlackTree.parent.element == \old(DataStructures.RedBlackTree.parent.element)
DataStructures.RedBlackTree.parent.element == \old(DataStructures.RedBlackTree.grand.left.element)
DataStructures.RedBlackTree.grand == DataStructures.RedBlackTree.great.left
DataStructures.RedBlackTree.grand == \old(DataStructures.RedBlackTree.grand)
DataStructures.RedBlackTree.grand == \old(DataStructures.RedBlackTree.great.left)
DataStructures.RedBlackTree.grand.element == DataStructures.RedBlackTree.great.left.element
DataStructures.RedBlackTree.grand.element == \old(DataStructures.RedBlackTree.grand.element)
DataStructures.RedBlackTree.grand.element == \old(DataStructures.RedBlackTree.great.left.element)
DataStructures.RedBlackTree.grand.right == DataStructures.RedBlackTree.great.left.right
DataStructures.RedBlackTree.grand.right == \old(DataStructures.RedBlackTree.grand.right)
DataStructures.RedBlackTree.grand.right == \old(DataStructures.RedBlackTree.great.left.right)
DataStructures.RedBlackTree.grand.right.element == \old(DataStructures.RedBlackTree.grand.right.element)
DataStructures.RedBlackTree.great == \old(DataStructures.RedBlackTree.great)
DataStructures.RedBlackTree.great.element == \old(DataStructures.RedBlackTree.great.element)
DataStructures.RedBlackTree.great.right == \old(DataStructures.RedBlackTree.great.right)
DataStructures.RedBlackTree.great.right.element == \old(DataStructures.RedBlackTree.great.right.element)
DataStructures.RedBlackTree.great.right.left == \old(DataStructures.RedBlackTree.great.right.left)
DataStructures.RedBlackTree.great.right.right == \old(DataStructures.RedBlackTree.great.right.right)
this.header.right != null
this.header.right.element != null
this.header.right.left != null
this.header.right.right != null
DataStructures.RedBlackTree.nullNode.element != null
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.MyInteger.class
DataStructures.RedBlackTree.current != null
DataStructures.RedBlackTree.parent != null
DataStructures.RedBlackTree.parent.element != null
DataStructures.RedBlackTree.grand != null
DataStructures.RedBlackTree.grand.element != null
DataStructures.RedBlackTree.grand.right != null
DataStructures.RedBlackTree.grand.right.element != null
DataStructures.RedBlackTree.great != null
DataStructures.RedBlackTree.great.element != null
DataStructures.RedBlackTree.great.right != null
DataStructures.RedBlackTree.great.right.element != null
DataStructures.RedBlackTree.great.right.left != null
DataStructures.RedBlackTree.great.right.right != null
\result == false
this.header.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
this.header.left.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
this.header.right.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(this.header.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(this.header.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(this.header.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.nullNode.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.nullNode.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.nullNode.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.current.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.current.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.current.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.parent.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.parent.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.parent.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.grand.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.grand.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.grand.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.great.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.great.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.great.right.element.getClass())
===========================================================================
DataStructures.RedBlackTree.main(java.lang.String[]):::ENTER
    Variables: DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color args args.getClass() args[] args[].toString size(args[]) size(args[])-1 args[DataStructures.RedBlackTree.nullNode.left.color] args[DataStructures.RedBlackTree.nullNode.left.color-1] args[DataStructures.RedBlackTree.nullNode.left.color..] args[DataStructures.RedBlackTree.nullNode.left.color+1..] args[0..DataStructures.RedBlackTree.nullNode.left.color] args[0..DataStructures.RedBlackTree.nullNode.left.color-1] args[DataStructures.RedBlackTree.nullNode.right.color] args[DataStructures.RedBlackTree.nullNode.right.color-1] args[DataStructures.RedBlackTree.nullNode.right.color..] args[DataStructures.RedBlackTree.nullNode.right.color+1..] args[0..DataStructures.RedBlackTree.nullNode.right.color] args[0..DataStructures.RedBlackTree.nullNode.right.color-1] args[DataStructures.RedBlackTree.nullNode.color] args[DataStructures.RedBlackTree.nullNode.color-1] args[DataStructures.RedBlackTree.nullNode.color..] args[DataStructures.RedBlackTree.nullNode.color+1..] args[0..DataStructures.RedBlackTree.nullNode.color] args[0..DataStructures.RedBlackTree.nullNode.color-1] args[DataStructures.RedBlackTree.BLACK] args[DataStructures.RedBlackTree.BLACK-1] args[DataStructures.RedBlackTree.BLACK..] args[DataStructures.RedBlackTree.BLACK+1..] args[0..DataStructures.RedBlackTree.BLACK] args[0..DataStructures.RedBlackTree.BLACK-1] args[DataStructures.RedBlackTree.RED] args[DataStructures.RedBlackTree.RED-1] args[DataStructures.RedBlackTree.RED..] args[DataStructures.RedBlackTree.RED+1..] args[0..DataStructures.RedBlackTree.RED] args[0..DataStructures.RedBlackTree.RED-1] args[DataStructures.RedBlackTree.current.left.color] args[DataStructures.RedBlackTree.current.left.color-1] args[DataStructures.RedBlackTree.current.left.color..] args[DataStructures.RedBlackTree.current.left.color+1..] args[0..DataStructures.RedBlackTree.current.left.color] args[0..DataStructures.RedBlackTree.current.left.color-1] args[DataStructures.RedBlackTree.current.right.color] args[DataStructures.RedBlackTree.current.right.color-1] args[DataStructures.RedBlackTree.current.right.color..] args[DataStructures.RedBlackTree.current.right.color+1..] args[0..DataStructures.RedBlackTree.current.right.color] args[0..DataStructures.RedBlackTree.current.right.color-1] args[DataStructures.RedBlackTree.current.color] args[DataStructures.RedBlackTree.current.color-1] args[DataStructures.RedBlackTree.current.color..] args[DataStructures.RedBlackTree.current.color+1..] args[0..DataStructures.RedBlackTree.current.color] args[0..DataStructures.RedBlackTree.current.color-1] args[DataStructures.RedBlackTree.parent.left.color] args[DataStructures.RedBlackTree.parent.left.color-1] args[DataStructures.RedBlackTree.parent.left.color..] args[DataStructures.RedBlackTree.parent.left.color+1..] args[0..DataStructures.RedBlackTree.parent.left.color] args[0..DataStructures.RedBlackTree.parent.left.color-1] args[DataStructures.RedBlackTree.parent.right.color] args[DataStructures.RedBlackTree.parent.right.color-1] args[DataStructures.RedBlackTree.parent.right.color..] args[DataStructures.RedBlackTree.parent.right.color+1..] args[0..DataStructures.RedBlackTree.parent.right.color] args[0..DataStructures.RedBlackTree.parent.right.color-1] args[DataStructures.RedBlackTree.parent.color] args[DataStructures.RedBlackTree.parent.color-1] args[DataStructures.RedBlackTree.parent.color..] args[DataStructures.RedBlackTree.parent.color+1..] args[0..DataStructures.RedBlackTree.parent.color] args[0..DataStructures.RedBlackTree.parent.color-1] args[DataStructures.RedBlackTree.grand.left.color] args[DataStructures.RedBlackTree.grand.left.color-1] args[DataStructures.RedBlackTree.grand.left.color..] args[DataStructures.RedBlackTree.grand.left.color+1..] args[0..DataStructures.RedBlackTree.grand.left.color] args[0..DataStructures.RedBlackTree.grand.left.color-1] args[DataStructures.RedBlackTree.grand.right.color] args[DataStructures.RedBlackTree.grand.right.color-1] args[DataStructures.RedBlackTree.grand.right.color..] args[DataStructures.RedBlackTree.grand.right.color+1..] args[0..DataStructures.RedBlackTree.grand.right.color] args[0..DataStructures.RedBlackTree.grand.right.color-1] args[DataStructures.RedBlackTree.grand.color] args[DataStructures.RedBlackTree.grand.color-1] args[DataStructures.RedBlackTree.grand.color..] args[DataStructures.RedBlackTree.grand.color+1..] args[0..DataStructures.RedBlackTree.grand.color] args[0..DataStructures.RedBlackTree.grand.color-1] args[DataStructures.RedBlackTree.great.left.color] args[DataStructures.RedBlackTree.great.left.color-1] args[DataStructures.RedBlackTree.great.left.color..] args[DataStructures.RedBlackTree.great.left.color+1..] args[0..DataStructures.RedBlackTree.great.left.color] args[0..DataStructures.RedBlackTree.great.left.color-1] args[DataStructures.RedBlackTree.great.right.color] args[DataStructures.RedBlackTree.great.right.color-1] args[DataStructures.RedBlackTree.great.right.color..] args[DataStructures.RedBlackTree.great.right.color+1..] args[0..DataStructures.RedBlackTree.great.right.color] args[0..DataStructures.RedBlackTree.great.right.color-1] args[DataStructures.RedBlackTree.great.color] args[DataStructures.RedBlackTree.great.color-1] args[DataStructures.RedBlackTree.great.color..] args[DataStructures.RedBlackTree.great.color+1..] args[0..DataStructures.RedBlackTree.great.color] args[0..DataStructures.RedBlackTree.great.color-1]
DataStructures.RedBlackTree.RED == daikon.Quant.size(args)
DataStructures.RedBlackTree.current == DataStructures.RedBlackTree.parent
DataStructures.RedBlackTree.current == DataStructures.RedBlackTree.grand
DataStructures.RedBlackTree.current == DataStructures.RedBlackTree.great
DataStructures.RedBlackTree.nullNode.element == null
DataStructures.RedBlackTree.current == null
args != null
args.getClass() == java.lang.String[].class
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
daikon.Quant.pairwiseEqual(daikon.Quant.collectObject(args, "toString()"), new String[] {  })
===========================================================================
DataStructures.RedBlackTree.main(java.lang.String[]):::EXIT
    Variables: DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color args args.getClass() args[] args[].toString orig(DataStructures.RedBlackTree.nullNode) orig(DataStructures.RedBlackTree.nullNode.element) orig(DataStructures.RedBlackTree.nullNode.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left) orig(DataStructures.RedBlackTree.nullNode.left.element) orig(DataStructures.RedBlackTree.nullNode.left.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left.left) orig(DataStructures.RedBlackTree.nullNode.left.right) orig(DataStructures.RedBlackTree.nullNode.left.color) orig(DataStructures.RedBlackTree.nullNode.right) orig(DataStructures.RedBlackTree.nullNode.right.element) orig(DataStructures.RedBlackTree.nullNode.right.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.right.left) orig(DataStructures.RedBlackTree.nullNode.right.right) orig(DataStructures.RedBlackTree.nullNode.right.color) orig(DataStructures.RedBlackTree.nullNode.color) orig(DataStructures.RedBlackTree.current) orig(DataStructures.RedBlackTree.current.element) orig(DataStructures.RedBlackTree.current.element.getClass()) orig(DataStructures.RedBlackTree.current.left) orig(DataStructures.RedBlackTree.current.left.element) orig(DataStructures.RedBlackTree.current.left.element.getClass()) orig(DataStructures.RedBlackTree.current.left.left) orig(DataStructures.RedBlackTree.current.left.right) orig(DataStructures.RedBlackTree.current.left.color) orig(DataStructures.RedBlackTree.current.right) orig(DataStructures.RedBlackTree.current.right.element) orig(DataStructures.RedBlackTree.current.right.element.getClass()) orig(DataStructures.RedBlackTree.current.right.left) orig(DataStructures.RedBlackTree.current.right.right) orig(DataStructures.RedBlackTree.current.right.color) orig(DataStructures.RedBlackTree.current.color) orig(DataStructures.RedBlackTree.parent) orig(DataStructures.RedBlackTree.parent.element) orig(DataStructures.RedBlackTree.parent.element.getClass()) orig(DataStructures.RedBlackTree.parent.left) orig(DataStructures.RedBlackTree.parent.left.element) orig(DataStructures.RedBlackTree.parent.left.element.getClass()) orig(DataStructures.RedBlackTree.parent.left.left) orig(DataStructures.RedBlackTree.parent.left.right) orig(DataStructures.RedBlackTree.parent.left.color) orig(DataStructures.RedBlackTree.parent.right) orig(DataStructures.RedBlackTree.parent.right.element) orig(DataStructures.RedBlackTree.parent.right.element.getClass()) orig(DataStructures.RedBlackTree.parent.right.left) orig(DataStructures.RedBlackTree.parent.right.right) orig(DataStructures.RedBlackTree.parent.right.color) orig(DataStructures.RedBlackTree.parent.color) orig(DataStructures.RedBlackTree.grand) orig(DataStructures.RedBlackTree.grand.element) orig(DataStructures.RedBlackTree.grand.element.getClass()) orig(DataStructures.RedBlackTree.grand.left) orig(DataStructures.RedBlackTree.grand.left.element) orig(DataStructures.RedBlackTree.grand.left.element.getClass()) orig(DataStructures.RedBlackTree.grand.left.left) orig(DataStructures.RedBlackTree.grand.left.right) orig(DataStructures.RedBlackTree.grand.left.color) orig(DataStructures.RedBlackTree.grand.right) orig(DataStructures.RedBlackTree.grand.right.element) orig(DataStructures.RedBlackTree.grand.right.element.getClass()) orig(DataStructures.RedBlackTree.grand.right.left) orig(DataStructures.RedBlackTree.grand.right.right) orig(DataStructures.RedBlackTree.grand.right.color) orig(DataStructures.RedBlackTree.grand.color) orig(DataStructures.RedBlackTree.great) orig(DataStructures.RedBlackTree.great.element) orig(DataStructures.RedBlackTree.great.element.getClass()) orig(DataStructures.RedBlackTree.great.left) orig(DataStructures.RedBlackTree.great.left.element) orig(DataStructures.RedBlackTree.great.left.element.getClass()) orig(DataStructures.RedBlackTree.great.left.left) orig(DataStructures.RedBlackTree.great.left.right) orig(DataStructures.RedBlackTree.great.left.color) orig(DataStructures.RedBlackTree.great.right) orig(DataStructures.RedBlackTree.great.right.element) orig(DataStructures.RedBlackTree.great.right.element.getClass()) orig(DataStructures.RedBlackTree.great.right.left) orig(DataStructures.RedBlackTree.great.right.right) orig(DataStructures.RedBlackTree.great.right.color) orig(DataStructures.RedBlackTree.great.color) orig(args) orig(args.getClass()) orig(args[]) orig(args[].toString) size(args[]) size(args[])-1 orig(size(args[])) orig(size(args[]))-1 args[DataStructures.RedBlackTree.nullNode.left.color] args[DataStructures.RedBlackTree.nullNode.left.color-1] args[DataStructures.RedBlackTree.nullNode.left.color..] args[DataStructures.RedBlackTree.nullNode.left.color+1..] args[0..DataStructures.RedBlackTree.nullNode.left.color] args[0..DataStructures.RedBlackTree.nullNode.left.color-1] orig(args[post(DataStructures.RedBlackTree.nullNode.left.color)]) orig(args[post(DataStructures.RedBlackTree.nullNode.left.color)-1]) orig(args[post(DataStructures.RedBlackTree.nullNode.left.color)..]) orig(args[post(DataStructures.RedBlackTree.nullNode.left.color)+1..]) orig(args[0..post(DataStructures.RedBlackTree.nullNode.left.color)]) orig(args[0..post(DataStructures.RedBlackTree.nullNode.left.color)-1]) args[DataStructures.RedBlackTree.nullNode.right.color] args[DataStructures.RedBlackTree.nullNode.right.color-1] args[DataStructures.RedBlackTree.nullNode.right.color..] args[DataStructures.RedBlackTree.nullNode.right.color+1..] args[0..DataStructures.RedBlackTree.nullNode.right.color] args[0..DataStructures.RedBlackTree.nullNode.right.color-1] orig(args[post(DataStructures.RedBlackTree.nullNode.right.color)]) orig(args[post(DataStructures.RedBlackTree.nullNode.right.color)-1]) orig(args[post(DataStructures.RedBlackTree.nullNode.right.color)..]) orig(args[post(DataStructures.RedBlackTree.nullNode.right.color)+1..]) orig(args[0..post(DataStructures.RedBlackTree.nullNode.right.color)]) orig(args[0..post(DataStructures.RedBlackTree.nullNode.right.color)-1]) args[DataStructures.RedBlackTree.nullNode.color] args[DataStructures.RedBlackTree.nullNode.color-1] args[DataStructures.RedBlackTree.nullNode.color..] args[DataStructures.RedBlackTree.nullNode.color+1..] args[0..DataStructures.RedBlackTree.nullNode.color] args[0..DataStructures.RedBlackTree.nullNode.color-1] orig(args[post(DataStructures.RedBlackTree.nullNode.color)]) orig(args[post(DataStructures.RedBlackTree.nullNode.color)-1]) orig(args[post(DataStructures.RedBlackTree.nullNode.color)..]) orig(args[post(DataStructures.RedBlackTree.nullNode.color)+1..]) orig(args[0..post(DataStructures.RedBlackTree.nullNode.color)]) orig(args[0..post(DataStructures.RedBlackTree.nullNode.color)-1]) args[DataStructures.RedBlackTree.BLACK] args[DataStructures.RedBlackTree.BLACK-1] args[DataStructures.RedBlackTree.BLACK..] args[DataStructures.RedBlackTree.BLACK+1..] args[0..DataStructures.RedBlackTree.BLACK] args[0..DataStructures.RedBlackTree.BLACK-1] orig(args[post(DataStructures.RedBlackTree.BLACK)]) orig(args[post(DataStructures.RedBlackTree.BLACK)-1]) orig(args[post(DataStructures.RedBlackTree.BLACK)..]) orig(args[post(DataStructures.RedBlackTree.BLACK)+1..]) orig(args[0..post(DataStructures.RedBlackTree.BLACK)]) orig(args[0..post(DataStructures.RedBlackTree.BLACK)-1]) args[DataStructures.RedBlackTree.RED] args[DataStructures.RedBlackTree.RED-1] args[DataStructures.RedBlackTree.RED..] args[DataStructures.RedBlackTree.RED+1..] args[0..DataStructures.RedBlackTree.RED] args[0..DataStructures.RedBlackTree.RED-1] orig(args[post(DataStructures.RedBlackTree.RED)]) orig(args[post(DataStructures.RedBlackTree.RED)-1]) orig(args[post(DataStructures.RedBlackTree.RED)..]) orig(args[post(DataStructures.RedBlackTree.RED)+1..]) orig(args[0..post(DataStructures.RedBlackTree.RED)]) orig(args[0..post(DataStructures.RedBlackTree.RED)-1]) args[DataStructures.RedBlackTree.current.left.color] args[DataStructures.RedBlackTree.current.left.color-1] args[DataStructures.RedBlackTree.current.left.color..] args[DataStructures.RedBlackTree.current.left.color+1..] args[0..DataStructures.RedBlackTree.current.left.color] args[0..DataStructures.RedBlackTree.current.left.color-1] orig(args[post(DataStructures.RedBlackTree.current.left.color)]) orig(args[post(DataStructures.RedBlackTree.current.left.color)-1]) orig(args[post(DataStructures.RedBlackTree.current.left.color)..]) orig(args[post(DataStructures.RedBlackTree.current.left.color)+1..]) orig(args[0..post(DataStructures.RedBlackTree.current.left.color)]) orig(args[0..post(DataStructures.RedBlackTree.current.left.color)-1]) args[DataStructures.RedBlackTree.current.right.color] args[DataStructures.RedBlackTree.current.right.color-1] args[DataStructures.RedBlackTree.current.right.color..] args[DataStructures.RedBlackTree.current.right.color+1..] args[0..DataStructures.RedBlackTree.current.right.color] args[0..DataStructures.RedBlackTree.current.right.color-1] orig(args[post(DataStructures.RedBlackTree.current.right.color)]) orig(args[post(DataStructures.RedBlackTree.current.right.color)-1]) orig(args[post(DataStructures.RedBlackTree.current.right.color)..]) orig(args[post(DataStructures.RedBlackTree.current.right.color)+1..]) orig(args[0..post(DataStructures.RedBlackTree.current.right.color)]) orig(args[0..post(DataStructures.RedBlackTree.current.right.color)-1]) args[DataStructures.RedBlackTree.current.color] args[DataStructures.RedBlackTree.current.color-1] args[DataStructures.RedBlackTree.current.color..] args[DataStructures.RedBlackTree.current.color+1..] args[0..DataStructures.RedBlackTree.current.color] args[0..DataStructures.RedBlackTree.current.color-1] orig(args[post(DataStructures.RedBlackTree.current.color)]) orig(args[post(DataStructures.RedBlackTree.current.color)-1]) orig(args[post(DataStructures.RedBlackTree.current.color)..]) orig(args[post(DataStructures.RedBlackTree.current.color)+1..]) orig(args[0..post(DataStructures.RedBlackTree.current.color)]) orig(args[0..post(DataStructures.RedBlackTree.current.color)-1]) args[DataStructures.RedBlackTree.parent.left.color] args[DataStructures.RedBlackTree.parent.left.color-1] args[DataStructures.RedBlackTree.parent.left.color..] args[DataStructures.RedBlackTree.parent.left.color+1..] args[0..DataStructures.RedBlackTree.parent.left.color] args[0..DataStructures.RedBlackTree.parent.left.color-1] orig(args[post(DataStructures.RedBlackTree.parent.left.color)]) orig(args[post(DataStructures.RedBlackTree.parent.left.color)-1]) orig(args[post(DataStructures.RedBlackTree.parent.left.color)..]) orig(args[post(DataStructures.RedBlackTree.parent.left.color)+1..]) orig(args[0..post(DataStructures.RedBlackTree.parent.left.color)]) orig(args[0..post(DataStructures.RedBlackTree.parent.left.color)-1]) args[DataStructures.RedBlackTree.parent.right.color] args[DataStructures.RedBlackTree.parent.right.color-1] args[DataStructures.RedBlackTree.parent.right.color..] args[DataStructures.RedBlackTree.parent.right.color+1..] args[0..DataStructures.RedBlackTree.parent.right.color] args[0..DataStructures.RedBlackTree.parent.right.color-1] orig(args[post(DataStructures.RedBlackTree.parent.right.color)]) orig(args[post(DataStructures.RedBlackTree.parent.right.color)-1]) orig(args[post(DataStructures.RedBlackTree.parent.right.color)..]) orig(args[post(DataStructures.RedBlackTree.parent.right.color)+1..]) orig(args[0..post(DataStructures.RedBlackTree.parent.right.color)]) orig(args[0..post(DataStructures.RedBlackTree.parent.right.color)-1]) args[DataStructures.RedBlackTree.parent.color] args[DataStructures.RedBlackTree.parent.color-1] args[DataStructures.RedBlackTree.parent.color..] args[DataStructures.RedBlackTree.parent.color+1..] args[0..DataStructures.RedBlackTree.parent.color] args[0..DataStructures.RedBlackTree.parent.color-1] orig(args[post(DataStructures.RedBlackTree.parent.color)]) orig(args[post(DataStructures.RedBlackTree.parent.color)-1]) orig(args[post(DataStructures.RedBlackTree.parent.color)..]) orig(args[post(DataStructures.RedBlackTree.parent.color)+1..]) orig(args[0..post(DataStructures.RedBlackTree.parent.color)]) orig(args[0..post(DataStructures.RedBlackTree.parent.color)-1]) args[DataStructures.RedBlackTree.grand.left.color] args[DataStructures.RedBlackTree.grand.left.color-1] args[DataStructures.RedBlackTree.grand.left.color..] args[DataStructures.RedBlackTree.grand.left.color+1..] args[0..DataStructures.RedBlackTree.grand.left.color] args[0..DataStructures.RedBlackTree.grand.left.color-1] orig(args[post(DataStructures.RedBlackTree.grand.left.color)]) orig(args[post(DataStructures.RedBlackTree.grand.left.color)-1]) orig(args[post(DataStructures.RedBlackTree.grand.left.color)..]) orig(args[post(DataStructures.RedBlackTree.grand.left.color)+1..]) orig(args[0..post(DataStructures.RedBlackTree.grand.left.color)]) orig(args[0..post(DataStructures.RedBlackTree.grand.left.color)-1]) args[DataStructures.RedBlackTree.grand.right.color] args[DataStructures.RedBlackTree.grand.right.color-1] args[DataStructures.RedBlackTree.grand.right.color..] args[DataStructures.RedBlackTree.grand.right.color+1..] args[0..DataStructures.RedBlackTree.grand.right.color] args[0..DataStructures.RedBlackTree.grand.right.color-1] orig(args[post(DataStructures.RedBlackTree.grand.right.color)]) orig(args[post(DataStructures.RedBlackTree.grand.right.color)-1]) orig(args[post(DataStructures.RedBlackTree.grand.right.color)..]) orig(args[post(DataStructures.RedBlackTree.grand.right.color)+1..]) orig(args[0..post(DataStructures.RedBlackTree.grand.right.color)]) orig(args[0..post(DataStructures.RedBlackTree.grand.right.color)-1]) args[DataStructures.RedBlackTree.grand.color] args[DataStructures.RedBlackTree.grand.color-1] args[DataStructures.RedBlackTree.grand.color..] args[DataStructures.RedBlackTree.grand.color+1..] args[0..DataStructures.RedBlackTree.grand.color] args[0..DataStructures.RedBlackTree.grand.color-1] orig(args[post(DataStructures.RedBlackTree.grand.color)]) orig(args[post(DataStructures.RedBlackTree.grand.color)-1]) orig(args[post(DataStructures.RedBlackTree.grand.color)..]) orig(args[post(DataStructures.RedBlackTree.grand.color)+1..]) orig(args[0..post(DataStructures.RedBlackTree.grand.color)]) orig(args[0..post(DataStructures.RedBlackTree.grand.color)-1]) args[DataStructures.RedBlackTree.great.left.color] args[DataStructures.RedBlackTree.great.left.color-1] args[DataStructures.RedBlackTree.great.left.color..] args[DataStructures.RedBlackTree.great.left.color+1..] args[0..DataStructures.RedBlackTree.great.left.color] args[0..DataStructures.RedBlackTree.great.left.color-1] orig(args[post(DataStructures.RedBlackTree.great.left.color)]) orig(args[post(DataStructures.RedBlackTree.great.left.color)-1]) orig(args[post(DataStructures.RedBlackTree.great.left.color)..]) orig(args[post(DataStructures.RedBlackTree.great.left.color)+1..]) orig(args[0..post(DataStructures.RedBlackTree.great.left.color)]) orig(args[0..post(DataStructures.RedBlackTree.great.left.color)-1]) args[DataStructures.RedBlackTree.great.right.color] args[DataStructures.RedBlackTree.great.right.color-1] args[DataStructures.RedBlackTree.great.right.color..] args[DataStructures.RedBlackTree.great.right.color+1..] args[0..DataStructures.RedBlackTree.great.right.color] args[0..DataStructures.RedBlackTree.great.right.color-1] orig(args[post(DataStructures.RedBlackTree.great.right.color)]) orig(args[post(DataStructures.RedBlackTree.great.right.color)-1]) orig(args[post(DataStructures.RedBlackTree.great.right.color)..]) orig(args[post(DataStructures.RedBlackTree.great.right.color)+1..]) orig(args[0..post(DataStructures.RedBlackTree.great.right.color)]) orig(args[0..post(DataStructures.RedBlackTree.great.right.color)-1]) args[DataStructures.RedBlackTree.great.color] args[DataStructures.RedBlackTree.great.color-1] args[DataStructures.RedBlackTree.great.color..] args[DataStructures.RedBlackTree.great.color+1..] args[0..DataStructures.RedBlackTree.great.color] args[0..DataStructures.RedBlackTree.great.color-1] orig(args[post(DataStructures.RedBlackTree.great.color)]) orig(args[post(DataStructures.RedBlackTree.great.color)-1]) orig(args[post(DataStructures.RedBlackTree.great.color)..]) orig(args[post(DataStructures.RedBlackTree.great.color)+1..]) orig(args[0..post(DataStructures.RedBlackTree.great.color)]) orig(args[0..post(DataStructures.RedBlackTree.great.color)-1]) args[orig(DataStructures.RedBlackTree.nullNode.left.color)] args[orig(DataStructures.RedBlackTree.nullNode.left.color)-1] args[orig(DataStructures.RedBlackTree.nullNode.left.color)..] args[orig(DataStructures.RedBlackTree.nullNode.left.color)+1..] args[0..orig(DataStructures.RedBlackTree.nullNode.left.color)] args[0..orig(DataStructures.RedBlackTree.nullNode.left.color)-1] args[orig(DataStructures.RedBlackTree.nullNode.right.color)] args[orig(DataStructures.RedBlackTree.nullNode.right.color)-1] args[orig(DataStructures.RedBlackTree.nullNode.right.color)..] args[orig(DataStructures.RedBlackTree.nullNode.right.color)+1..] args[0..orig(DataStructures.RedBlackTree.nullNode.right.color)] args[0..orig(DataStructures.RedBlackTree.nullNode.right.color)-1] args[orig(DataStructures.RedBlackTree.nullNode.color)] args[orig(DataStructures.RedBlackTree.nullNode.color)-1] args[orig(DataStructures.RedBlackTree.nullNode.color)..] args[orig(DataStructures.RedBlackTree.nullNode.color)+1..] args[0..orig(DataStructures.RedBlackTree.nullNode.color)] args[0..orig(DataStructures.RedBlackTree.nullNode.color)-1] args[orig(DataStructures.RedBlackTree.current.left.color)] args[orig(DataStructures.RedBlackTree.current.left.color)-1] args[orig(DataStructures.RedBlackTree.current.left.color)..] args[orig(DataStructures.RedBlackTree.current.left.color)+1..] args[0..orig(DataStructures.RedBlackTree.current.left.color)] args[0..orig(DataStructures.RedBlackTree.current.left.color)-1] args[orig(DataStructures.RedBlackTree.current.right.color)] args[orig(DataStructures.RedBlackTree.current.right.color)-1] args[orig(DataStructures.RedBlackTree.current.right.color)..] args[orig(DataStructures.RedBlackTree.current.right.color)+1..] args[0..orig(DataStructures.RedBlackTree.current.right.color)] args[0..orig(DataStructures.RedBlackTree.current.right.color)-1] args[orig(DataStructures.RedBlackTree.current.color)] args[orig(DataStructures.RedBlackTree.current.color)-1] args[orig(DataStructures.RedBlackTree.current.color)..] args[orig(DataStructures.RedBlackTree.current.color)+1..] args[0..orig(DataStructures.RedBlackTree.current.color)] args[0..orig(DataStructures.RedBlackTree.current.color)-1] args[orig(DataStructures.RedBlackTree.parent.left.color)] args[orig(DataStructures.RedBlackTree.parent.left.color)-1] args[orig(DataStructures.RedBlackTree.parent.left.color)..] args[orig(DataStructures.RedBlackTree.parent.left.color)+1..] args[0..orig(DataStructures.RedBlackTree.parent.left.color)] args[0..orig(DataStructures.RedBlackTree.parent.left.color)-1] args[orig(DataStructures.RedBlackTree.parent.right.color)] args[orig(DataStructures.RedBlackTree.parent.right.color)-1] args[orig(DataStructures.RedBlackTree.parent.right.color)..] args[orig(DataStructures.RedBlackTree.parent.right.color)+1..] args[0..orig(DataStructures.RedBlackTree.parent.right.color)] args[0..orig(DataStructures.RedBlackTree.parent.right.color)-1] args[orig(DataStructures.RedBlackTree.parent.color)] args[orig(DataStructures.RedBlackTree.parent.color)-1] args[orig(DataStructures.RedBlackTree.parent.color)..] args[orig(DataStructures.RedBlackTree.parent.color)+1..] args[0..orig(DataStructures.RedBlackTree.parent.color)] args[0..orig(DataStructures.RedBlackTree.parent.color)-1] args[orig(DataStructures.RedBlackTree.grand.left.color)] args[orig(DataStructures.RedBlackTree.grand.left.color)-1] args[orig(DataStructures.RedBlackTree.grand.left.color)..] args[orig(DataStructures.RedBlackTree.grand.left.color)+1..] args[0..orig(DataStructures.RedBlackTree.grand.left.color)] args[0..orig(DataStructures.RedBlackTree.grand.left.color)-1] args[orig(DataStructures.RedBlackTree.grand.right.color)] args[orig(DataStructures.RedBlackTree.grand.right.color)-1] args[orig(DataStructures.RedBlackTree.grand.right.color)..] args[orig(DataStructures.RedBlackTree.grand.right.color)+1..] args[0..orig(DataStructures.RedBlackTree.grand.right.color)] args[0..orig(DataStructures.RedBlackTree.grand.right.color)-1] args[orig(DataStructures.RedBlackTree.grand.color)] args[orig(DataStructures.RedBlackTree.grand.color)-1] args[orig(DataStructures.RedBlackTree.grand.color)..] args[orig(DataStructures.RedBlackTree.grand.color)+1..] args[0..orig(DataStructures.RedBlackTree.grand.color)] args[0..orig(DataStructures.RedBlackTree.grand.color)-1] args[orig(DataStructures.RedBlackTree.great.left.color)] args[orig(DataStructures.RedBlackTree.great.left.color)-1] args[orig(DataStructures.RedBlackTree.great.left.color)..] args[orig(DataStructures.RedBlackTree.great.left.color)+1..] args[0..orig(DataStructures.RedBlackTree.great.left.color)] args[0..orig(DataStructures.RedBlackTree.great.left.color)-1] args[orig(DataStructures.RedBlackTree.great.right.color)] args[orig(DataStructures.RedBlackTree.great.right.color)-1] args[orig(DataStructures.RedBlackTree.great.right.color)..] args[orig(DataStructures.RedBlackTree.great.right.color)+1..] args[0..orig(DataStructures.RedBlackTree.great.right.color)] args[0..orig(DataStructures.RedBlackTree.great.right.color)-1] args[orig(DataStructures.RedBlackTree.great.color)] args[orig(DataStructures.RedBlackTree.great.color)-1] args[orig(DataStructures.RedBlackTree.great.color)..] args[orig(DataStructures.RedBlackTree.great.color)+1..] args[0..orig(DataStructures.RedBlackTree.great.color)] args[0..orig(DataStructures.RedBlackTree.great.color)-1] orig(args[DataStructures.RedBlackTree.nullNode.left.color]) orig(args[DataStructures.RedBlackTree.nullNode.left.color-1]) orig(args[DataStructures.RedBlackTree.nullNode.left.color..]) orig(args[DataStructures.RedBlackTree.nullNode.left.color+1..]) orig(args[0..DataStructures.RedBlackTree.nullNode.left.color]) orig(args[0..DataStructures.RedBlackTree.nullNode.left.color-1]) orig(args[DataStructures.RedBlackTree.nullNode.right.color]) orig(args[DataStructures.RedBlackTree.nullNode.right.color-1]) orig(args[DataStructures.RedBlackTree.nullNode.right.color..]) orig(args[DataStructures.RedBlackTree.nullNode.right.color+1..]) orig(args[0..DataStructures.RedBlackTree.nullNode.right.color]) orig(args[0..DataStructures.RedBlackTree.nullNode.right.color-1]) orig(args[DataStructures.RedBlackTree.nullNode.color]) orig(args[DataStructures.RedBlackTree.nullNode.color-1]) orig(args[DataStructures.RedBlackTree.nullNode.color..]) orig(args[DataStructures.RedBlackTree.nullNode.color+1..]) orig(args[0..DataStructures.RedBlackTree.nullNode.color]) orig(args[0..DataStructures.RedBlackTree.nullNode.color-1]) orig(args[DataStructures.RedBlackTree.current.left.color]) orig(args[DataStructures.RedBlackTree.current.left.color-1]) orig(args[DataStructures.RedBlackTree.current.left.color..]) orig(args[DataStructures.RedBlackTree.current.left.color+1..]) orig(args[0..DataStructures.RedBlackTree.current.left.color]) orig(args[0..DataStructures.RedBlackTree.current.left.color-1]) orig(args[DataStructures.RedBlackTree.current.right.color]) orig(args[DataStructures.RedBlackTree.current.right.color-1]) orig(args[DataStructures.RedBlackTree.current.right.color..]) orig(args[DataStructures.RedBlackTree.current.right.color+1..]) orig(args[0..DataStructures.RedBlackTree.current.right.color]) orig(args[0..DataStructures.RedBlackTree.current.right.color-1]) orig(args[DataStructures.RedBlackTree.current.color]) orig(args[DataStructures.RedBlackTree.current.color-1]) orig(args[DataStructures.RedBlackTree.current.color..]) orig(args[DataStructures.RedBlackTree.current.color+1..]) orig(args[0..DataStructures.RedBlackTree.current.color]) orig(args[0..DataStructures.RedBlackTree.current.color-1]) orig(args[DataStructures.RedBlackTree.parent.left.color]) orig(args[DataStructures.RedBlackTree.parent.left.color-1]) orig(args[DataStructures.RedBlackTree.parent.left.color..]) orig(args[DataStructures.RedBlackTree.parent.left.color+1..]) orig(args[0..DataStructures.RedBlackTree.parent.left.color]) orig(args[0..DataStructures.RedBlackTree.parent.left.color-1]) orig(args[DataStructures.RedBlackTree.parent.right.color]) orig(args[DataStructures.RedBlackTree.parent.right.color-1]) orig(args[DataStructures.RedBlackTree.parent.right.color..]) orig(args[DataStructures.RedBlackTree.parent.right.color+1..]) orig(args[0..DataStructures.RedBlackTree.parent.right.color]) orig(args[0..DataStructures.RedBlackTree.parent.right.color-1]) orig(args[DataStructures.RedBlackTree.parent.color]) orig(args[DataStructures.RedBlackTree.parent.color-1]) orig(args[DataStructures.RedBlackTree.parent.color..]) orig(args[DataStructures.RedBlackTree.parent.color+1..]) orig(args[0..DataStructures.RedBlackTree.parent.color]) orig(args[0..DataStructures.RedBlackTree.parent.color-1]) orig(args[DataStructures.RedBlackTree.grand.left.color]) orig(args[DataStructures.RedBlackTree.grand.left.color-1]) orig(args[DataStructures.RedBlackTree.grand.left.color..]) orig(args[DataStructures.RedBlackTree.grand.left.color+1..]) orig(args[0..DataStructures.RedBlackTree.grand.left.color]) orig(args[0..DataStructures.RedBlackTree.grand.left.color-1]) orig(args[DataStructures.RedBlackTree.grand.right.color]) orig(args[DataStructures.RedBlackTree.grand.right.color-1]) orig(args[DataStructures.RedBlackTree.grand.right.color..]) orig(args[DataStructures.RedBlackTree.grand.right.color+1..]) orig(args[0..DataStructures.RedBlackTree.grand.right.color]) orig(args[0..DataStructures.RedBlackTree.grand.right.color-1]) orig(args[DataStructures.RedBlackTree.grand.color]) orig(args[DataStructures.RedBlackTree.grand.color-1]) orig(args[DataStructures.RedBlackTree.grand.color..]) orig(args[DataStructures.RedBlackTree.grand.color+1..]) orig(args[0..DataStructures.RedBlackTree.grand.color]) orig(args[0..DataStructures.RedBlackTree.grand.color-1]) orig(args[DataStructures.RedBlackTree.great.left.color]) orig(args[DataStructures.RedBlackTree.great.left.color-1]) orig(args[DataStructures.RedBlackTree.great.left.color..]) orig(args[DataStructures.RedBlackTree.great.left.color+1..]) orig(args[0..DataStructures.RedBlackTree.great.left.color]) orig(args[0..DataStructures.RedBlackTree.great.left.color-1]) orig(args[DataStructures.RedBlackTree.great.right.color]) orig(args[DataStructures.RedBlackTree.great.right.color-1]) orig(args[DataStructures.RedBlackTree.great.right.color..]) orig(args[DataStructures.RedBlackTree.great.right.color+1..]) orig(args[0..DataStructures.RedBlackTree.great.right.color]) orig(args[0..DataStructures.RedBlackTree.great.right.color-1]) orig(args[DataStructures.RedBlackTree.great.color]) orig(args[DataStructures.RedBlackTree.great.color-1]) orig(args[DataStructures.RedBlackTree.great.color..]) orig(args[DataStructures.RedBlackTree.great.color+1..]) orig(args[0..DataStructures.RedBlackTree.great.color]) orig(args[0..DataStructures.RedBlackTree.great.color-1])
assignable DataStructures.RedBlackTree.nullNode.element, DataStructures.RedBlackTree.nullNode.left.element, DataStructures.RedBlackTree.nullNode.right.element, DataStructures.RedBlackTree.current, DataStructures.RedBlackTree.current.element, DataStructures.RedBlackTree.current.left, DataStructures.RedBlackTree.current.left.element, DataStructures.RedBlackTree.current.left.left, DataStructures.RedBlackTree.current.left.right, DataStructures.RedBlackTree.current.left.color, DataStructures.RedBlackTree.current.right, DataStructures.RedBlackTree.current.right.element, DataStructures.RedBlackTree.current.right.left, DataStructures.RedBlackTree.current.right.right, DataStructures.RedBlackTree.current.right.color, DataStructures.RedBlackTree.current.color, DataStructures.RedBlackTree.parent, DataStructures.RedBlackTree.parent.element, DataStructures.RedBlackTree.parent.left, DataStructures.RedBlackTree.parent.left.element, DataStructures.RedBlackTree.parent.left.left, DataStructures.RedBlackTree.parent.left.right, DataStructures.RedBlackTree.parent.left.color, DataStructures.RedBlackTree.parent.right, DataStructures.RedBlackTree.parent.right.element, DataStructures.RedBlackTree.parent.right.left, DataStructures.RedBlackTree.parent.right.right, DataStructures.RedBlackTree.parent.right.color, DataStructures.RedBlackTree.parent.color, DataStructures.RedBlackTree.grand, DataStructures.RedBlackTree.grand.element, DataStructures.RedBlackTree.grand.left, DataStructures.RedBlackTree.grand.left.element, DataStructures.RedBlackTree.grand.left.left, DataStructures.RedBlackTree.grand.left.right, DataStructures.RedBlackTree.grand.left.color, DataStructures.RedBlackTree.grand.right, DataStructures.RedBlackTree.grand.right.element, DataStructures.RedBlackTree.grand.right.left, DataStructures.RedBlackTree.grand.right.right, DataStructures.RedBlackTree.grand.right.color, DataStructures.RedBlackTree.grand.color, DataStructures.RedBlackTree.great, DataStructures.RedBlackTree.great.element, DataStructures.RedBlackTree.great.left, DataStructures.RedBlackTree.great.left.element, DataStructures.RedBlackTree.great.left.left, DataStructures.RedBlackTree.great.left.right, DataStructures.RedBlackTree.great.left.color, DataStructures.RedBlackTree.great.right, DataStructures.RedBlackTree.great.right.element, DataStructures.RedBlackTree.great.right.left, DataStructures.RedBlackTree.great.right.right, DataStructures.RedBlackTree.great.right.color, DataStructures.RedBlackTree.great.color, args[DataStructures.RedBlackTree.nullNode.left.color], args[DataStructures.RedBlackTree.nullNode.left.color-1], args[DataStructures.RedBlackTree.nullNode.left.color..], args[DataStructures.RedBlackTree.nullNode.left.color+1..], args[0..DataStructures.RedBlackTree.nullNode.left.color], args[0..DataStructures.RedBlackTree.nullNode.left.color-1], args[DataStructures.RedBlackTree.nullNode.right.color], args[DataStructures.RedBlackTree.nullNode.right.color-1], args[DataStructures.RedBlackTree.nullNode.right.color..], args[DataStructures.RedBlackTree.nullNode.right.color+1..], args[0..DataStructures.RedBlackTree.nullNode.right.color], args[0..DataStructures.RedBlackTree.nullNode.right.color-1], args[DataStructures.RedBlackTree.nullNode.color], args[DataStructures.RedBlackTree.nullNode.color-1], args[DataStructures.RedBlackTree.nullNode.color..], args[DataStructures.RedBlackTree.nullNode.color+1..], args[0..DataStructures.RedBlackTree.nullNode.color], args[0..DataStructures.RedBlackTree.nullNode.color-1], args[DataStructures.RedBlackTree.current.left.color], args[DataStructures.RedBlackTree.current.left.color-1], args[DataStructures.RedBlackTree.current.left.color..], args[DataStructures.RedBlackTree.current.left.color+1..], args[0..DataStructures.RedBlackTree.current.left.color], args[0..DataStructures.RedBlackTree.current.left.color-1], args[DataStructures.RedBlackTree.current.right.color], args[DataStructures.RedBlackTree.current.right.color-1], args[DataStructures.RedBlackTree.current.right.color..], args[DataStructures.RedBlackTree.current.right.color+1..], args[0..DataStructures.RedBlackTree.current.right.color], args[0..DataStructures.RedBlackTree.current.right.color-1], args[DataStructures.RedBlackTree.current.color], args[DataStructures.RedBlackTree.current.color-1], args[DataStructures.RedBlackTree.current.color..], args[DataStructures.RedBlackTree.current.color+1..], args[0..DataStructures.RedBlackTree.current.color], args[0..DataStructures.RedBlackTree.current.color-1], args[DataStructures.RedBlackTree.parent.left.color], args[DataStructures.RedBlackTree.parent.left.color-1], args[DataStructures.RedBlackTree.parent.left.color..], args[DataStructures.RedBlackTree.parent.left.color+1..], args[0..DataStructures.RedBlackTree.parent.left.color], args[0..DataStructures.RedBlackTree.parent.left.color-1], args[DataStructures.RedBlackTree.parent.right.color], args[DataStructures.RedBlackTree.parent.right.color-1], args[DataStructures.RedBlackTree.parent.right.color..], args[DataStructures.RedBlackTree.parent.right.color+1..], args[0..DataStructures.RedBlackTree.parent.right.color], args[0..DataStructures.RedBlackTree.parent.right.color-1], args[DataStructures.RedBlackTree.parent.color], args[DataStructures.RedBlackTree.parent.color-1], args[DataStructures.RedBlackTree.parent.color..], args[DataStructures.RedBlackTree.parent.color+1..], args[0..DataStructures.RedBlackTree.parent.color], args[0..DataStructures.RedBlackTree.parent.color-1], args[DataStructures.RedBlackTree.grand.left.color], args[DataStructures.RedBlackTree.grand.left.color-1], args[DataStructures.RedBlackTree.grand.left.color..], args[DataStructures.RedBlackTree.grand.left.color+1..], args[0..DataStructures.RedBlackTree.grand.left.color], args[0..DataStructures.RedBlackTree.grand.left.color-1], args[DataStructures.RedBlackTree.grand.right.color], args[DataStructures.RedBlackTree.grand.right.color-1], args[DataStructures.RedBlackTree.grand.right.color..], args[DataStructures.RedBlackTree.grand.right.color+1..], args[0..DataStructures.RedBlackTree.grand.right.color], args[0..DataStructures.RedBlackTree.grand.right.color-1], args[DataStructures.RedBlackTree.grand.color], args[DataStructures.RedBlackTree.grand.color-1], args[DataStructures.RedBlackTree.grand.color..], args[DataStructures.RedBlackTree.grand.color+1..], args[0..DataStructures.RedBlackTree.grand.color], args[0..DataStructures.RedBlackTree.grand.color-1], args[DataStructures.RedBlackTree.great.left.color], args[DataStructures.RedBlackTree.great.left.color-1], args[DataStructures.RedBlackTree.great.left.color..], args[DataStructures.RedBlackTree.great.left.color+1..], args[0..DataStructures.RedBlackTree.great.left.color], args[0..DataStructures.RedBlackTree.great.left.color-1], args[DataStructures.RedBlackTree.great.right.color], args[DataStructures.RedBlackTree.great.right.color-1], args[DataStructures.RedBlackTree.great.right.color..], args[DataStructures.RedBlackTree.great.right.color+1..], args[0..DataStructures.RedBlackTree.great.right.color], args[0..DataStructures.RedBlackTree.great.right.color-1], args[DataStructures.RedBlackTree.great.color], args[DataStructures.RedBlackTree.great.color-1], args[DataStructures.RedBlackTree.great.color..], args[DataStructures.RedBlackTree.great.color+1..], args[0..DataStructures.RedBlackTree.great.color], args[0..DataStructures.RedBlackTree.great.color-1]
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right.right
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right.right)
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.left.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.right.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.parent.left.element
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.parent.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.parent.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.great.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.current.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.grand.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.parent == DataStructures.RedBlackTree.grand.left
DataStructures.RedBlackTree.parent == DataStructures.RedBlackTree.great.left.left
DataStructures.RedBlackTree.parent.element == DataStructures.RedBlackTree.grand.left.element
DataStructures.RedBlackTree.parent.right == DataStructures.RedBlackTree.grand.left.right
DataStructures.RedBlackTree.grand == DataStructures.RedBlackTree.great.left
DataStructures.RedBlackTree.grand.element == DataStructures.RedBlackTree.great.left.element
DataStructures.RedBlackTree.grand.right == DataStructures.RedBlackTree.great.left.right
daikon.Quant.pairwiseEqual(args, \old(args))
DataStructures.RedBlackTree.nullNode.element != null
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.MyInteger.class
DataStructures.RedBlackTree.current != null
DataStructures.RedBlackTree.current.element != null
DataStructures.RedBlackTree.parent != null
DataStructures.RedBlackTree.parent.element != null
DataStructures.RedBlackTree.parent.right != null
DataStructures.RedBlackTree.parent.right.element != null
DataStructures.RedBlackTree.grand != null
DataStructures.RedBlackTree.grand.element != null
DataStructures.RedBlackTree.grand.right != null
DataStructures.RedBlackTree.grand.right.element != null
DataStructures.RedBlackTree.great != null
DataStructures.RedBlackTree.great.element != null
DataStructures.RedBlackTree.great.right != null
DataStructures.RedBlackTree.great.right.element != null
DataStructures.RedBlackTree.great.right.left != null
DataStructures.RedBlackTree.great.right.right != null
("oneOf.java.jpp: SEQUENCE unimplemented" != null)
daikon.Quant.pairwiseEqual(daikon.Quant.collectObject(args, "toString()"), new String[] {  })
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.right.element.getClass()
===========================================================================
DataStructures.RedBlackTree.rotate(DataStructures.Comparable, DataStructures.RedBlackNode):::ENTER
    Variables: this this.header this.header.element this.header.element.getClass() this.header.left this.header.left.element this.header.left.element.getClass() this.header.left.left this.header.left.right this.header.left.color this.header.right this.header.right.element this.header.right.element.getClass() this.header.right.left this.header.right.right this.header.right.color this.header.color DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color item item.getClass() parent parent.element parent.element.getClass() parent.left parent.left.element parent.left.element.getClass() parent.left.left parent.left.right parent.left.color parent.right parent.right.element parent.right.element.getClass() parent.right.left parent.right.right parent.right.color parent.color
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.right
DataStructures.RedBlackTree.nullNode.element == item
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.right.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.current.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.parent.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.grand.color
DataStructures.RedBlackTree.current.element == DataStructures.RedBlackTree.parent.right.element
DataStructures.RedBlackTree.current.left == DataStructures.RedBlackTree.parent.right.left
DataStructures.RedBlackTree.current.right == DataStructures.RedBlackTree.parent.right.right
DataStructures.RedBlackTree.parent.left.color == DataStructures.RedBlackTree.grand.left.color
DataStructures.RedBlackTree.parent.right == DataStructures.RedBlackTree.grand.right.right
DataStructures.RedBlackTree.parent.right.color == DataStructures.RedBlackTree.grand.right.color
DataStructures.RedBlackTree.great == parent
DataStructures.RedBlackTree.great.element == parent.element
DataStructures.RedBlackTree.great.left == parent.left
DataStructures.RedBlackTree.great.left.element == parent.left.element
DataStructures.RedBlackTree.great.left.left == parent.left.left
DataStructures.RedBlackTree.great.left.right == parent.left.right
DataStructures.RedBlackTree.great.left.color == parent.left.color
DataStructures.RedBlackTree.great.right == parent.right
DataStructures.RedBlackTree.great.right.element == parent.right.element
DataStructures.RedBlackTree.great.right.left == parent.right.left
DataStructures.RedBlackTree.great.right.right == parent.right.right
DataStructures.RedBlackTree.great.right.color == parent.right.color
DataStructures.RedBlackTree.great.color == parent.color
this.header.right.element != null
DataStructures.RedBlackTree.nullNode.element != null
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.MyInteger.class
DataStructures.RedBlackTree.current != null
DataStructures.RedBlackTree.current.element != null
DataStructures.RedBlackTree.current.left != null
DataStructures.RedBlackTree.current.left.element != null
DataStructures.RedBlackTree.current.right != null
DataStructures.RedBlackTree.current.right.element != null
DataStructures.RedBlackTree.parent != null
DataStructures.RedBlackTree.parent.element != null
DataStructures.RedBlackTree.parent.left != null
DataStructures.RedBlackTree.parent.left.element != null
DataStructures.RedBlackTree.parent.left.left != null
DataStructures.RedBlackTree.parent.left.right != null
DataStructures.RedBlackTree.parent.left.color == 0 || DataStructures.RedBlackTree.parent.left.color == 1
DataStructures.RedBlackTree.parent.right != null
DataStructures.RedBlackTree.parent.right.color == 0 || DataStructures.RedBlackTree.parent.right.color == 1
DataStructures.RedBlackTree.grand != null
DataStructures.RedBlackTree.grand.element != null
DataStructures.RedBlackTree.grand.left != null
DataStructures.RedBlackTree.grand.left.element != null
DataStructures.RedBlackTree.grand.left.left != null
DataStructures.RedBlackTree.grand.left.right != null
DataStructures.RedBlackTree.grand.right != null
DataStructures.RedBlackTree.grand.right.element != null
DataStructures.RedBlackTree.grand.right.left != null
DataStructures.RedBlackTree.great != null
DataStructures.RedBlackTree.great.element != null
DataStructures.RedBlackTree.great.left != null
DataStructures.RedBlackTree.great.left.element != null
DataStructures.RedBlackTree.great.left.left != null
DataStructures.RedBlackTree.great.left.right != null
DataStructures.RedBlackTree.great.left.color == 0 || DataStructures.RedBlackTree.great.left.color == 1
DataStructures.RedBlackTree.great.right != null
DataStructures.RedBlackTree.great.right.element != null
DataStructures.RedBlackTree.great.right.left != null
DataStructures.RedBlackTree.great.right.right != null
DataStructures.RedBlackTree.great.right.color == 0 || DataStructures.RedBlackTree.great.right.color == 1
DataStructures.RedBlackTree.great.color == 0 || DataStructures.RedBlackTree.great.color == 1
this.header.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
this.header.left.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
this.header.right.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
this.header.right.color >= DataStructures.RedBlackTree.parent.right.color
this.header.right.color >= DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == item.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == parent.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == parent.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == parent.right.element.getClass()
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.parent.left.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.parent.left.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.color
DataStructures.RedBlackTree.parent.left.color != DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.parent.right.color == (this.header.right.color >> DataStructures.RedBlackTree.parent.left.color)
DataStructures.RedBlackTree.parent.right.color == (this.header.right.color >>> DataStructures.RedBlackTree.parent.left.color)
===========================================================================
DataStructures.RedBlackTree.rotate(DataStructures.Comparable, DataStructures.RedBlackNode):::EXIT213
    Variables: this this.header this.header.element this.header.element.getClass() this.header.left this.header.left.element this.header.left.element.getClass() this.header.left.left this.header.left.right this.header.left.color this.header.right this.header.right.element this.header.right.element.getClass() this.header.right.left this.header.right.right this.header.right.color this.header.color DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color item item.getClass() parent parent.element parent.element.getClass() parent.left parent.left.element parent.left.element.getClass() parent.left.left parent.left.right parent.left.color parent.right parent.right.element parent.right.element.getClass() parent.right.left parent.right.right parent.right.color parent.color return return.element return.element.getClass() return.left return.left.element return.left.element.getClass() return.left.left return.left.right return.left.color return.right return.right.element return.right.element.getClass() return.right.left return.right.right return.right.color return.color orig(this) orig(this.header) orig(this.header.element) orig(this.header.element.getClass()) orig(this.header.left) orig(this.header.left.element) orig(this.header.left.element.getClass()) orig(this.header.left.left) orig(this.header.left.right) orig(this.header.left.color) orig(this.header.right) orig(this.header.right.element) orig(this.header.right.element.getClass()) orig(this.header.right.left) orig(this.header.right.right) orig(this.header.right.color) orig(this.header.color) orig(DataStructures.RedBlackTree.nullNode) orig(DataStructures.RedBlackTree.nullNode.element) orig(DataStructures.RedBlackTree.nullNode.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left) orig(DataStructures.RedBlackTree.nullNode.left.element) orig(DataStructures.RedBlackTree.nullNode.left.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left.left) orig(DataStructures.RedBlackTree.nullNode.left.right) orig(DataStructures.RedBlackTree.nullNode.left.color) orig(DataStructures.RedBlackTree.nullNode.right) orig(DataStructures.RedBlackTree.nullNode.right.element) orig(DataStructures.RedBlackTree.nullNode.right.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.right.left) orig(DataStructures.RedBlackTree.nullNode.right.right) orig(DataStructures.RedBlackTree.nullNode.right.color) orig(DataStructures.RedBlackTree.nullNode.color) orig(DataStructures.RedBlackTree.current) orig(DataStructures.RedBlackTree.current.element) orig(DataStructures.RedBlackTree.current.element.getClass()) orig(DataStructures.RedBlackTree.current.left) orig(DataStructures.RedBlackTree.current.left.element) orig(DataStructures.RedBlackTree.current.left.element.getClass()) orig(DataStructures.RedBlackTree.current.left.left) orig(DataStructures.RedBlackTree.current.left.right) orig(DataStructures.RedBlackTree.current.left.color) orig(DataStructures.RedBlackTree.current.right) orig(DataStructures.RedBlackTree.current.right.element) orig(DataStructures.RedBlackTree.current.right.element.getClass()) orig(DataStructures.RedBlackTree.current.right.left) orig(DataStructures.RedBlackTree.current.right.right) orig(DataStructures.RedBlackTree.current.right.color) orig(DataStructures.RedBlackTree.current.color) orig(DataStructures.RedBlackTree.parent) orig(DataStructures.RedBlackTree.parent.element) orig(DataStructures.RedBlackTree.parent.element.getClass()) orig(DataStructures.RedBlackTree.parent.left) orig(DataStructures.RedBlackTree.parent.left.element) orig(DataStructures.RedBlackTree.parent.left.element.getClass()) orig(DataStructures.RedBlackTree.parent.left.left) orig(DataStructures.RedBlackTree.parent.left.right) orig(DataStructures.RedBlackTree.parent.left.color) orig(DataStructures.RedBlackTree.parent.right) orig(DataStructures.RedBlackTree.parent.right.element) orig(DataStructures.RedBlackTree.parent.right.element.getClass()) orig(DataStructures.RedBlackTree.parent.right.left) orig(DataStructures.RedBlackTree.parent.right.right) orig(DataStructures.RedBlackTree.parent.right.color) orig(DataStructures.RedBlackTree.parent.color) orig(DataStructures.RedBlackTree.grand) orig(DataStructures.RedBlackTree.grand.element) orig(DataStructures.RedBlackTree.grand.element.getClass()) orig(DataStructures.RedBlackTree.grand.left) orig(DataStructures.RedBlackTree.grand.left.element) orig(DataStructures.RedBlackTree.grand.left.element.getClass()) orig(DataStructures.RedBlackTree.grand.left.left) orig(DataStructures.RedBlackTree.grand.left.right) orig(DataStructures.RedBlackTree.grand.left.color) orig(DataStructures.RedBlackTree.grand.right) orig(DataStructures.RedBlackTree.grand.right.element) orig(DataStructures.RedBlackTree.grand.right.element.getClass()) orig(DataStructures.RedBlackTree.grand.right.left) orig(DataStructures.RedBlackTree.grand.right.right) orig(DataStructures.RedBlackTree.grand.right.color) orig(DataStructures.RedBlackTree.grand.color) orig(DataStructures.RedBlackTree.great) orig(DataStructures.RedBlackTree.great.element) orig(DataStructures.RedBlackTree.great.element.getClass()) orig(DataStructures.RedBlackTree.great.left) orig(DataStructures.RedBlackTree.great.left.element) orig(DataStructures.RedBlackTree.great.left.element.getClass()) orig(DataStructures.RedBlackTree.great.left.left) orig(DataStructures.RedBlackTree.great.left.right) orig(DataStructures.RedBlackTree.great.left.color) orig(DataStructures.RedBlackTree.great.right) orig(DataStructures.RedBlackTree.great.right.element) orig(DataStructures.RedBlackTree.great.right.element.getClass()) orig(DataStructures.RedBlackTree.great.right.left) orig(DataStructures.RedBlackTree.great.right.right) orig(DataStructures.RedBlackTree.great.right.color) orig(DataStructures.RedBlackTree.great.color) orig(item) orig(item.getClass()) orig(parent) orig(parent.element) orig(parent.element.getClass()) orig(parent.left) orig(parent.left.element) orig(parent.left.element.getClass()) orig(parent.left.left) orig(parent.left.right) orig(parent.left.color) orig(parent.right) orig(parent.right.element) orig(parent.right.element.getClass()) orig(parent.right.left) orig(parent.right.right) orig(parent.right.color) orig(parent.color)
assignable DataStructures.RedBlackTree.parent.left, DataStructures.RedBlackTree.parent.left.element, DataStructures.RedBlackTree.parent.left.color, DataStructures.RedBlackTree.parent.right, DataStructures.RedBlackTree.parent.right.element, DataStructures.RedBlackTree.parent.right.color, DataStructures.RedBlackTree.grand.left, DataStructures.RedBlackTree.grand.left.element, DataStructures.RedBlackTree.grand.left.left, DataStructures.RedBlackTree.grand.left.color, DataStructures.RedBlackTree.grand.right, DataStructures.RedBlackTree.grand.right.element, DataStructures.RedBlackTree.grand.right.right, DataStructures.RedBlackTree.grand.right.color, DataStructures.RedBlackTree.great.left, DataStructures.RedBlackTree.great.left.element, DataStructures.RedBlackTree.great.left.left, DataStructures.RedBlackTree.great.left.right, parent.left, parent.left.element, parent.left.left, parent.left.right
this.header.right == \old(this.header.right)
this.header.right.element == \old(this.header.right.element)
this.header.right.left == \old(this.header.right.left)
this.header.right.right == \old(this.header.right.right)
this.header.right.color == DataStructures.RedBlackTree.BLACK
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right.right
DataStructures.RedBlackTree.nullNode == \result.left.left
DataStructures.RedBlackTree.nullNode == \result.left.right
DataStructures.RedBlackTree.nullNode == \result.right.left
DataStructures.RedBlackTree.nullNode == \result.right.right
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.right.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.grand.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.grand.right.left)
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.left.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.right.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.grand.left.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.grand.right.element
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.current.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.current.left.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.current.right.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.parent.left.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.parent.right.element)
DataStructures.RedBlackTree.BLACK == \old(this.header.right.color)
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.RED == parent.left.color
DataStructures.RedBlackTree.RED == \old(DataStructures.RedBlackTree.great.left.color)
DataStructures.RedBlackTree.RED == \old(parent.left.color)
DataStructures.RedBlackTree.parent == DataStructures.RedBlackTree.great.left
DataStructures.RedBlackTree.parent == parent.left
DataStructures.RedBlackTree.parent.element == DataStructures.RedBlackTree.great.left.element
DataStructures.RedBlackTree.parent.element == parent.left.element
DataStructures.RedBlackTree.parent.left == DataStructures.RedBlackTree.great.left.left
DataStructures.RedBlackTree.parent.left == parent.left.left
DataStructures.RedBlackTree.parent.right == DataStructures.RedBlackTree.great.left.right
DataStructures.RedBlackTree.parent.right == parent.left.right
DataStructures.RedBlackTree.grand == \old(DataStructures.RedBlackTree.great.left)
DataStructures.RedBlackTree.grand == \old(parent.left)
DataStructures.RedBlackTree.grand.element == \old(DataStructures.RedBlackTree.great.left.element)
DataStructures.RedBlackTree.grand.element == \old(parent.left.element)
DataStructures.RedBlackTree.great.right == \old(DataStructures.RedBlackTree.great.right)
DataStructures.RedBlackTree.great.right == \old(parent.right)
DataStructures.RedBlackTree.great.right.element == \old(DataStructures.RedBlackTree.great.right.element)
DataStructures.RedBlackTree.great.right.element == \old(parent.right.element)
DataStructures.RedBlackTree.great.right.left == \old(DataStructures.RedBlackTree.great.right.left)
DataStructures.RedBlackTree.great.right.left == \old(parent.right.left)
DataStructures.RedBlackTree.great.right.right == \old(DataStructures.RedBlackTree.great.right.right)
DataStructures.RedBlackTree.great.right.right == \old(parent.right.right)
\old(DataStructures.RedBlackTree.parent.left) == \old(DataStructures.RedBlackTree.grand.left.left)
\old(DataStructures.RedBlackTree.grand.left) == \old(DataStructures.RedBlackTree.great.left.left)
\old(DataStructures.RedBlackTree.grand.left) == \old(parent.left.left)
\old(DataStructures.RedBlackTree.grand.right) == \old(DataStructures.RedBlackTree.great.left.right)
\old(DataStructures.RedBlackTree.grand.right) == \old(parent.left.right)
this.header.right != null
this.header.right.element != null
this.header.right.left != null
this.header.right.right != null
DataStructures.RedBlackTree.great.right.color >= \old(DataStructures.RedBlackTree.parent.right.color)
\old(DataStructures.RedBlackTree.parent.right.color) == (DataStructures.RedBlackTree.great.right.color >> \old(DataStructures.RedBlackTree.parent.left.color))
\old(DataStructures.RedBlackTree.parent.right.color) == (DataStructures.RedBlackTree.great.right.color >>> \old(DataStructures.RedBlackTree.parent.left.color))
===========================================================================
DataStructures.RedBlackTree.rotate(DataStructures.Comparable, DataStructures.RedBlackNode):::EXIT217
    Variables: this this.header this.header.element this.header.element.getClass() this.header.left this.header.left.element this.header.left.element.getClass() this.header.left.left this.header.left.right this.header.left.color this.header.right this.header.right.element this.header.right.element.getClass() this.header.right.left this.header.right.right this.header.right.color this.header.color DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color item item.getClass() parent parent.element parent.element.getClass() parent.left parent.left.element parent.left.element.getClass() parent.left.left parent.left.right parent.left.color parent.right parent.right.element parent.right.element.getClass() parent.right.left parent.right.right parent.right.color parent.color return return.element return.element.getClass() return.left return.left.element return.left.element.getClass() return.left.left return.left.right return.left.color return.right return.right.element return.right.element.getClass() return.right.left return.right.right return.right.color return.color orig(this) orig(this.header) orig(this.header.element) orig(this.header.element.getClass()) orig(this.header.left) orig(this.header.left.element) orig(this.header.left.element.getClass()) orig(this.header.left.left) orig(this.header.left.right) orig(this.header.left.color) orig(this.header.right) orig(this.header.right.element) orig(this.header.right.element.getClass()) orig(this.header.right.left) orig(this.header.right.right) orig(this.header.right.color) orig(this.header.color) orig(DataStructures.RedBlackTree.nullNode) orig(DataStructures.RedBlackTree.nullNode.element) orig(DataStructures.RedBlackTree.nullNode.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left) orig(DataStructures.RedBlackTree.nullNode.left.element) orig(DataStructures.RedBlackTree.nullNode.left.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left.left) orig(DataStructures.RedBlackTree.nullNode.left.right) orig(DataStructures.RedBlackTree.nullNode.left.color) orig(DataStructures.RedBlackTree.nullNode.right) orig(DataStructures.RedBlackTree.nullNode.right.element) orig(DataStructures.RedBlackTree.nullNode.right.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.right.left) orig(DataStructures.RedBlackTree.nullNode.right.right) orig(DataStructures.RedBlackTree.nullNode.right.color) orig(DataStructures.RedBlackTree.nullNode.color) orig(DataStructures.RedBlackTree.current) orig(DataStructures.RedBlackTree.current.element) orig(DataStructures.RedBlackTree.current.element.getClass()) orig(DataStructures.RedBlackTree.current.left) orig(DataStructures.RedBlackTree.current.left.element) orig(DataStructures.RedBlackTree.current.left.element.getClass()) orig(DataStructures.RedBlackTree.current.left.left) orig(DataStructures.RedBlackTree.current.left.right) orig(DataStructures.RedBlackTree.current.left.color) orig(DataStructures.RedBlackTree.current.right) orig(DataStructures.RedBlackTree.current.right.element) orig(DataStructures.RedBlackTree.current.right.element.getClass()) orig(DataStructures.RedBlackTree.current.right.left) orig(DataStructures.RedBlackTree.current.right.right) orig(DataStructures.RedBlackTree.current.right.color) orig(DataStructures.RedBlackTree.current.color) orig(DataStructures.RedBlackTree.parent) orig(DataStructures.RedBlackTree.parent.element) orig(DataStructures.RedBlackTree.parent.element.getClass()) orig(DataStructures.RedBlackTree.parent.left) orig(DataStructures.RedBlackTree.parent.left.element) orig(DataStructures.RedBlackTree.parent.left.element.getClass()) orig(DataStructures.RedBlackTree.parent.left.left) orig(DataStructures.RedBlackTree.parent.left.right) orig(DataStructures.RedBlackTree.parent.left.color) orig(DataStructures.RedBlackTree.parent.right) orig(DataStructures.RedBlackTree.parent.right.element) orig(DataStructures.RedBlackTree.parent.right.element.getClass()) orig(DataStructures.RedBlackTree.parent.right.left) orig(DataStructures.RedBlackTree.parent.right.right) orig(DataStructures.RedBlackTree.parent.right.color) orig(DataStructures.RedBlackTree.parent.color) orig(DataStructures.RedBlackTree.grand) orig(DataStructures.RedBlackTree.grand.element) orig(DataStructures.RedBlackTree.grand.element.getClass()) orig(DataStructures.RedBlackTree.grand.left) orig(DataStructures.RedBlackTree.grand.left.element) orig(DataStructures.RedBlackTree.grand.left.element.getClass()) orig(DataStructures.RedBlackTree.grand.left.left) orig(DataStructures.RedBlackTree.grand.left.right) orig(DataStructures.RedBlackTree.grand.left.color) orig(DataStructures.RedBlackTree.grand.right) orig(DataStructures.RedBlackTree.grand.right.element) orig(DataStructures.RedBlackTree.grand.right.element.getClass()) orig(DataStructures.RedBlackTree.grand.right.left) orig(DataStructures.RedBlackTree.grand.right.right) orig(DataStructures.RedBlackTree.grand.right.color) orig(DataStructures.RedBlackTree.grand.color) orig(DataStructures.RedBlackTree.great) orig(DataStructures.RedBlackTree.great.element) orig(DataStructures.RedBlackTree.great.element.getClass()) orig(DataStructures.RedBlackTree.great.left) orig(DataStructures.RedBlackTree.great.left.element) orig(DataStructures.RedBlackTree.great.left.element.getClass()) orig(DataStructures.RedBlackTree.great.left.left) orig(DataStructures.RedBlackTree.great.left.right) orig(DataStructures.RedBlackTree.great.left.color) orig(DataStructures.RedBlackTree.great.right) orig(DataStructures.RedBlackTree.great.right.element) orig(DataStructures.RedBlackTree.great.right.element.getClass()) orig(DataStructures.RedBlackTree.great.right.left) orig(DataStructures.RedBlackTree.great.right.right) orig(DataStructures.RedBlackTree.great.right.color) orig(DataStructures.RedBlackTree.great.color) orig(item) orig(item.getClass()) orig(parent) orig(parent.element) orig(parent.element.getClass()) orig(parent.left) orig(parent.left.element) orig(parent.left.element.getClass()) orig(parent.left.left) orig(parent.left.right) orig(parent.left.color) orig(parent.right) orig(parent.right.element) orig(parent.right.element.getClass()) orig(parent.right.left) orig(parent.right.right) orig(parent.right.color) orig(parent.color)
assignable this.header.right, this.header.right.element, this.header.right.left, this.header.right.right, DataStructures.RedBlackTree.parent.left, DataStructures.RedBlackTree.parent.left.element, DataStructures.RedBlackTree.parent.left.left, DataStructures.RedBlackTree.parent.left.right, DataStructures.RedBlackTree.parent.left.color, DataStructures.RedBlackTree.parent.right, DataStructures.RedBlackTree.parent.right.element, DataStructures.RedBlackTree.parent.right.color, DataStructures.RedBlackTree.grand.left, DataStructures.RedBlackTree.grand.left.element, DataStructures.RedBlackTree.grand.left.left, DataStructures.RedBlackTree.grand.left.color, DataStructures.RedBlackTree.grand.right, DataStructures.RedBlackTree.grand.right.element, DataStructures.RedBlackTree.grand.right.left, DataStructures.RedBlackTree.grand.right.right, DataStructures.RedBlackTree.grand.right.color, DataStructures.RedBlackTree.great.right, DataStructures.RedBlackTree.great.right.element, DataStructures.RedBlackTree.great.right.left, DataStructures.RedBlackTree.great.right.right, parent.right, parent.right.element, parent.right.left, parent.right.right
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.RED == parent.right.color
DataStructures.RedBlackTree.RED == \old(DataStructures.RedBlackTree.great.right.color)
DataStructures.RedBlackTree.RED == \old(parent.right.color)
DataStructures.RedBlackTree.parent == DataStructures.RedBlackTree.great.right
DataStructures.RedBlackTree.parent == parent.right
DataStructures.RedBlackTree.parent.element == DataStructures.RedBlackTree.great.right.element
DataStructures.RedBlackTree.parent.element == parent.right.element
DataStructures.RedBlackTree.parent.left == DataStructures.RedBlackTree.great.right.left
DataStructures.RedBlackTree.parent.left == parent.right.left
DataStructures.RedBlackTree.parent.right == DataStructures.RedBlackTree.great.right.right
DataStructures.RedBlackTree.parent.right == parent.right.right
DataStructures.RedBlackTree.grand == \old(DataStructures.RedBlackTree.great.right)
DataStructures.RedBlackTree.grand == \old(parent.right)
DataStructures.RedBlackTree.grand.element == \old(DataStructures.RedBlackTree.great.right.element)
DataStructures.RedBlackTree.grand.element == \old(parent.right.element)
DataStructures.RedBlackTree.great.left == \old(DataStructures.RedBlackTree.great.left)
DataStructures.RedBlackTree.great.left == \old(parent.left)
DataStructures.RedBlackTree.great.left.element == \old(DataStructures.RedBlackTree.great.left.element)
DataStructures.RedBlackTree.great.left.element == \old(parent.left.element)
DataStructures.RedBlackTree.great.left.left == \old(DataStructures.RedBlackTree.great.left.left)
DataStructures.RedBlackTree.great.left.left == \old(parent.left.left)
DataStructures.RedBlackTree.great.left.right == \old(DataStructures.RedBlackTree.great.left.right)
DataStructures.RedBlackTree.great.left.right == \old(parent.left.right)
\old(DataStructures.RedBlackTree.grand.left) == \old(DataStructures.RedBlackTree.great.right.left)
\old(DataStructures.RedBlackTree.grand.left) == \old(parent.right.left)
\old(DataStructures.RedBlackTree.grand.right) == \old(DataStructures.RedBlackTree.great.right.right)
\old(DataStructures.RedBlackTree.grand.right) == \old(parent.right.right)
DataStructures.RedBlackTree.great.left.color >= \old(DataStructures.RedBlackTree.parent.left.color)
\old(DataStructures.RedBlackTree.parent.left.color) == (DataStructures.RedBlackTree.great.left.color >> \old(DataStructures.RedBlackTree.parent.right.color))
\old(DataStructures.RedBlackTree.parent.left.color) == (DataStructures.RedBlackTree.great.left.color >>> \old(DataStructures.RedBlackTree.parent.right.color))
===========================================================================
DataStructures.RedBlackTree.rotate(DataStructures.Comparable, DataStructures.RedBlackNode):::EXIT
    Variables: this this.header this.header.element this.header.element.getClass() this.header.left this.header.left.element this.header.left.element.getClass() this.header.left.left this.header.left.right this.header.left.color this.header.right this.header.right.element this.header.right.element.getClass() this.header.right.left this.header.right.right this.header.right.color this.header.color DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color item item.getClass() parent parent.element parent.element.getClass() parent.left parent.left.element parent.left.element.getClass() parent.left.left parent.left.right parent.left.color parent.right parent.right.element parent.right.element.getClass() parent.right.left parent.right.right parent.right.color parent.color return return.element return.element.getClass() return.left return.left.element return.left.element.getClass() return.left.left return.left.right return.left.color return.right return.right.element return.right.element.getClass() return.right.left return.right.right return.right.color return.color orig(this) orig(this.header) orig(this.header.element) orig(this.header.element.getClass()) orig(this.header.left) orig(this.header.left.element) orig(this.header.left.element.getClass()) orig(this.header.left.left) orig(this.header.left.right) orig(this.header.left.color) orig(this.header.right) orig(this.header.right.element) orig(this.header.right.element.getClass()) orig(this.header.right.left) orig(this.header.right.right) orig(this.header.right.color) orig(this.header.color) orig(DataStructures.RedBlackTree.nullNode) orig(DataStructures.RedBlackTree.nullNode.element) orig(DataStructures.RedBlackTree.nullNode.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left) orig(DataStructures.RedBlackTree.nullNode.left.element) orig(DataStructures.RedBlackTree.nullNode.left.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left.left) orig(DataStructures.RedBlackTree.nullNode.left.right) orig(DataStructures.RedBlackTree.nullNode.left.color) orig(DataStructures.RedBlackTree.nullNode.right) orig(DataStructures.RedBlackTree.nullNode.right.element) orig(DataStructures.RedBlackTree.nullNode.right.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.right.left) orig(DataStructures.RedBlackTree.nullNode.right.right) orig(DataStructures.RedBlackTree.nullNode.right.color) orig(DataStructures.RedBlackTree.nullNode.color) orig(DataStructures.RedBlackTree.current) orig(DataStructures.RedBlackTree.current.element) orig(DataStructures.RedBlackTree.current.element.getClass()) orig(DataStructures.RedBlackTree.current.left) orig(DataStructures.RedBlackTree.current.left.element) orig(DataStructures.RedBlackTree.current.left.element.getClass()) orig(DataStructures.RedBlackTree.current.left.left) orig(DataStructures.RedBlackTree.current.left.right) orig(DataStructures.RedBlackTree.current.left.color) orig(DataStructures.RedBlackTree.current.right) orig(DataStructures.RedBlackTree.current.right.element) orig(DataStructures.RedBlackTree.current.right.element.getClass()) orig(DataStructures.RedBlackTree.current.right.left) orig(DataStructures.RedBlackTree.current.right.right) orig(DataStructures.RedBlackTree.current.right.color) orig(DataStructures.RedBlackTree.current.color) orig(DataStructures.RedBlackTree.parent) orig(DataStructures.RedBlackTree.parent.element) orig(DataStructures.RedBlackTree.parent.element.getClass()) orig(DataStructures.RedBlackTree.parent.left) orig(DataStructures.RedBlackTree.parent.left.element) orig(DataStructures.RedBlackTree.parent.left.element.getClass()) orig(DataStructures.RedBlackTree.parent.left.left) orig(DataStructures.RedBlackTree.parent.left.right) orig(DataStructures.RedBlackTree.parent.left.color) orig(DataStructures.RedBlackTree.parent.right) orig(DataStructures.RedBlackTree.parent.right.element) orig(DataStructures.RedBlackTree.parent.right.element.getClass()) orig(DataStructures.RedBlackTree.parent.right.left) orig(DataStructures.RedBlackTree.parent.right.right) orig(DataStructures.RedBlackTree.parent.right.color) orig(DataStructures.RedBlackTree.parent.color) orig(DataStructures.RedBlackTree.grand) orig(DataStructures.RedBlackTree.grand.element) orig(DataStructures.RedBlackTree.grand.element.getClass()) orig(DataStructures.RedBlackTree.grand.left) orig(DataStructures.RedBlackTree.grand.left.element) orig(DataStructures.RedBlackTree.grand.left.element.getClass()) orig(DataStructures.RedBlackTree.grand.left.left) orig(DataStructures.RedBlackTree.grand.left.right) orig(DataStructures.RedBlackTree.grand.left.color) orig(DataStructures.RedBlackTree.grand.right) orig(DataStructures.RedBlackTree.grand.right.element) orig(DataStructures.RedBlackTree.grand.right.element.getClass()) orig(DataStructures.RedBlackTree.grand.right.left) orig(DataStructures.RedBlackTree.grand.right.right) orig(DataStructures.RedBlackTree.grand.right.color) orig(DataStructures.RedBlackTree.grand.color) orig(DataStructures.RedBlackTree.great) orig(DataStructures.RedBlackTree.great.element) orig(DataStructures.RedBlackTree.great.element.getClass()) orig(DataStructures.RedBlackTree.great.left) orig(DataStructures.RedBlackTree.great.left.element) orig(DataStructures.RedBlackTree.great.left.element.getClass()) orig(DataStructures.RedBlackTree.great.left.left) orig(DataStructures.RedBlackTree.great.left.right) orig(DataStructures.RedBlackTree.great.left.color) orig(DataStructures.RedBlackTree.great.right) orig(DataStructures.RedBlackTree.great.right.element) orig(DataStructures.RedBlackTree.great.right.element.getClass()) orig(DataStructures.RedBlackTree.great.right.left) orig(DataStructures.RedBlackTree.great.right.right) orig(DataStructures.RedBlackTree.great.right.color) orig(DataStructures.RedBlackTree.great.color) orig(item) orig(item.getClass()) orig(parent) orig(parent.element) orig(parent.element.getClass()) orig(parent.left) orig(parent.left.element) orig(parent.left.element.getClass()) orig(parent.left.left) orig(parent.left.right) orig(parent.left.color) orig(parent.right) orig(parent.right.element) orig(parent.right.element.getClass()) orig(parent.right.left) orig(parent.right.right) orig(parent.right.color) orig(parent.color)
assignable this.header.right, this.header.right.element, this.header.right.left, this.header.right.right, DataStructures.RedBlackTree.parent.left, DataStructures.RedBlackTree.parent.left.element, DataStructures.RedBlackTree.parent.left.left, DataStructures.RedBlackTree.parent.left.right, DataStructures.RedBlackTree.parent.left.color, DataStructures.RedBlackTree.parent.right, DataStructures.RedBlackTree.parent.right.element, DataStructures.RedBlackTree.parent.right.color, DataStructures.RedBlackTree.grand.left, DataStructures.RedBlackTree.grand.left.element, DataStructures.RedBlackTree.grand.left.left, DataStructures.RedBlackTree.grand.left.color, DataStructures.RedBlackTree.grand.right, DataStructures.RedBlackTree.grand.right.element, DataStructures.RedBlackTree.grand.right.left, DataStructures.RedBlackTree.grand.right.right, DataStructures.RedBlackTree.grand.right.color, DataStructures.RedBlackTree.great.left, DataStructures.RedBlackTree.great.left.element, DataStructures.RedBlackTree.great.left.left, DataStructures.RedBlackTree.great.left.right, DataStructures.RedBlackTree.great.right, DataStructures.RedBlackTree.great.right.element, DataStructures.RedBlackTree.great.right.left, DataStructures.RedBlackTree.great.right.right, parent.left, parent.left.element, parent.left.left, parent.left.right, parent.right, parent.right.element, parent.right.left, parent.right.right
this.header == \old(this.header)
this.header.element == \old(this.header.element)
this.header.right.color == \old(this.header.right.color)
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.right
DataStructures.RedBlackTree.nullNode == \old(this.header.left)
DataStructures.RedBlackTree.nullNode == \old(this.header.left.left)
DataStructures.RedBlackTree.nullNode == \old(this.header.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.right.right)
DataStructures.RedBlackTree.nullNode.element == \old(this.header.left.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.nullNode.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.nullNode.left.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.nullNode.right.element)
DataStructures.RedBlackTree.nullNode.element == \old(item)
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.right.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.current.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.parent.left.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.parent.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.grand.color
DataStructures.RedBlackTree.RED == \result.left.color
DataStructures.RedBlackTree.RED == \result.right.color
DataStructures.RedBlackTree.RED == \result.color
DataStructures.RedBlackTree.current == \old(DataStructures.RedBlackTree.current)
DataStructures.RedBlackTree.current.element == \old(DataStructures.RedBlackTree.current.element)
DataStructures.RedBlackTree.current.element == \old(DataStructures.RedBlackTree.parent.right.element)
DataStructures.RedBlackTree.current.left == DataStructures.RedBlackTree.parent.right.left
DataStructures.RedBlackTree.current.left == \result.right.left
DataStructures.RedBlackTree.current.left == \old(DataStructures.RedBlackTree.current.left)
DataStructures.RedBlackTree.current.left == \old(DataStructures.RedBlackTree.parent.right.left)
DataStructures.RedBlackTree.current.left.element == \old(DataStructures.RedBlackTree.current.left.element)
DataStructures.RedBlackTree.current.right == DataStructures.RedBlackTree.parent.right.right
DataStructures.RedBlackTree.current.right == \result.right.right
DataStructures.RedBlackTree.current.right == \old(DataStructures.RedBlackTree.current.right)
DataStructures.RedBlackTree.current.right == \old(DataStructures.RedBlackTree.parent.right.right)
DataStructures.RedBlackTree.current.right.element == \old(DataStructures.RedBlackTree.current.right.element)
DataStructures.RedBlackTree.parent == \result
DataStructures.RedBlackTree.parent == \old(DataStructures.RedBlackTree.parent)
DataStructures.RedBlackTree.parent.element == \result.element
DataStructures.RedBlackTree.parent.element == \old(DataStructures.RedBlackTree.parent.element)
DataStructures.RedBlackTree.parent.left == \result.left
DataStructures.RedBlackTree.parent.left.element == \result.left.element
DataStructures.RedBlackTree.parent.left.left == DataStructures.RedBlackTree.grand.left
DataStructures.RedBlackTree.parent.left.right == DataStructures.RedBlackTree.grand.right
DataStructures.RedBlackTree.parent.right == \result.right
DataStructures.RedBlackTree.parent.right.element == \result.right.element
DataStructures.RedBlackTree.grand == \old(DataStructures.RedBlackTree.grand)
DataStructures.RedBlackTree.grand.element == \old(DataStructures.RedBlackTree.grand.element)
DataStructures.RedBlackTree.grand.left == \result.left.left
DataStructures.RedBlackTree.grand.left.right == \old(DataStructures.RedBlackTree.grand.left.right)
DataStructures.RedBlackTree.grand.right == \result.left.right
DataStructures.RedBlackTree.grand.right == \old(DataStructures.RedBlackTree.grand.right.left)
DataStructures.RedBlackTree.grand.right.element == \old(DataStructures.RedBlackTree.parent.left.element)
DataStructures.RedBlackTree.grand.right.left == \old(DataStructures.RedBlackTree.parent.left.left)
DataStructures.RedBlackTree.grand.right.right == \old(DataStructures.RedBlackTree.parent.left.right)
DataStructures.RedBlackTree.great == \old(DataStructures.RedBlackTree.great)
DataStructures.RedBlackTree.great == \old(parent)
DataStructures.RedBlackTree.great.element == parent.element
DataStructures.RedBlackTree.great.element == \old(DataStructures.RedBlackTree.great.element)
DataStructures.RedBlackTree.great.element == \old(parent.element)
DataStructures.RedBlackTree.great.left == parent.left
DataStructures.RedBlackTree.great.left.element == parent.left.element
DataStructures.RedBlackTree.great.left.left == parent.left.left
DataStructures.RedBlackTree.great.left.right == parent.left.right
DataStructures.RedBlackTree.great.left.color == parent.left.color
DataStructures.RedBlackTree.great.left.color == \old(DataStructures.RedBlackTree.great.left.color)
DataStructures.RedBlackTree.great.left.color == \old(parent.left.color)
DataStructures.RedBlackTree.great.right == parent.right
DataStructures.RedBlackTree.great.right.element == parent.right.element
DataStructures.RedBlackTree.great.right.left == parent.right.left
DataStructures.RedBlackTree.great.right.right == parent.right.right
DataStructures.RedBlackTree.great.right.color == parent.right.color
DataStructures.RedBlackTree.great.right.color == \old(DataStructures.RedBlackTree.great.right.color)
DataStructures.RedBlackTree.great.right.color == \old(parent.right.color)
DataStructures.RedBlackTree.great.color == parent.color
DataStructures.RedBlackTree.great.color == \old(DataStructures.RedBlackTree.great.color)
DataStructures.RedBlackTree.great.color == \old(parent.color)
this.header.right.element != null
DataStructures.RedBlackTree.nullNode.element != null
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.MyInteger.class
DataStructures.RedBlackTree.current != null
DataStructures.RedBlackTree.current.element != null
DataStructures.RedBlackTree.current.left != null
DataStructures.RedBlackTree.current.left.element != null
DataStructures.RedBlackTree.current.right != null
DataStructures.RedBlackTree.current.right.element != null
DataStructures.RedBlackTree.parent != null
DataStructures.RedBlackTree.parent.element != null
DataStructures.RedBlackTree.parent.left != null
DataStructures.RedBlackTree.parent.left.element != null
DataStructures.RedBlackTree.parent.right != null
DataStructures.RedBlackTree.parent.right.element != null
DataStructures.RedBlackTree.grand != null
DataStructures.RedBlackTree.grand.element != null
DataStructures.RedBlackTree.grand.left != null
DataStructures.RedBlackTree.grand.left.element != null
DataStructures.RedBlackTree.grand.left.left != null
DataStructures.RedBlackTree.grand.left.right != null
DataStructures.RedBlackTree.grand.right != null
DataStructures.RedBlackTree.grand.right.element != null
DataStructures.RedBlackTree.grand.right.left != null
DataStructures.RedBlackTree.grand.right.right != null
DataStructures.RedBlackTree.great != null
DataStructures.RedBlackTree.great.element != null
DataStructures.RedBlackTree.great.left != null
DataStructures.RedBlackTree.great.left.element != null
DataStructures.RedBlackTree.great.left.left != null
DataStructures.RedBlackTree.great.left.right != null
DataStructures.RedBlackTree.great.left.color == 0 || DataStructures.RedBlackTree.great.left.color == 1
DataStructures.RedBlackTree.great.right != null
DataStructures.RedBlackTree.great.right.element != null
DataStructures.RedBlackTree.great.right.left != null
DataStructures.RedBlackTree.great.right.right != null
DataStructures.RedBlackTree.great.right.color == 0 || DataStructures.RedBlackTree.great.right.color == 1
DataStructures.RedBlackTree.great.color == 0 || DataStructures.RedBlackTree.great.color == 1
this.header.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
this.header.left.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
this.header.right.element.getClass() == DataStructures.RedBlackTree.nullNode.element.getClass()
this.header.right.color >= DataStructures.RedBlackTree.great.right.color
this.header.right.color >= \old(DataStructures.RedBlackTree.parent.right.color)
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == parent.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == parent.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == parent.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == \result.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == \result.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == \result.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(this.header.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(this.header.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(this.header.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.nullNode.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.nullNode.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.nullNode.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.current.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.current.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.current.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.parent.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.parent.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.parent.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.grand.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.grand.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.grand.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.great.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.great.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.great.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(item.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(parent.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(parent.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(parent.right.element.getClass())
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.color
\old(DataStructures.RedBlackTree.parent.right.color) == (this.header.right.color >> \old(DataStructures.RedBlackTree.parent.left.color))
\old(DataStructures.RedBlackTree.parent.right.color) == (this.header.right.color >>> \old(DataStructures.RedBlackTree.parent.left.color))
===========================================================================
DataStructures.RedBlackTree.rotateWithLeftChild(DataStructures.RedBlackNode):::ENTER
    Variables: DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color k2 k2.element k2.element.getClass() k2.left k2.left.element k2.left.element.getClass() k2.left.left k2.left.right k2.left.color k2.right k2.right.element k2.right.element.getClass() k2.right.left k2.right.right k2.right.color k2.color
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right.right
DataStructures.RedBlackTree.nullNode == k2.left.right
DataStructures.RedBlackTree.nullNode == k2.right
DataStructures.RedBlackTree.nullNode == k2.right.left
DataStructures.RedBlackTree.nullNode == k2.right.right
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.left.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.right.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.parent.left.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.parent.right.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.grand.right.element
DataStructures.RedBlackTree.nullNode.element == k2.right.element
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.right.color
DataStructures.RedBlackTree.BLACK == k2.right.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.current.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.parent.left.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.parent.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.grand.left.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.grand.color
DataStructures.RedBlackTree.RED == k2.left.color
DataStructures.RedBlackTree.RED == k2.color
DataStructures.RedBlackTree.current == DataStructures.RedBlackTree.parent.left
DataStructures.RedBlackTree.current == DataStructures.RedBlackTree.grand.left.left
DataStructures.RedBlackTree.current == k2.left.left
DataStructures.RedBlackTree.parent == DataStructures.RedBlackTree.grand.left
DataStructures.RedBlackTree.parent == k2.left
DataStructures.RedBlackTree.parent.element == DataStructures.RedBlackTree.grand.left.element
DataStructures.RedBlackTree.parent.element == k2.left.element
DataStructures.RedBlackTree.grand == k2
DataStructures.RedBlackTree.grand.element == k2.element
DataStructures.RedBlackTree.nullNode.element != null
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.MyInteger.class
DataStructures.RedBlackTree.current != null
DataStructures.RedBlackTree.parent != null
DataStructures.RedBlackTree.parent.element != null
DataStructures.RedBlackTree.grand != null
DataStructures.RedBlackTree.grand.element != null
DataStructures.RedBlackTree.great != null
DataStructures.RedBlackTree.great.element != null
DataStructures.RedBlackTree.great.left != null
DataStructures.RedBlackTree.great.left.element != null
DataStructures.RedBlackTree.great.left.left != null
DataStructures.RedBlackTree.great.left.right != null
DataStructures.RedBlackTree.great.left.color == 0 || DataStructures.RedBlackTree.great.left.color == 1
DataStructures.RedBlackTree.great.right != null
DataStructures.RedBlackTree.great.right.element != null
DataStructures.RedBlackTree.great.right.left != null
DataStructures.RedBlackTree.great.right.right != null
DataStructures.RedBlackTree.great.right.color == 0 || DataStructures.RedBlackTree.great.right.color == 1
DataStructures.RedBlackTree.great.color == 0 || DataStructures.RedBlackTree.great.color == 1
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == k2.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == k2.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == k2.right.element.getClass()
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.color
===========================================================================
DataStructures.RedBlackTree.rotateWithLeftChild(DataStructures.RedBlackNode):::EXIT
    Variables: DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color k2 k2.element k2.element.getClass() k2.left k2.left.element k2.left.element.getClass() k2.left.left k2.left.right k2.left.color k2.right k2.right.element k2.right.element.getClass() k2.right.left k2.right.right k2.right.color k2.color return return.element return.element.getClass() return.left return.left.element return.left.element.getClass() return.left.left return.left.right return.left.color return.right return.right.element return.right.element.getClass() return.right.left return.right.right return.right.color return.color orig(DataStructures.RedBlackTree.nullNode) orig(DataStructures.RedBlackTree.nullNode.element) orig(DataStructures.RedBlackTree.nullNode.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left) orig(DataStructures.RedBlackTree.nullNode.left.element) orig(DataStructures.RedBlackTree.nullNode.left.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left.left) orig(DataStructures.RedBlackTree.nullNode.left.right) orig(DataStructures.RedBlackTree.nullNode.left.color) orig(DataStructures.RedBlackTree.nullNode.right) orig(DataStructures.RedBlackTree.nullNode.right.element) orig(DataStructures.RedBlackTree.nullNode.right.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.right.left) orig(DataStructures.RedBlackTree.nullNode.right.right) orig(DataStructures.RedBlackTree.nullNode.right.color) orig(DataStructures.RedBlackTree.nullNode.color) orig(DataStructures.RedBlackTree.current) orig(DataStructures.RedBlackTree.current.element) orig(DataStructures.RedBlackTree.current.element.getClass()) orig(DataStructures.RedBlackTree.current.left) orig(DataStructures.RedBlackTree.current.left.element) orig(DataStructures.RedBlackTree.current.left.element.getClass()) orig(DataStructures.RedBlackTree.current.left.left) orig(DataStructures.RedBlackTree.current.left.right) orig(DataStructures.RedBlackTree.current.left.color) orig(DataStructures.RedBlackTree.current.right) orig(DataStructures.RedBlackTree.current.right.element) orig(DataStructures.RedBlackTree.current.right.element.getClass()) orig(DataStructures.RedBlackTree.current.right.left) orig(DataStructures.RedBlackTree.current.right.right) orig(DataStructures.RedBlackTree.current.right.color) orig(DataStructures.RedBlackTree.current.color) orig(DataStructures.RedBlackTree.parent) orig(DataStructures.RedBlackTree.parent.element) orig(DataStructures.RedBlackTree.parent.element.getClass()) orig(DataStructures.RedBlackTree.parent.left) orig(DataStructures.RedBlackTree.parent.left.element) orig(DataStructures.RedBlackTree.parent.left.element.getClass()) orig(DataStructures.RedBlackTree.parent.left.left) orig(DataStructures.RedBlackTree.parent.left.right) orig(DataStructures.RedBlackTree.parent.left.color) orig(DataStructures.RedBlackTree.parent.right) orig(DataStructures.RedBlackTree.parent.right.element) orig(DataStructures.RedBlackTree.parent.right.element.getClass()) orig(DataStructures.RedBlackTree.parent.right.left) orig(DataStructures.RedBlackTree.parent.right.right) orig(DataStructures.RedBlackTree.parent.right.color) orig(DataStructures.RedBlackTree.parent.color) orig(DataStructures.RedBlackTree.grand) orig(DataStructures.RedBlackTree.grand.element) orig(DataStructures.RedBlackTree.grand.element.getClass()) orig(DataStructures.RedBlackTree.grand.left) orig(DataStructures.RedBlackTree.grand.left.element) orig(DataStructures.RedBlackTree.grand.left.element.getClass()) orig(DataStructures.RedBlackTree.grand.left.left) orig(DataStructures.RedBlackTree.grand.left.right) orig(DataStructures.RedBlackTree.grand.left.color) orig(DataStructures.RedBlackTree.grand.right) orig(DataStructures.RedBlackTree.grand.right.element) orig(DataStructures.RedBlackTree.grand.right.element.getClass()) orig(DataStructures.RedBlackTree.grand.right.left) orig(DataStructures.RedBlackTree.grand.right.right) orig(DataStructures.RedBlackTree.grand.right.color) orig(DataStructures.RedBlackTree.grand.color) orig(DataStructures.RedBlackTree.great) orig(DataStructures.RedBlackTree.great.element) orig(DataStructures.RedBlackTree.great.element.getClass()) orig(DataStructures.RedBlackTree.great.left) orig(DataStructures.RedBlackTree.great.left.element) orig(DataStructures.RedBlackTree.great.left.element.getClass()) orig(DataStructures.RedBlackTree.great.left.left) orig(DataStructures.RedBlackTree.great.left.right) orig(DataStructures.RedBlackTree.great.left.color) orig(DataStructures.RedBlackTree.great.right) orig(DataStructures.RedBlackTree.great.right.element) orig(DataStructures.RedBlackTree.great.right.element.getClass()) orig(DataStructures.RedBlackTree.great.right.left) orig(DataStructures.RedBlackTree.great.right.right) orig(DataStructures.RedBlackTree.great.right.color) orig(DataStructures.RedBlackTree.great.color) orig(k2) orig(k2.element) orig(k2.element.getClass()) orig(k2.left) orig(k2.left.element) orig(k2.left.element.getClass()) orig(k2.left.left) orig(k2.left.right) orig(k2.left.color) orig(k2.right) orig(k2.right.element) orig(k2.right.element.getClass()) orig(k2.right.left) orig(k2.right.right) orig(k2.right.color) orig(k2.color)
assignable DataStructures.RedBlackTree.parent.right, DataStructures.RedBlackTree.parent.right.element, DataStructures.RedBlackTree.parent.right.color, DataStructures.RedBlackTree.grand.left, DataStructures.RedBlackTree.grand.left.element, DataStructures.RedBlackTree.grand.left.left, DataStructures.RedBlackTree.grand.left.color, DataStructures.RedBlackTree.great.left.left, DataStructures.RedBlackTree.great.right.left, k2.left, k2.left.element, k2.left.left, k2.left.color
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.parent.right.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.grand.right.right
DataStructures.RedBlackTree.nullNode == k2.left
DataStructures.RedBlackTree.nullNode == k2.left.left
DataStructures.RedBlackTree.nullNode == k2.left.right
DataStructures.RedBlackTree.nullNode == k2.right
DataStructures.RedBlackTree.nullNode == k2.right.left
DataStructures.RedBlackTree.nullNode == k2.right.right
DataStructures.RedBlackTree.nullNode == \result.left.left
DataStructures.RedBlackTree.nullNode == \result.left.right
DataStructures.RedBlackTree.nullNode == \result.right.left
DataStructures.RedBlackTree.nullNode == \result.right.right
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.right.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.parent.right.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.grand.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.grand.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.grand.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.grand.right.right)
DataStructures.RedBlackTree.nullNode == \old(k2.left.right)
DataStructures.RedBlackTree.nullNode == \old(k2.right)
DataStructures.RedBlackTree.nullNode == \old(k2.right.left)
DataStructures.RedBlackTree.nullNode == \old(k2.right.right)
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.left.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.current.right.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.parent.left.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.grand.left.element
DataStructures.RedBlackTree.nullNode.element == DataStructures.RedBlackTree.grand.right.element
DataStructures.RedBlackTree.nullNode.element == k2.left.element
DataStructures.RedBlackTree.nullNode.element == k2.right.element
DataStructures.RedBlackTree.nullNode.element == \result.left.element
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.nullNode.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.nullNode.left.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.nullNode.right.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.current.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.current.left.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.current.right.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.parent.left.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.parent.right.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.grand.right.element)
DataStructures.RedBlackTree.nullNode.element == \old(k2.right.element)
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.right.color
DataStructures.RedBlackTree.BLACK == k2.left.color
DataStructures.RedBlackTree.BLACK == k2.right.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.current.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.parent.left.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.parent.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.grand.color
DataStructures.RedBlackTree.RED == k2.color
DataStructures.RedBlackTree.RED == \result.left.color
DataStructures.RedBlackTree.RED == \result.right.color
DataStructures.RedBlackTree.RED == \result.color
DataStructures.RedBlackTree.current == DataStructures.RedBlackTree.parent.left
DataStructures.RedBlackTree.current == \result.left
DataStructures.RedBlackTree.current == \old(DataStructures.RedBlackTree.current)
DataStructures.RedBlackTree.current == \old(DataStructures.RedBlackTree.parent.left)
DataStructures.RedBlackTree.current == \old(DataStructures.RedBlackTree.grand.left.left)
DataStructures.RedBlackTree.current == \old(k2.left.left)
DataStructures.RedBlackTree.parent == \result
DataStructures.RedBlackTree.parent == \old(DataStructures.RedBlackTree.parent)
DataStructures.RedBlackTree.parent == \old(DataStructures.RedBlackTree.grand.left)
DataStructures.RedBlackTree.parent == \old(k2.left)
DataStructures.RedBlackTree.parent.element == \result.element
DataStructures.RedBlackTree.parent.element == \old(DataStructures.RedBlackTree.parent.element)
DataStructures.RedBlackTree.parent.element == \old(DataStructures.RedBlackTree.grand.left.element)
DataStructures.RedBlackTree.parent.element == \old(k2.left.element)
DataStructures.RedBlackTree.parent.right == DataStructures.RedBlackTree.grand
DataStructures.RedBlackTree.parent.right.element == DataStructures.RedBlackTree.grand.element
DataStructures.RedBlackTree.grand == \result.right
DataStructures.RedBlackTree.grand == \old(DataStructures.RedBlackTree.grand)
DataStructures.RedBlackTree.grand == \old(k2)
DataStructures.RedBlackTree.grand.element == k2.element
DataStructures.RedBlackTree.grand.element == \result.right.element
DataStructures.RedBlackTree.grand.element == \old(DataStructures.RedBlackTree.grand.element)
DataStructures.RedBlackTree.grand.element == \old(k2.element)
DataStructures.RedBlackTree.great == \old(DataStructures.RedBlackTree.great)
DataStructures.RedBlackTree.great.element == \old(DataStructures.RedBlackTree.great.element)
DataStructures.RedBlackTree.great.left == \old(DataStructures.RedBlackTree.great.left)
DataStructures.RedBlackTree.great.left.element == \old(DataStructures.RedBlackTree.great.left.element)
DataStructures.RedBlackTree.great.left.right == \old(DataStructures.RedBlackTree.great.left.right)
DataStructures.RedBlackTree.great.left.color == \old(DataStructures.RedBlackTree.great.left.color)
DataStructures.RedBlackTree.great.right == \old(DataStructures.RedBlackTree.great.right)
DataStructures.RedBlackTree.great.right.element == \old(DataStructures.RedBlackTree.great.right.element)
DataStructures.RedBlackTree.great.right.right == \old(DataStructures.RedBlackTree.great.right.right)
DataStructures.RedBlackTree.great.right.color == \old(DataStructures.RedBlackTree.great.right.color)
DataStructures.RedBlackTree.great.color == \old(DataStructures.RedBlackTree.great.color)
DataStructures.RedBlackTree.nullNode.element != null
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.MyInteger.class
DataStructures.RedBlackTree.current != null
DataStructures.RedBlackTree.parent != null
DataStructures.RedBlackTree.parent.element != null
DataStructures.RedBlackTree.grand != null
DataStructures.RedBlackTree.grand.element != null
DataStructures.RedBlackTree.great != null
DataStructures.RedBlackTree.great.element != null
DataStructures.RedBlackTree.great.left != null
DataStructures.RedBlackTree.great.left.element != null
DataStructures.RedBlackTree.great.left.left != null
DataStructures.RedBlackTree.great.left.right != null
DataStructures.RedBlackTree.great.left.color == 0 || DataStructures.RedBlackTree.great.left.color == 1
DataStructures.RedBlackTree.great.right != null
DataStructures.RedBlackTree.great.right.element != null
DataStructures.RedBlackTree.great.right.left != null
DataStructures.RedBlackTree.great.right.right != null
DataStructures.RedBlackTree.great.right.color == 0 || DataStructures.RedBlackTree.great.right.color == 1
DataStructures.RedBlackTree.great.color == 0 || DataStructures.RedBlackTree.great.color == 1
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == k2.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == k2.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == k2.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == \result.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == \result.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == \result.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.nullNode.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.nullNode.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.nullNode.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.current.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.current.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.current.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.parent.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.parent.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.parent.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.grand.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.grand.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.grand.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.great.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.great.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.great.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(k2.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(k2.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(k2.right.element.getClass())
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.color
===========================================================================
DataStructures.RedBlackTree.rotateWithRightChild(DataStructures.RedBlackNode):::ENTER
    Variables: DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color k1 k1.element k1.element.getClass() k1.left k1.left.element k1.left.element.getClass() k1.left.left k1.left.right k1.left.color k1.right k1.right.element k1.right.element.getClass() k1.right.left k1.right.right k1.right.color k1.color
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.right
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.parent.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.left.color
DataStructures.RedBlackTree.BLACK == k1.left.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.current.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.parent.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.grand.right.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.grand.color
DataStructures.RedBlackTree.RED == k1.right.color
DataStructures.RedBlackTree.RED == k1.color
DataStructures.RedBlackTree.current == DataStructures.RedBlackTree.parent.right
DataStructures.RedBlackTree.current == DataStructures.RedBlackTree.grand.right.right
DataStructures.RedBlackTree.current == k1.right.right
DataStructures.RedBlackTree.current.element == DataStructures.RedBlackTree.parent.right.element
DataStructures.RedBlackTree.current.left == DataStructures.RedBlackTree.parent.right.left
DataStructures.RedBlackTree.current.right == DataStructures.RedBlackTree.parent.right.right
DataStructures.RedBlackTree.parent == DataStructures.RedBlackTree.grand.right
DataStructures.RedBlackTree.parent == k1.right
DataStructures.RedBlackTree.parent.element == DataStructures.RedBlackTree.grand.right.element
DataStructures.RedBlackTree.parent.element == k1.right.element
DataStructures.RedBlackTree.parent.left == DataStructures.RedBlackTree.grand.right.left
DataStructures.RedBlackTree.parent.left == k1.right.left
DataStructures.RedBlackTree.grand == k1
DataStructures.RedBlackTree.grand.element == k1.element
DataStructures.RedBlackTree.grand.left == k1.left
DataStructures.RedBlackTree.grand.left.element == k1.left.element
DataStructures.RedBlackTree.grand.left.left == k1.left.left
DataStructures.RedBlackTree.grand.left.right == k1.left.right
DataStructures.RedBlackTree.nullNode.element != null
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.MyInteger.class
DataStructures.RedBlackTree.current != null
DataStructures.RedBlackTree.current.element != null
DataStructures.RedBlackTree.current.left != null
DataStructures.RedBlackTree.current.left.element != null
DataStructures.RedBlackTree.current.right != null
DataStructures.RedBlackTree.current.right.element != null
DataStructures.RedBlackTree.parent != null
DataStructures.RedBlackTree.parent.element != null
DataStructures.RedBlackTree.parent.left != null
DataStructures.RedBlackTree.parent.left.element != null
DataStructures.RedBlackTree.parent.left.left != null
DataStructures.RedBlackTree.parent.left.right != null
DataStructures.RedBlackTree.grand != null
DataStructures.RedBlackTree.grand.element != null
DataStructures.RedBlackTree.grand.left != null
DataStructures.RedBlackTree.grand.left.element != null
DataStructures.RedBlackTree.grand.left.left != null
DataStructures.RedBlackTree.grand.left.right != null
DataStructures.RedBlackTree.great != null
DataStructures.RedBlackTree.great.element != null
DataStructures.RedBlackTree.great.left != null
DataStructures.RedBlackTree.great.left.element != null
DataStructures.RedBlackTree.great.left.left != null
DataStructures.RedBlackTree.great.left.right != null
DataStructures.RedBlackTree.great.left.color == 0 || DataStructures.RedBlackTree.great.left.color == 1
DataStructures.RedBlackTree.great.right != null
DataStructures.RedBlackTree.great.right.element != null
DataStructures.RedBlackTree.great.right.left != null
DataStructures.RedBlackTree.great.right.right != null
DataStructures.RedBlackTree.great.right.color == 0 || DataStructures.RedBlackTree.great.right.color == 1
DataStructures.RedBlackTree.great.color == 0 || DataStructures.RedBlackTree.great.color == 1
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == k1.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == k1.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == k1.right.element.getClass()
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.color
===========================================================================
DataStructures.RedBlackTree.rotateWithRightChild(DataStructures.RedBlackNode):::EXIT
    Variables: DataStructures.RedBlackTree.nullNode DataStructures.RedBlackTree.nullNode.element DataStructures.RedBlackTree.nullNode.element.getClass() DataStructures.RedBlackTree.nullNode.left DataStructures.RedBlackTree.nullNode.left.element DataStructures.RedBlackTree.nullNode.left.element.getClass() DataStructures.RedBlackTree.nullNode.left.left DataStructures.RedBlackTree.nullNode.left.right DataStructures.RedBlackTree.nullNode.left.color DataStructures.RedBlackTree.nullNode.right DataStructures.RedBlackTree.nullNode.right.element DataStructures.RedBlackTree.nullNode.right.element.getClass() DataStructures.RedBlackTree.nullNode.right.left DataStructures.RedBlackTree.nullNode.right.right DataStructures.RedBlackTree.nullNode.right.color DataStructures.RedBlackTree.nullNode.color DataStructures.RedBlackTree.BLACK DataStructures.RedBlackTree.RED DataStructures.RedBlackTree.current DataStructures.RedBlackTree.current.element DataStructures.RedBlackTree.current.element.getClass() DataStructures.RedBlackTree.current.left DataStructures.RedBlackTree.current.left.element DataStructures.RedBlackTree.current.left.element.getClass() DataStructures.RedBlackTree.current.left.left DataStructures.RedBlackTree.current.left.right DataStructures.RedBlackTree.current.left.color DataStructures.RedBlackTree.current.right DataStructures.RedBlackTree.current.right.element DataStructures.RedBlackTree.current.right.element.getClass() DataStructures.RedBlackTree.current.right.left DataStructures.RedBlackTree.current.right.right DataStructures.RedBlackTree.current.right.color DataStructures.RedBlackTree.current.color DataStructures.RedBlackTree.parent DataStructures.RedBlackTree.parent.element DataStructures.RedBlackTree.parent.element.getClass() DataStructures.RedBlackTree.parent.left DataStructures.RedBlackTree.parent.left.element DataStructures.RedBlackTree.parent.left.element.getClass() DataStructures.RedBlackTree.parent.left.left DataStructures.RedBlackTree.parent.left.right DataStructures.RedBlackTree.parent.left.color DataStructures.RedBlackTree.parent.right DataStructures.RedBlackTree.parent.right.element DataStructures.RedBlackTree.parent.right.element.getClass() DataStructures.RedBlackTree.parent.right.left DataStructures.RedBlackTree.parent.right.right DataStructures.RedBlackTree.parent.right.color DataStructures.RedBlackTree.parent.color DataStructures.RedBlackTree.grand DataStructures.RedBlackTree.grand.element DataStructures.RedBlackTree.grand.element.getClass() DataStructures.RedBlackTree.grand.left DataStructures.RedBlackTree.grand.left.element DataStructures.RedBlackTree.grand.left.element.getClass() DataStructures.RedBlackTree.grand.left.left DataStructures.RedBlackTree.grand.left.right DataStructures.RedBlackTree.grand.left.color DataStructures.RedBlackTree.grand.right DataStructures.RedBlackTree.grand.right.element DataStructures.RedBlackTree.grand.right.element.getClass() DataStructures.RedBlackTree.grand.right.left DataStructures.RedBlackTree.grand.right.right DataStructures.RedBlackTree.grand.right.color DataStructures.RedBlackTree.grand.color DataStructures.RedBlackTree.great DataStructures.RedBlackTree.great.element DataStructures.RedBlackTree.great.element.getClass() DataStructures.RedBlackTree.great.left DataStructures.RedBlackTree.great.left.element DataStructures.RedBlackTree.great.left.element.getClass() DataStructures.RedBlackTree.great.left.left DataStructures.RedBlackTree.great.left.right DataStructures.RedBlackTree.great.left.color DataStructures.RedBlackTree.great.right DataStructures.RedBlackTree.great.right.element DataStructures.RedBlackTree.great.right.element.getClass() DataStructures.RedBlackTree.great.right.left DataStructures.RedBlackTree.great.right.right DataStructures.RedBlackTree.great.right.color DataStructures.RedBlackTree.great.color k1 k1.element k1.element.getClass() k1.left k1.left.element k1.left.element.getClass() k1.left.left k1.left.right k1.left.color k1.right k1.right.element k1.right.element.getClass() k1.right.left k1.right.right k1.right.color k1.color return return.element return.element.getClass() return.left return.left.element return.left.element.getClass() return.left.left return.left.right return.left.color return.right return.right.element return.right.element.getClass() return.right.left return.right.right return.right.color return.color orig(DataStructures.RedBlackTree.nullNode) orig(DataStructures.RedBlackTree.nullNode.element) orig(DataStructures.RedBlackTree.nullNode.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left) orig(DataStructures.RedBlackTree.nullNode.left.element) orig(DataStructures.RedBlackTree.nullNode.left.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.left.left) orig(DataStructures.RedBlackTree.nullNode.left.right) orig(DataStructures.RedBlackTree.nullNode.left.color) orig(DataStructures.RedBlackTree.nullNode.right) orig(DataStructures.RedBlackTree.nullNode.right.element) orig(DataStructures.RedBlackTree.nullNode.right.element.getClass()) orig(DataStructures.RedBlackTree.nullNode.right.left) orig(DataStructures.RedBlackTree.nullNode.right.right) orig(DataStructures.RedBlackTree.nullNode.right.color) orig(DataStructures.RedBlackTree.nullNode.color) orig(DataStructures.RedBlackTree.current) orig(DataStructures.RedBlackTree.current.element) orig(DataStructures.RedBlackTree.current.element.getClass()) orig(DataStructures.RedBlackTree.current.left) orig(DataStructures.RedBlackTree.current.left.element) orig(DataStructures.RedBlackTree.current.left.element.getClass()) orig(DataStructures.RedBlackTree.current.left.left) orig(DataStructures.RedBlackTree.current.left.right) orig(DataStructures.RedBlackTree.current.left.color) orig(DataStructures.RedBlackTree.current.right) orig(DataStructures.RedBlackTree.current.right.element) orig(DataStructures.RedBlackTree.current.right.element.getClass()) orig(DataStructures.RedBlackTree.current.right.left) orig(DataStructures.RedBlackTree.current.right.right) orig(DataStructures.RedBlackTree.current.right.color) orig(DataStructures.RedBlackTree.current.color) orig(DataStructures.RedBlackTree.parent) orig(DataStructures.RedBlackTree.parent.element) orig(DataStructures.RedBlackTree.parent.element.getClass()) orig(DataStructures.RedBlackTree.parent.left) orig(DataStructures.RedBlackTree.parent.left.element) orig(DataStructures.RedBlackTree.parent.left.element.getClass()) orig(DataStructures.RedBlackTree.parent.left.left) orig(DataStructures.RedBlackTree.parent.left.right) orig(DataStructures.RedBlackTree.parent.left.color) orig(DataStructures.RedBlackTree.parent.right) orig(DataStructures.RedBlackTree.parent.right.element) orig(DataStructures.RedBlackTree.parent.right.element.getClass()) orig(DataStructures.RedBlackTree.parent.right.left) orig(DataStructures.RedBlackTree.parent.right.right) orig(DataStructures.RedBlackTree.parent.right.color) orig(DataStructures.RedBlackTree.parent.color) orig(DataStructures.RedBlackTree.grand) orig(DataStructures.RedBlackTree.grand.element) orig(DataStructures.RedBlackTree.grand.element.getClass()) orig(DataStructures.RedBlackTree.grand.left) orig(DataStructures.RedBlackTree.grand.left.element) orig(DataStructures.RedBlackTree.grand.left.element.getClass()) orig(DataStructures.RedBlackTree.grand.left.left) orig(DataStructures.RedBlackTree.grand.left.right) orig(DataStructures.RedBlackTree.grand.left.color) orig(DataStructures.RedBlackTree.grand.right) orig(DataStructures.RedBlackTree.grand.right.element) orig(DataStructures.RedBlackTree.grand.right.element.getClass()) orig(DataStructures.RedBlackTree.grand.right.left) orig(DataStructures.RedBlackTree.grand.right.right) orig(DataStructures.RedBlackTree.grand.right.color) orig(DataStructures.RedBlackTree.grand.color) orig(DataStructures.RedBlackTree.great) orig(DataStructures.RedBlackTree.great.element) orig(DataStructures.RedBlackTree.great.element.getClass()) orig(DataStructures.RedBlackTree.great.left) orig(DataStructures.RedBlackTree.great.left.element) orig(DataStructures.RedBlackTree.great.left.element.getClass()) orig(DataStructures.RedBlackTree.great.left.left) orig(DataStructures.RedBlackTree.great.left.right) orig(DataStructures.RedBlackTree.great.left.color) orig(DataStructures.RedBlackTree.great.right) orig(DataStructures.RedBlackTree.great.right.element) orig(DataStructures.RedBlackTree.great.right.element.getClass()) orig(DataStructures.RedBlackTree.great.right.left) orig(DataStructures.RedBlackTree.great.right.right) orig(DataStructures.RedBlackTree.great.right.color) orig(DataStructures.RedBlackTree.great.color) orig(k1) orig(k1.element) orig(k1.element.getClass()) orig(k1.left) orig(k1.left.element) orig(k1.left.element.getClass()) orig(k1.left.left) orig(k1.left.right) orig(k1.left.color) orig(k1.right) orig(k1.right.element) orig(k1.right.element.getClass()) orig(k1.right.left) orig(k1.right.right) orig(k1.right.color) orig(k1.color)
assignable DataStructures.RedBlackTree.parent.left, DataStructures.RedBlackTree.parent.left.element, DataStructures.RedBlackTree.parent.left.left, DataStructures.RedBlackTree.parent.left.right, DataStructures.RedBlackTree.parent.left.color, DataStructures.RedBlackTree.grand.right, DataStructures.RedBlackTree.grand.right.element, DataStructures.RedBlackTree.grand.right.left, DataStructures.RedBlackTree.grand.right.right, DataStructures.RedBlackTree.grand.right.color, DataStructures.RedBlackTree.great.left.right, DataStructures.RedBlackTree.great.right.right, k1.right, k1.right.element, k1.right.left, k1.right.right, k1.right.color
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.left.right
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.left
DataStructures.RedBlackTree.nullNode == DataStructures.RedBlackTree.current.right.right
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.nullNode.right.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.left.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.left.right)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.right.left)
DataStructures.RedBlackTree.nullNode == \old(DataStructures.RedBlackTree.current.right.right)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.nullNode.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.nullNode.left.element)
DataStructures.RedBlackTree.nullNode.element == \old(DataStructures.RedBlackTree.nullNode.right.element)
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.current.right.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.left.color
DataStructures.RedBlackTree.BLACK == DataStructures.RedBlackTree.grand.right.color
DataStructures.RedBlackTree.BLACK == k1.left.color
DataStructures.RedBlackTree.BLACK == k1.right.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.current.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.parent.left.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.parent.right.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.parent.color
DataStructures.RedBlackTree.RED == DataStructures.RedBlackTree.grand.color
DataStructures.RedBlackTree.RED == k1.color
DataStructures.RedBlackTree.RED == \result.left.color
DataStructures.RedBlackTree.RED == \result.right.color
DataStructures.RedBlackTree.RED == \result.color
DataStructures.RedBlackTree.current == DataStructures.RedBlackTree.parent.right
DataStructures.RedBlackTree.current == \result.right
DataStructures.RedBlackTree.current == \old(DataStructures.RedBlackTree.current)
DataStructures.RedBlackTree.current == \old(DataStructures.RedBlackTree.parent.right)
DataStructures.RedBlackTree.current == \old(DataStructures.RedBlackTree.grand.right.right)
DataStructures.RedBlackTree.current == \old(k1.right.right)
DataStructures.RedBlackTree.current.element == DataStructures.RedBlackTree.parent.right.element
DataStructures.RedBlackTree.current.element == \result.right.element
DataStructures.RedBlackTree.current.element == \old(DataStructures.RedBlackTree.current.element)
DataStructures.RedBlackTree.current.element == \old(DataStructures.RedBlackTree.parent.right.element)
DataStructures.RedBlackTree.current.left == DataStructures.RedBlackTree.parent.right.left
DataStructures.RedBlackTree.current.left == \result.right.left
DataStructures.RedBlackTree.current.left == \old(DataStructures.RedBlackTree.current.left)
DataStructures.RedBlackTree.current.left == \old(DataStructures.RedBlackTree.parent.right.left)
DataStructures.RedBlackTree.current.left.element == \old(DataStructures.RedBlackTree.current.left.element)
DataStructures.RedBlackTree.current.right == DataStructures.RedBlackTree.parent.right.right
DataStructures.RedBlackTree.current.right == \result.right.right
DataStructures.RedBlackTree.current.right == \old(DataStructures.RedBlackTree.current.right)
DataStructures.RedBlackTree.current.right == \old(DataStructures.RedBlackTree.parent.right.right)
DataStructures.RedBlackTree.current.right.element == \old(DataStructures.RedBlackTree.current.right.element)
DataStructures.RedBlackTree.parent == \result
DataStructures.RedBlackTree.parent == \old(DataStructures.RedBlackTree.parent)
DataStructures.RedBlackTree.parent == \old(DataStructures.RedBlackTree.grand.right)
DataStructures.RedBlackTree.parent == \old(k1.right)
DataStructures.RedBlackTree.parent.element == \result.element
DataStructures.RedBlackTree.parent.element == \old(DataStructures.RedBlackTree.parent.element)
DataStructures.RedBlackTree.parent.element == \old(DataStructures.RedBlackTree.grand.right.element)
DataStructures.RedBlackTree.parent.element == \old(k1.right.element)
DataStructures.RedBlackTree.parent.left == DataStructures.RedBlackTree.grand
DataStructures.RedBlackTree.parent.left.element == DataStructures.RedBlackTree.grand.element
DataStructures.RedBlackTree.parent.left.left == DataStructures.RedBlackTree.grand.left
DataStructures.RedBlackTree.parent.left.right == DataStructures.RedBlackTree.grand.right
DataStructures.RedBlackTree.grand == \result.left
DataStructures.RedBlackTree.grand == \old(DataStructures.RedBlackTree.grand)
DataStructures.RedBlackTree.grand == \old(k1)
DataStructures.RedBlackTree.grand.element == k1.element
DataStructures.RedBlackTree.grand.element == \result.left.element
DataStructures.RedBlackTree.grand.element == \old(DataStructures.RedBlackTree.grand.element)
DataStructures.RedBlackTree.grand.element == \old(k1.element)
DataStructures.RedBlackTree.grand.left == k1.left
DataStructures.RedBlackTree.grand.left == \result.left.left
DataStructures.RedBlackTree.grand.left == \old(DataStructures.RedBlackTree.grand.left)
DataStructures.RedBlackTree.grand.left == \old(k1.left)
DataStructures.RedBlackTree.grand.left.element == k1.left.element
DataStructures.RedBlackTree.grand.left.element == \old(DataStructures.RedBlackTree.grand.left.element)
DataStructures.RedBlackTree.grand.left.element == \old(k1.left.element)
DataStructures.RedBlackTree.grand.left.left == k1.left.left
DataStructures.RedBlackTree.grand.left.left == \old(DataStructures.RedBlackTree.grand.left.left)
DataStructures.RedBlackTree.grand.left.left == \old(k1.left.left)
DataStructures.RedBlackTree.grand.left.right == k1.left.right
DataStructures.RedBlackTree.grand.left.right == \old(DataStructures.RedBlackTree.grand.left.right)
DataStructures.RedBlackTree.grand.left.right == \old(k1.left.right)
DataStructures.RedBlackTree.grand.right == k1.right
DataStructures.RedBlackTree.grand.right == \result.left.right
DataStructures.RedBlackTree.grand.right == \old(DataStructures.RedBlackTree.parent.left)
DataStructures.RedBlackTree.grand.right == \old(DataStructures.RedBlackTree.grand.right.left)
DataStructures.RedBlackTree.grand.right == \old(k1.right.left)
DataStructures.RedBlackTree.grand.right.element == k1.right.element
DataStructures.RedBlackTree.grand.right.element == \old(DataStructures.RedBlackTree.parent.left.element)
DataStructures.RedBlackTree.grand.right.left == k1.right.left
DataStructures.RedBlackTree.grand.right.left == \old(DataStructures.RedBlackTree.parent.left.left)
DataStructures.RedBlackTree.grand.right.right == k1.right.right
DataStructures.RedBlackTree.grand.right.right == \old(DataStructures.RedBlackTree.parent.left.right)
DataStructures.RedBlackTree.great == \old(DataStructures.RedBlackTree.great)
DataStructures.RedBlackTree.great.element == \old(DataStructures.RedBlackTree.great.element)
DataStructures.RedBlackTree.great.left == \old(DataStructures.RedBlackTree.great.left)
DataStructures.RedBlackTree.great.left.element == \old(DataStructures.RedBlackTree.great.left.element)
DataStructures.RedBlackTree.great.left.left == \old(DataStructures.RedBlackTree.great.left.left)
DataStructures.RedBlackTree.great.left.color == \old(DataStructures.RedBlackTree.great.left.color)
DataStructures.RedBlackTree.great.right == \old(DataStructures.RedBlackTree.great.right)
DataStructures.RedBlackTree.great.right.element == \old(DataStructures.RedBlackTree.great.right.element)
DataStructures.RedBlackTree.great.right.left == \old(DataStructures.RedBlackTree.great.right.left)
DataStructures.RedBlackTree.great.right.color == \old(DataStructures.RedBlackTree.great.right.color)
DataStructures.RedBlackTree.great.color == \old(DataStructures.RedBlackTree.great.color)
DataStructures.RedBlackTree.nullNode.element != null
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.MyInteger.class
DataStructures.RedBlackTree.current != null
DataStructures.RedBlackTree.current.element != null
DataStructures.RedBlackTree.current.left != null
DataStructures.RedBlackTree.current.left.element != null
DataStructures.RedBlackTree.current.right != null
DataStructures.RedBlackTree.current.right.element != null
DataStructures.RedBlackTree.parent != null
DataStructures.RedBlackTree.parent.element != null
DataStructures.RedBlackTree.grand != null
DataStructures.RedBlackTree.grand.element != null
DataStructures.RedBlackTree.grand.left != null
DataStructures.RedBlackTree.grand.left.element != null
DataStructures.RedBlackTree.grand.left.left != null
DataStructures.RedBlackTree.grand.left.right != null
DataStructures.RedBlackTree.grand.right != null
DataStructures.RedBlackTree.grand.right.element != null
DataStructures.RedBlackTree.grand.right.left != null
DataStructures.RedBlackTree.grand.right.right != null
DataStructures.RedBlackTree.great != null
DataStructures.RedBlackTree.great.element != null
DataStructures.RedBlackTree.great.left != null
DataStructures.RedBlackTree.great.left.element != null
DataStructures.RedBlackTree.great.left.left != null
DataStructures.RedBlackTree.great.left.right != null
DataStructures.RedBlackTree.great.left.color == 0 || DataStructures.RedBlackTree.great.left.color == 1
DataStructures.RedBlackTree.great.right != null
DataStructures.RedBlackTree.great.right.element != null
DataStructures.RedBlackTree.great.right.left != null
DataStructures.RedBlackTree.great.right.right != null
DataStructures.RedBlackTree.great.right.color == 0 || DataStructures.RedBlackTree.great.right.color == 1
DataStructures.RedBlackTree.great.color == 0 || DataStructures.RedBlackTree.great.color == 1
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.nullNode.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.current.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.parent.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.grand.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == DataStructures.RedBlackTree.great.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == k1.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == k1.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == k1.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == \result.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == \result.left.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == \result.right.element.getClass()
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.nullNode.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.nullNode.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.nullNode.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.current.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.current.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.current.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.parent.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.parent.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.parent.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.grand.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.grand.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.grand.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.great.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.great.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(DataStructures.RedBlackTree.great.right.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(k1.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(k1.left.element.getClass())
DataStructures.RedBlackTree.nullNode.element.getClass() == \old(k1.right.element.getClass())
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.BLACK >= DataStructures.RedBlackTree.great.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.left.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.right.color
DataStructures.RedBlackTree.RED <= DataStructures.RedBlackTree.great.color
