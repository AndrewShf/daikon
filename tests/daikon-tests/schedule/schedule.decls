VarComparability
implicit

DECLARE
std.new_ele(int;)Ele *:::ENTER
new_num
int
int
1
::alloc_proc_num
int
int
1
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.new_ele(int;)Ele *:::EXIT1
new_num
int
int
1
::alloc_proc_num
int
int
1
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
24
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23
return
Ele[]
hashcode
24
return.next
_job[]
hashcode
25
return.next.next
_job[]
hashcode
26
return.next.prev
_job[]
hashcode
27
return.next.val
int
int
28
return.prev
_job[]
hashcode
29
return.prev.next
_job[]
hashcode
30
return.prev.prev
_job[]
hashcode
31
return.prev.val
int
int
32
return.val
int
int
33

DECLARE
std.new_list()List *:::ENTER
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.new_list()List *:::EXIT2
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
35
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23
return
List[]
hashcode
35
return.first
Ele[]
hashcode
36
return.first.next
_job[]
hashcode
37
return.first.prev
_job[]
hashcode
38
return.first.val
int
int
39
return.last
Ele[]
hashcode
40
return.last.next
_job[]
hashcode
41
return.last.prev
_job[]
hashcode
42
return.last.val
int
int
43
return.mem_count
int
int
44

DECLARE
std.append_ele(List *;Ele *;)List *:::ENTER
a_list
List[]
hashcode
45
a_list.first
Ele[]
hashcode
46
a_list.first.next
_job[]
hashcode
47
a_list.first.prev
_job[]
hashcode
48
a_list.first.val
int
int
49
a_list.last
Ele[]
hashcode
50
a_list.last.next
_job[]
hashcode
51
a_list.last.prev
_job[]
hashcode
52
a_list.last.val
int
int
53
a_list.mem_count
int
int
54
a_ele
Ele[]
hashcode
55
a_ele.next
_job[]
hashcode
56
a_ele.next.next
_job[]
hashcode
57
a_ele.next.prev
_job[]
hashcode
58
a_ele.next.val
int
int
59
a_ele.prev
_job[]
hashcode
60
a_ele.prev.next
_job[]
hashcode
61
a_ele.prev.prev
_job[]
hashcode
62
a_ele.prev.val
int
int
63
a_ele.val
int
int
64
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
45
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.append_ele(List *;Ele *;)List *:::EXIT3
a_list
List[]
hashcode
65
a_list.first
Ele[]
hashcode
46
a_list.first.next
_job[]
hashcode
47
a_list.first.prev
_job[]
hashcode
48
a_list.first.val
int
int
49
a_list.last
Ele[]
hashcode
50
a_list.last.next
_job[]
hashcode
51
a_list.last.prev
_job[]
hashcode
52
a_list.last.val
int
int
53
a_list.mem_count
int
int
54
a_ele
Ele[]
hashcode
55
a_ele.next
_job[]
hashcode
56
a_ele.next.next
_job[]
hashcode
57
a_ele.next.prev
_job[]
hashcode
58
a_ele.next.val
int
int
59
a_ele.prev
_job[]
hashcode
60
a_ele.prev.next
_job[]
hashcode
61
a_ele.prev.prev
_job[]
hashcode
62
a_ele.prev.val
int
int
63
a_ele.val
int
int
64
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
65
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23
return
List[]
hashcode
65
return.first
Ele[]
hashcode
36
return.first.next
_job[]
hashcode
37
return.first.prev
_job[]
hashcode
38
return.first.val
int
int
39
return.last
Ele[]
hashcode
40
return.last.next
_job[]
hashcode
41
return.last.prev
_job[]
hashcode
42
return.last.val
int
int
43
return.mem_count
int
int
44

DECLARE
std.find_nth(List *;int;)Ele *:::ENTER
f_list
List[]
hashcode
66
f_list.first
Ele[]
hashcode
67
f_list.first.next
_job[]
hashcode
68
f_list.first.prev
_job[]
hashcode
69
f_list.first.val
int
int
70
f_list.last
Ele[]
hashcode
71
f_list.last.next
_job[]
hashcode
72
f_list.last.prev
_job[]
hashcode
73
f_list.last.val
int
int
74
f_list.mem_count
int
int
75
n
int
int
76
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.find_nth(List *;int;)Ele *:::EXIT4
f_list
List[]
hashcode
66
f_list.first
Ele[]
hashcode
67
f_list.first.next
_job[]
hashcode
68
f_list.first.prev
_job[]
hashcode
69
f_list.first.val
int
int
70
f_list.last
Ele[]
hashcode
71
f_list.last.next
_job[]
hashcode
72
f_list.last.prev
_job[]
hashcode
73
f_list.last.val
int
int
74
f_list.mem_count
int
int
75
n
int
int
76
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23
return
Ele[]
hashcode
24
return.next
_job[]
hashcode
25
return.next.next
_job[]
hashcode
26
return.next.prev
_job[]
hashcode
27
return.next.val
int
int
28
return.prev
_job[]
hashcode
29
return.prev.next
_job[]
hashcode
30
return.prev.prev
_job[]
hashcode
31
return.prev.val
int
int
32
return.val
int
int
33

DECLARE
std.find_nth(List *;int;)Ele *:::EXIT5
f_list
List[]
hashcode
66
f_list.first
Ele[]
hashcode
67
f_list.first.next
_job[]
hashcode
68
f_list.first.prev
_job[]
hashcode
69
f_list.first.val
int
int
70
f_list.last
Ele[]
hashcode
71
f_list.last.next
_job[]
hashcode
72
f_list.last.prev
_job[]
hashcode
73
f_list.last.val
int
int
74
f_list.mem_count
int
int
75
n
int
int
76
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23
return
Ele[]
hashcode
24
return.next
_job[]
hashcode
25
return.next.next
_job[]
hashcode
26
return.next.prev
_job[]
hashcode
27
return.next.val
int
int
28
return.prev
_job[]
hashcode
29
return.prev.next
_job[]
hashcode
30
return.prev.prev
_job[]
hashcode
31
return.prev.val
int
int
32
return.val
int
int
33

DECLARE
std.del_ele(List *;Ele *;)List *:::ENTER
d_list
List[]
hashcode
77
d_list.first
Ele[]
hashcode
78
d_list.first.next
_job[]
hashcode
79
d_list.first.prev
_job[]
hashcode
80
d_list.first.val
int
int
81
d_list.last
Ele[]
hashcode
82
d_list.last.next
_job[]
hashcode
83
d_list.last.prev
_job[]
hashcode
84
d_list.last.val
int
int
85
d_list.mem_count
int
int
86
d_ele
Ele[]
hashcode
87
d_ele.next
_job[]
hashcode
88
d_ele.next.next
_job[]
hashcode
89
d_ele.next.prev
_job[]
hashcode
90
d_ele.next.val
int
int
91
d_ele.prev
_job[]
hashcode
92
d_ele.prev.next
_job[]
hashcode
93
d_ele.prev.prev
_job[]
hashcode
94
d_ele.prev.val
int
int
95
d_ele.val
int
int
96
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.del_ele(List *;Ele *;)List *:::EXIT6
d_list
List[]
hashcode
97
d_list.first
Ele[]
hashcode
78
d_list.first.next
_job[]
hashcode
79
d_list.first.prev
_job[]
hashcode
80
d_list.first.val
int
int
81
d_list.last
Ele[]
hashcode
82
d_list.last.next
_job[]
hashcode
83
d_list.last.prev
_job[]
hashcode
84
d_list.last.val
int
int
85
d_list.mem_count
int
int
86
d_ele
Ele[]
hashcode
87
d_ele.next
_job[]
hashcode
88
d_ele.next.next
_job[]
hashcode
89
d_ele.next.prev
_job[]
hashcode
90
d_ele.next.val
int
int
91
d_ele.prev
_job[]
hashcode
92
d_ele.prev.next
_job[]
hashcode
93
d_ele.prev.prev
_job[]
hashcode
94
d_ele.prev.val
int
int
95
d_ele.val
int
int
96
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23
return
List[]
hashcode
97
return.first
Ele[]
hashcode
36
return.first.next
_job[]
hashcode
37
return.first.prev
_job[]
hashcode
38
return.first.val
int
int
39
return.last
Ele[]
hashcode
40
return.last.next
_job[]
hashcode
41
return.last.prev
_job[]
hashcode
42
return.last.val
int
int
43
return.mem_count
int
int
44

DECLARE
std.del_ele(List *;Ele *;)List *:::EXIT7
d_list
List[]
hashcode
97
d_list.first
Ele[]
hashcode
78
d_list.first.next
_job[]
hashcode
79
d_list.first.prev
_job[]
hashcode
80
d_list.first.val
int
int
81
d_list.last
Ele[]
hashcode
82
d_list.last.next
_job[]
hashcode
83
d_list.last.prev
_job[]
hashcode
84
d_list.last.val
int
int
85
d_list.mem_count
int
int
86
d_ele
Ele[]
hashcode
87
d_ele.next
_job[]
hashcode
88
d_ele.next.next
_job[]
hashcode
89
d_ele.next.prev
_job[]
hashcode
90
d_ele.next.val
int
int
91
d_ele.prev
_job[]
hashcode
92
d_ele.prev.next
_job[]
hashcode
93
d_ele.prev.prev
_job[]
hashcode
94
d_ele.prev.val
int
int
95
d_ele.val
int
int
96
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23
return
List[]
hashcode
97
return.first
Ele[]
hashcode
36
return.first.next
_job[]
hashcode
37
return.first.prev
_job[]
hashcode
38
return.first.val
int
int
39
return.last
Ele[]
hashcode
40
return.last.next
_job[]
hashcode
41
return.last.prev
_job[]
hashcode
42
return.last.val
int
int
43
return.mem_count
int
int
44

DECLARE
std.free_ele(Ele *;)void:::ENTER
ptr
Ele[]
hashcode
98
ptr.next
_job[]
hashcode
99
ptr.next.next
_job[]
hashcode
100
ptr.next.prev
_job[]
hashcode
101
ptr.next.val
int
int
102
ptr.prev
_job[]
hashcode
103
ptr.prev.next
_job[]
hashcode
104
ptr.prev.prev
_job[]
hashcode
105
ptr.prev.val
int
int
106
ptr.val
int
int
107
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.free_ele(Ele *;)void:::EXIT8
ptr
Ele[]
hashcode
98
ptr.next
_job[]
hashcode
99
ptr.next.next
_job[]
hashcode
100
ptr.next.prev
_job[]
hashcode
101
ptr.next.val
int
int
102
ptr.prev
_job[]
hashcode
103
ptr.prev.next
_job[]
hashcode
104
ptr.prev.prev
_job[]
hashcode
105
ptr.prev.val
int
int
106
ptr.val
int
int
107
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.finish_process()void:::ENTER
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.finish_process()void:::EXIT9
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.finish_all_processes()void:::ENTER
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.finish_all_processes()void:::EXIT10
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.schedule()void:::ENTER
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.schedule()void:::EXIT11
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.schedule()void:::EXIT12
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.upgrade_process_prio(int;float;)void:::ENTER
prio
int
int
108
ratio
float
double
109
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.upgrade_process_prio(int;float;)void:::EXIT13
prio
int
int
108
ratio
float
double
109
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.upgrade_process_prio(int;float;)void:::EXIT14
prio
int
int
108
ratio
float
double
109
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.unblock_process(float;)void:::ENTER
ratio
float
double
109
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.unblock_process(float;)void:::EXIT15
ratio
float
double
109
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.quantum_expire()void:::ENTER
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.quantum_expire()void:::EXIT16
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.block_process()void:::ENTER
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.block_process()void:::EXIT17
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.new_process(int;)Ele *:::ENTER
prio
int
int
108
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.new_process(int;)Ele *:::EXIT18
prio
int
int
108
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
24
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23
return
Ele[]
hashcode
24
return.next
_job[]
hashcode
25
return.next.next
_job[]
hashcode
26
return.next.prev
_job[]
hashcode
27
return.next.val
int
int
28
return.prev
_job[]
hashcode
29
return.prev.next
_job[]
hashcode
30
return.prev.prev
_job[]
hashcode
31
return.prev.val
int
int
32
return.val
int
int
33

DECLARE
std.add_process(int;)void:::ENTER
prio
int
int
108
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.add_process(int;)void:::EXIT19
prio
int
int
108
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.init_prio_queue(int;int;)void:::ENTER
prio
int
int
108
num_proc
int
int
110
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.init_prio_queue(int;int;)void:::EXIT20
prio
int
int
108
num_proc
int
int
110
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.initialize()void:::ENTER
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.initialize()void:::EXIT21
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.main(int;char **;)int:::ENTER
argc
int
int
111
argv
char *[]
hashcode
112
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23

DECLARE
std.main(int;char **;)int:::EXIT22
argc
int
int
111
argv
char *[]
hashcode
112
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23
return
int
int
113

DECLARE
std.main(int;char **;)int:::EXIT23
argc
int
int
111
argv
char *[]
hashcode
112
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23
return
int
int
113

DECLARE
std.main(int;char **;)int:::EXIT24
argc
int
int
111
argv
char *[]
hashcode
112
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23
return
int
int
113

DECLARE
std.main(int;char **;)int:::EXIT25
argc
int
int
111
argv
char *[]
hashcode
112
::alloc_proc_num
int
int
34
::num_processes
int
int
2
::cur_proc
Ele[]
hashcode
3
::cur_proc.next
_job[]
hashcode
4
::cur_proc.next.next
_job[]
hashcode
5
::cur_proc.next.prev
_job[]
hashcode
6
::cur_proc.next.val
int
int
7
::cur_proc.prev
_job[]
hashcode
8
::cur_proc.prev.next
_job[]
hashcode
9
::cur_proc.prev.prev
_job[]
hashcode
10
::cur_proc.prev.val
int
int
11
::cur_proc.val
int
int
12
::prio_queue
List *[]
hashcode
13
::block_queue
List[]
hashcode
14
::block_queue.first
Ele[]
hashcode
15
::block_queue.first.next
_job[]
hashcode
16
::block_queue.first.prev
_job[]
hashcode
17
::block_queue.first.val
int
int
18
::block_queue.last
Ele[]
hashcode
19
::block_queue.last.next
_job[]
hashcode
20
::block_queue.last.prev
_job[]
hashcode
21
::block_queue.last.val
int
int
22
::block_queue.mem_count
int
int
23
return
int
int
113

# Implicit Type to Explicit Type
#   1 : alloc_proc_num new_num
#   2 : num_processes
#   3 : cur_proc
#   4 : cur_proc.next
#   5 : cur_proc.next.next
#   6 : cur_proc.next.prev
#   7 : cur_proc.next.val
#   8 : cur_proc.prev
#   9 : cur_proc.prev.next
#  10 : cur_proc.prev.prev
#  11 : cur_proc.prev.val
#  12 : cur_proc.val
#  13 : prio_queue
#  14 : block_queue
#  15 : block_queue.first
#  16 : block_queue.first.next
#  17 : block_queue.first.prev
#  18 : block_queue.first.val
#  19 : block_queue.last
#  20 : block_queue.last.next
#  21 : block_queue.last.prev
#  22 : block_queue.last.val
#  23 : block_queue.mem_count
#  24 : cur_proc lh_return_value
#  25 : return.next
#  26 : return.next.next
#  27 : return.next.prev
#  28 : return.next.val
#  29 : return.prev
#  30 : return.prev.next
#  31 : return.prev.prev
#  32 : return.prev.val
#  33 : return.val
#  34 : alloc_proc_num
#  35 : block_queue lh_return_value
#  36 : return.first
#  37 : return.first.next
#  38 : return.first.prev
#  39 : return.first.val
#  40 : return.last
#  41 : return.last.next
#  42 : return.last.prev
#  43 : return.last.val
#  44 : return.mem_count
#  45 : a_list block_queue
#  46 : a_list.first
#  47 : a_list.first.next
#  48 : a_list.first.prev
#  49 : a_list.first.val
#  50 : a_list.last
#  51 : a_list.last.next
#  52 : a_list.last.prev
#  53 : a_list.last.val
#  54 : a_list.mem_count
#  55 : a_ele cur_proc
#  56 : a_ele.next
#  57 : a_ele.next.next
#  58 : a_ele.next.prev
#  59 : a_ele.next.val
#  60 : a_ele.prev
#  61 : a_ele.prev.next
#  62 : a_ele.prev.prev
#  63 : a_ele.prev.val
#  64 : a_ele.val
#  65 : a_list block_queue lh_return_value
#  66 : block_queue f_list
#  67 : f_list.first
#  68 : f_list.first.next
#  69 : f_list.first.prev
#  70 : f_list.first.val
#  71 : f_list.last
#  72 : f_list.last.next
#  73 : f_list.last.prev
#  74 : f_list.last.val
#  75 : f_list.mem_count
#  76 : n
#  77 : block_queue d_list
#  78 : d_list.first
#  79 : d_list.first.next
#  80 : d_list.first.prev
#  81 : d_list.first.val
#  82 : d_list.last
#  83 : d_list.last.next
#  84 : d_list.last.prev
#  85 : d_list.last.val
#  86 : d_list.mem_count
#  87 : cur_proc d_ele
#  88 : d_ele.next
#  89 : d_ele.next.next
#  90 : d_ele.next.prev
#  91 : d_ele.next.val
#  92 : d_ele.prev
#  93 : d_ele.prev.next
#  94 : d_ele.prev.prev
#  95 : d_ele.prev.val
#  96 : d_ele.val
#  97 : block_queue d_list lh_return_value
#  98 : cur_proc ptr
#  99 : ptr.next
# 100 : ptr.next.next
# 101 : ptr.next.prev
# 102 : ptr.next.val
# 103 : ptr.prev
# 104 : ptr.prev.next
# 105 : ptr.prev.prev
# 106 : ptr.prev.val
# 107 : ptr.val
# 108 : prio
# 109 : ratio
# 110 : num_proc
# 111 : argc
# 112 : argv
# 113 : lh_return_value
