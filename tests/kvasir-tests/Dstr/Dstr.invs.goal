===========================================================================
..main():::ENTER
::collation has only one value
::collation[] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 256, 264, 265, 267, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 295, 296, 297, 298, 300, 302, 307, 308, 309, 310, 313, 91, 92, 93, 94, 95, 96, 256, 264, 265, 267, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 295, 296, 297, 298, 300, 302, 307, 308, 309, 310, 313, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 256, 256, 256, 256, 256, 256, 263, 266, 269, 269, 269, 269, 277, 277, 277, 277, 268, 286, 288, 288, 288, 288, 288, 215, 294, 302, 302, 302, 302, 310, 315, 299, 256, 256, 256, 256, 256, 256, 263, 266, 269, 269, 269, 269, 277, 277, 277, 277, 268, 286, 288, 288, 288, 288, 288, 247, 294, 302, 302, 302, 302, 310, 315, 310]
===========================================================================
..main():::EXIT
::collation == orig(::collation)
::collation[] == orig(::collation[])
::collation has only one value
::collation[] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 256, 264, 265, 267, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 295, 296, 297, 298, 300, 302, 307, 308, 309, 310, 313, 91, 92, 93, 94, 95, 96, 256, 264, 265, 267, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 295, 296, 297, 298, 300, 302, 307, 308, 309, 310, 313, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 256, 256, 256, 256, 256, 256, 263, 266, 269, 269, 269, 269, 277, 277, 277, 277, 268, 286, 288, 288, 288, 288, 288, 215, 294, 302, 302, 302, 302, 310, 315, 299, 256, 256, 256, 256, 256, 256, 263, 266, 269, 269, 269, 269, 277, 277, 277, 277, 268, 286, 288, 288, 288, 288, 288, 247, 294, 302, 302, 302, 302, 310, 315, 310]
return == 0
===========================================================================
Dstr:::OBJECT
this->max one of { 14, 28 }
this->theBuffer one of { "Hello, world!", "Hello, world!\n", "hello, world!\n" }
this->used one of { 13, 14 }
===========================================================================
Dstr.aschar() const:::ENTER
::collation has only one value
::collation[] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 256, 264, 265, 267, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 295, 296, 297, 298, 300, 302, 307, 308, 309, 310, 313, 91, 92, 93, 94, 95, 96, 256, 264, 265, 267, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 295, 296, 297, 298, 300, 302, 307, 308, 309, 310, 313, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 256, 256, 256, 256, 256, 256, 263, 266, 269, 269, 269, 269, 277, 277, 277, 277, 268, 286, 288, 288, 288, 288, 288, 215, 294, 302, 302, 302, 302, 310, 315, 299, 256, 256, 256, 256, 256, 256, 263, 266, 269, 269, 269, 269, 277, 277, 277, 277, 268, 286, 288, 288, 288, 288, 288, 247, 294, 302, 302, 302, 302, 310, 315, 310]
this has only one value
this->max == 28
this->theBuffer == "hello, world!\n"
this->used == 14
this[0] has only one value
===========================================================================
Dstr.aschar() const:::EXIT
::collation == orig(::collation)
::collation[] == orig(::collation[])
this->max == orig(this->max)
this->used == orig(this->used)
this[0] == orig(this[0])
::collation has only one value
::collation[] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 256, 264, 265, 267, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 295, 296, 297, 298, 300, 302, 307, 308, 309, 310, 313, 91, 92, 93, 94, 95, 96, 256, 264, 265, 267, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 295, 296, 297, 298, 300, 302, 307, 308, 309, 310, 313, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 256, 256, 256, 256, 256, 256, 263, 266, 269, 269, 269, 269, 277, 277, 277, 277, 268, 286, 288, 288, 288, 288, 288, 215, 294, 302, 302, 302, 302, 310, 315, 299, 256, 256, 256, 256, 256, 256, 263, 266, 269, 269, 269, 269, 277, 277, 277, 277, 268, 286, 288, 288, 288, 288, 288, 247, 294, 302, 302, 302, 302, 310, 315, 310]
return == "hello, world!\n"
this->max == 28
this->used == 14
this[0] has only one value
return == this->theBuffer
return == orig(this->theBuffer)
===========================================================================
Dstr.length() const:::ENTER
::collation has only one value
::collation[] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 256, 264, 265, 267, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 295, 296, 297, 298, 300, 302, 307, 308, 309, 310, 313, 91, 92, 93, 94, 95, 96, 256, 264, 265, 267, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 295, 296, 297, 298, 300, 302, 307, 308, 309, 310, 313, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 256, 256, 256, 256, 256, 256, 263, 266, 269, 269, 269, 269, 277, 277, 277, 277, 268, 286, 288, 288, 288, 288, 288, 215, 294, 302, 302, 302, 302, 310, 315, 299, 256, 256, 256, 256, 256, 256, 263, 266, 269, 269, 269, 269, 277, 277, 277, 277, 268, 286, 288, 288, 288, 288, 288, 247, 294, 302, 302, 302, 302, 310, 315, 310]
this has only one value
this[0] has only one value
this->max > this->used
===========================================================================
Dstr.length() const:::EXIT
::collation == orig(::collation)
::collation[] == orig(::collation[])
return == this->used
return == orig(this->used)
this->max == orig(this->max)
this[0] == orig(this[0])
::collation has only one value
::collation[] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 256, 264, 265, 267, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 295, 296, 297, 298, 300, 302, 307, 308, 309, 310, 313, 91, 92, 93, 94, 95, 96, 256, 264, 265, 267, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 295, 296, 297, 298, 300, 302, 307, 308, 309, 310, 313, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 256, 256, 256, 256, 256, 256, 263, 266, 269, 269, 269, 269, 277, 277, 277, 277, 268, 286, 288, 288, 288, 288, 288, 215, 294, 302, 302, 302, 302, 310, 315, 299, 256, 256, 256, 256, 256, 256, 263, 266, 269, 269, 269, 269, 277, 277, 277, 277, 268, 286, 288, 288, 288, 288, 288, 247, 294, 302, 302, 302, 302, 310, 315, 310]
return one of { 13, 14 }
this[0] has only one value
return < this->max
this->theBuffer == orig(this->theBuffer)
===========================================================================
Dstr.lowercase():::ENTER
::collation has only one value
::collation[] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 256, 264, 265, 267, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 295, 296, 297, 298, 300, 302, 307, 308, 309, 310, 313, 91, 92, 93, 94, 95, 96, 256, 264, 265, 267, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 295, 296, 297, 298, 300, 302, 307, 308, 309, 310, 313, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 256, 256, 256, 256, 256, 256, 263, 266, 269, 269, 269, 269, 277, 277, 277, 277, 268, 286, 288, 288, 288, 288, 288, 215, 294, 302, 302, 302, 302, 310, 315, 299, 256, 256, 256, 256, 256, 256, 263, 266, 269, 269, 269, 269, 277, 277, 277, 277, 268, 286, 288, 288, 288, 288, 288, 247, 294, 302, 302, 302, 302, 310, 315, 310]
this has only one value
this->max == 28
this->theBuffer == "Hello, world!\n"
this->used == 14
this[0] has only one value
===========================================================================
Dstr.lowercase():::EXIT
::collation == orig(::collation)
::collation[] == orig(::collation[])
return == this[0]
return == orig(this[0])
return.max == this->max
return.max == orig(this->max)
return.used == this->used
return.used == orig(this->used)
::collation has only one value
::collation[] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 256, 264, 265, 267, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 295, 296, 297, 298, 300, 302, 307, 308, 309, 310, 313, 91, 92, 93, 94, 95, 96, 256, 264, 265, 267, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 295, 296, 297, 298, 300, 302, 307, 308, 309, 310, 313, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 256, 256, 256, 256, 256, 256, 263, 266, 269, 269, 269, 269, 277, 277, 277, 277, 268, 286, 288, 288, 288, 288, 288, 215, 294, 302, 302, 302, 302, 310, 315, 299, 256, 256, 256, 256, 256, 256, 263, 266, 269, 269, 269, 269, 277, 277, 277, 277, 268, 286, 288, 288, 288, 288, 288, 247, 294, 302, 302, 302, 302, 310, 315, 310]
return has only one value
return.max == 28
return.theBuffer == "hello, world!\n"
return.used == 14
return.theBuffer == this->theBuffer
===========================================================================
Dstr.operator+=(char const*):::ENTER
::collation has only one value
::collation[] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 256, 264, 265, 267, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 295, 296, 297, 298, 300, 302, 307, 308, 309, 310, 313, 91, 92, 93, 94, 95, 96, 256, 264, 265, 267, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 295, 296, 297, 298, 300, 302, 307, 308, 309, 310, 313, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 256, 256, 256, 256, 256, 256, 263, 266, 269, 269, 269, 269, 277, 277, 277, 277, 268, 286, 288, 288, 288, 288, 288, 215, 294, 302, 302, 302, 302, 310, 315, 299, 256, 256, 256, 256, 256, 256, 263, 266, 269, 269, 269, 269, 277, 277, 277, 277, 268, 286, 288, 288, 288, 288, 288, 247, 294, 302, 302, 302, 302, 310, 315, 310]
this has only one value
this->max == 14
this->theBuffer == "Hello, world!"
this->used == 13
this[0] has only one value
val == "\n"
===========================================================================
Dstr.operator+=(char const*):::EXIT
::collation == orig(::collation)
::collation[] == orig(::collation[])
return == this[0]
return == orig(this[0])
return.max == this->max
return.used == this->used
return.used == orig(this->max)
::collation has only one value
::collation[] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 256, 264, 265, 267, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 295, 296, 297, 298, 300, 302, 307, 308, 309, 310, 313, 91, 92, 93, 94, 95, 96, 256, 264, 265, 267, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 295, 296, 297, 298, 300, 302, 307, 308, 309, 310, 313, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 256, 256, 256, 256, 256, 256, 263, 266, 269, 269, 269, 269, 277, 277, 277, 277, 268, 286, 288, 288, 288, 288, 288, 215, 294, 302, 302, 302, 302, 310, 315, 299, 256, 256, 256, 256, 256, 256, 263, 266, 269, 269, 269, 269, 277, 277, 277, 277, 268, 286, 288, 288, 288, 288, 288, 247, 294, 302, 302, 302, 302, 310, 315, 310]
return has only one value
return.max == 28
return.theBuffer == "Hello, world!\n"
return.used == 14
return.theBuffer == this->theBuffer
===========================================================================
Dstr.operator[](unsigned int) const:::ENTER
::collation has only one value
::collation[] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 256, 264, 265, 267, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 295, 296, 297, 298, 300, 302, 307, 308, 309, 310, 313, 91, 92, 93, 94, 95, 96, 256, 264, 265, 267, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 295, 296, 297, 298, 300, 302, 307, 308, 309, 310, 313, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 256, 256, 256, 256, 256, 256, 263, 266, 269, 269, 269, 269, 277, 277, 277, 277, 268, 286, 288, 288, 288, 288, 288, 215, 294, 302, 302, 302, 302, 310, 315, 299, 256, 256, 256, 256, 256, 256, 263, 266, 269, 269, 269, 269, 277, 277, 277, 277, 268, 286, 288, 288, 288, 288, 288, 247, 294, 302, 302, 302, 302, 310, 315, 310]
at_index == 0
this has only one value
this->max == 28
this->theBuffer == "Hello, world!\n"
this->used == 14
this[0] has only one value
===========================================================================
Dstr.operator[](unsigned int) const:::EXIT
::collation == orig(::collation)
::collation[] == orig(::collation[])
this->max == orig(this->max)
this->used == orig(this->used)
this[0] == orig(this[0])
::collation has only one value
::collation[] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 256, 264, 265, 267, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 295, 296, 297, 298, 300, 302, 307, 308, 309, 310, 313, 91, 92, 93, 94, 95, 96, 256, 264, 265, 267, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 295, 296, 297, 298, 300, 302, 307, 308, 309, 310, 313, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 256, 256, 256, 256, 256, 256, 263, 266, 269, 269, 269, 269, 277, 277, 277, 277, 268, 286, 288, 288, 288, 288, 288, 215, 294, 302, 302, 302, 302, 310, 315, 299, 256, 256, 256, 256, 256, 256, 263, 266, 269, 269, 269, 269, 277, 277, 277, 277, 268, 286, 288, 288, 288, 288, 288, 247, 294, 302, 302, 302, 302, 310, 315, 310]
return == 72
this->max == 28
this->theBuffer == "Hello, world!\n"
this->used == 14
this[0] has only one value
this->theBuffer == orig(this->theBuffer)
