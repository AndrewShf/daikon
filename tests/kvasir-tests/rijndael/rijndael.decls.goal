input-language C/C++
decl-version 2.0
var-comparability none

ppt ..AddRoundKey():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::shifts
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::shifts[..]
    var-kind array
    enclosing-var ::shifts
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable BC
    var-kind variable
    rep-type int
    dec-type unsigned\_char
    flags is_param 
  variable a
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable a[..]
    var-kind array
    enclosing-var a
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable a[..][0]
    var-kind field [0]
    enclosing-var a[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable rk
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable rk[..]
    var-kind array
    enclosing-var rk
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable rk[..][0]
    var-kind field [0]
    enclosing-var rk[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]

ppt ..AddRoundKey():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::shifts
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::shifts[..]
    var-kind array
    enclosing-var ::shifts
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable BC
    var-kind variable
    rep-type int
    dec-type unsigned\_char
    flags is_param 
  variable a
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable a[..]
    var-kind array
    enclosing-var a
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable a[..][0]
    var-kind field [0]
    enclosing-var a[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable rk
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable rk[..]
    var-kind array
    enclosing-var rk
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable rk[..][0]
    var-kind field [0]
    enclosing-var rk[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]

ppt ..InvMixColumns():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::shifts
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::shifts[..]
    var-kind array
    enclosing-var ::shifts
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable BC
    var-kind variable
    rep-type int
    dec-type unsigned\_char
    flags is_param 
  variable a
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable a[..]
    var-kind array
    enclosing-var a
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable a[..][0]
    var-kind field [0]
    enclosing-var a[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]

ppt ..InvMixColumns():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::shifts
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::shifts[..]
    var-kind array
    enclosing-var ::shifts
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable BC
    var-kind variable
    rep-type int
    dec-type unsigned\_char
    flags is_param 
  variable a
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable a[..]
    var-kind array
    enclosing-var a
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable a[..][0]
    var-kind field [0]
    enclosing-var a[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]

ppt ..MixColumns():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::shifts
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::shifts[..]
    var-kind array
    enclosing-var ::shifts
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable BC
    var-kind variable
    rep-type int
    dec-type unsigned\_char
    flags is_param 
  variable a
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable a[..]
    var-kind array
    enclosing-var a
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable a[..][0]
    var-kind field [0]
    enclosing-var a[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]

ppt ..MixColumns():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::shifts
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::shifts[..]
    var-kind array
    enclosing-var ::shifts
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable BC
    var-kind variable
    rep-type int
    dec-type unsigned\_char
    flags is_param 
  variable a
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable a[..]
    var-kind array
    enclosing-var a
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable a[..][0]
    var-kind field [0]
    enclosing-var a[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]

ppt ..ShiftRows():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::shifts
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::shifts[..]
    var-kind array
    enclosing-var ::shifts
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable BC
    var-kind variable
    rep-type int
    dec-type unsigned\_char
    flags is_param 
  variable a
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable a[..]
    var-kind array
    enclosing-var a
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable a[..][0]
    var-kind field [0]
    enclosing-var a[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable d
    var-kind variable
    rep-type int
    dec-type unsigned\_char
    flags is_param 

ppt ..ShiftRows():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::shifts
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::shifts[..]
    var-kind array
    enclosing-var ::shifts
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable BC
    var-kind variable
    rep-type int
    dec-type unsigned\_char
    flags is_param 
  variable a
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable a[..]
    var-kind array
    enclosing-var a
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable a[..][0]
    var-kind field [0]
    enclosing-var a[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable d
    var-kind variable
    rep-type int
    dec-type unsigned\_char
    flags is_param 

ppt ..Substitution():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::shifts
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::shifts[..]
    var-kind array
    enclosing-var ::shifts
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable BC
    var-kind variable
    rep-type int
    dec-type unsigned\_char
    flags is_param 
  variable a
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable a[..]
    var-kind array
    enclosing-var a
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable a[..][0]
    var-kind field [0]
    enclosing-var a[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable box
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags is_param 
  variable box[..]
    var-kind array
    enclosing-var box
    array 1
    rep-type int[]
    dec-type unsigned\_char[]

ppt ..Substitution():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::shifts
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::shifts[..]
    var-kind array
    enclosing-var ::shifts
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable BC
    var-kind variable
    rep-type int
    dec-type unsigned\_char
    flags is_param 
  variable a
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable a[..]
    var-kind array
    enclosing-var a
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable a[..][0]
    var-kind field [0]
    enclosing-var a[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable box
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags is_param 
  variable box[..]
    var-kind array
    enclosing-var box
    array 1
    rep-type int[]
    dec-type unsigned\_char[]

ppt ..blockDecrypt():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable cipher
    var-kind variable
    rep-type hashcode
    dec-type cipherInstance*
    flags is_param 
  variable cipher[..]
    var-kind array
    enclosing-var cipher
    array 1
    rep-type hashcode[]
    dec-type cipherInstance[]
  variable cipher[..].IV
    var-kind field IV
    enclosing-var cipher[..]
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
    flags non_null 
  variable cipher[..].IV[0]
    var-kind field [0]
    enclosing-var cipher[..].IV
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable cipher[..].blockLen
    var-kind field blockLen
    enclosing-var cipher[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable cipher[..].mode
    var-kind field mode
    enclosing-var cipher[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable input
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags is_param 
  variable inputLen
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable input[..]
    var-kind array
    enclosing-var input
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable key
    var-kind variable
    rep-type hashcode
    dec-type keyInstance*
    flags is_param 
  variable key[..]
    var-kind array
    enclosing-var key
    array 1
    rep-type hashcode[]
    dec-type keyInstance[]
  variable key[..].blockLen
    var-kind field blockLen
    enclosing-var key[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable key[..].direction
    var-kind field direction
    enclosing-var key[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable key[..].keyLen
    var-kind field keyLen
    enclosing-var key[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable key[..].keyMaterial
    var-kind field keyMaterial
    enclosing-var key[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable key[..].keySched
    var-kind field keySched
    enclosing-var key[..]
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
    flags non_null 
  variable key[..].keySched[0]
    var-kind field [0]
    enclosing-var key[..].keySched
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable outBuffer
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags is_param 
  variable outBuffer[..]
    var-kind array
    enclosing-var outBuffer
    array 1
    rep-type int[]
    dec-type unsigned\_char[]

ppt ..blockDecrypt():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable cipher
    var-kind variable
    rep-type hashcode
    dec-type cipherInstance*
    flags is_param 
  variable cipher[..]
    var-kind array
    enclosing-var cipher
    array 1
    rep-type hashcode[]
    dec-type cipherInstance[]
  variable cipher[..].IV
    var-kind field IV
    enclosing-var cipher[..]
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
    flags non_null 
  variable cipher[..].IV[0]
    var-kind field [0]
    enclosing-var cipher[..].IV
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable cipher[..].blockLen
    var-kind field blockLen
    enclosing-var cipher[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable cipher[..].mode
    var-kind field mode
    enclosing-var cipher[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable input
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags is_param 
  variable inputLen
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable input[..]
    var-kind array
    enclosing-var input
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable key
    var-kind variable
    rep-type hashcode
    dec-type keyInstance*
    flags is_param 
  variable key[..]
    var-kind array
    enclosing-var key
    array 1
    rep-type hashcode[]
    dec-type keyInstance[]
  variable key[..].blockLen
    var-kind field blockLen
    enclosing-var key[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable key[..].direction
    var-kind field direction
    enclosing-var key[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable key[..].keyLen
    var-kind field keyLen
    enclosing-var key[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable key[..].keyMaterial
    var-kind field keyMaterial
    enclosing-var key[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable key[..].keySched
    var-kind field keySched
    enclosing-var key[..]
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
    flags non_null 
  variable key[..].keySched[0]
    var-kind field [0]
    enclosing-var key[..].keySched
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable outBuffer
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags is_param 
  variable outBuffer[..]
    var-kind array
    enclosing-var outBuffer
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable return
    var-kind variable
    rep-type int
    dec-type int

ppt ..blockEncrypt():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable cipher
    var-kind variable
    rep-type hashcode
    dec-type cipherInstance*
    flags is_param 
  variable cipher[..]
    var-kind array
    enclosing-var cipher
    array 1
    rep-type hashcode[]
    dec-type cipherInstance[]
  variable cipher[..].IV
    var-kind field IV
    enclosing-var cipher[..]
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
    flags non_null 
  variable cipher[..].IV[0]
    var-kind field [0]
    enclosing-var cipher[..].IV
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable cipher[..].blockLen
    var-kind field blockLen
    enclosing-var cipher[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable cipher[..].mode
    var-kind field mode
    enclosing-var cipher[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable input
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags is_param 
  variable inputLen
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable input[..]
    var-kind array
    enclosing-var input
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable key
    var-kind variable
    rep-type hashcode
    dec-type keyInstance*
    flags is_param 
  variable key[..]
    var-kind array
    enclosing-var key
    array 1
    rep-type hashcode[]
    dec-type keyInstance[]
  variable key[..].blockLen
    var-kind field blockLen
    enclosing-var key[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable key[..].direction
    var-kind field direction
    enclosing-var key[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable key[..].keyLen
    var-kind field keyLen
    enclosing-var key[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable key[..].keyMaterial
    var-kind field keyMaterial
    enclosing-var key[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable key[..].keySched
    var-kind field keySched
    enclosing-var key[..]
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
    flags non_null 
  variable key[..].keySched[0]
    var-kind field [0]
    enclosing-var key[..].keySched
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable outBuffer
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags is_param 
  variable outBuffer[..]
    var-kind array
    enclosing-var outBuffer
    array 1
    rep-type int[]
    dec-type unsigned\_char[]

ppt ..blockEncrypt():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable cipher
    var-kind variable
    rep-type hashcode
    dec-type cipherInstance*
    flags is_param 
  variable cipher[..]
    var-kind array
    enclosing-var cipher
    array 1
    rep-type hashcode[]
    dec-type cipherInstance[]
  variable cipher[..].IV
    var-kind field IV
    enclosing-var cipher[..]
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
    flags non_null 
  variable cipher[..].IV[0]
    var-kind field [0]
    enclosing-var cipher[..].IV
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable cipher[..].blockLen
    var-kind field blockLen
    enclosing-var cipher[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable cipher[..].mode
    var-kind field mode
    enclosing-var cipher[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable input
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags is_param 
  variable inputLen
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable input[..]
    var-kind array
    enclosing-var input
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable key
    var-kind variable
    rep-type hashcode
    dec-type keyInstance*
    flags is_param 
  variable key[..]
    var-kind array
    enclosing-var key
    array 1
    rep-type hashcode[]
    dec-type keyInstance[]
  variable key[..].blockLen
    var-kind field blockLen
    enclosing-var key[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable key[..].direction
    var-kind field direction
    enclosing-var key[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable key[..].keyLen
    var-kind field keyLen
    enclosing-var key[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable key[..].keyMaterial
    var-kind field keyMaterial
    enclosing-var key[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable key[..].keySched
    var-kind field keySched
    enclosing-var key[..]
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
    flags non_null 
  variable key[..].keySched[0]
    var-kind field [0]
    enclosing-var key[..].keySched
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable outBuffer
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags is_param 
  variable outBuffer[..]
    var-kind array
    enclosing-var outBuffer
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable return
    var-kind variable
    rep-type int
    dec-type int

ppt ..cipherInit():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable IV
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable cipher
    var-kind variable
    rep-type hashcode
    dec-type cipherInstance*
    flags is_param 
  variable cipher[..]
    var-kind array
    enclosing-var cipher
    array 1
    rep-type hashcode[]
    dec-type cipherInstance[]
  variable cipher[..].IV
    var-kind field IV
    enclosing-var cipher[..]
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
    flags non_null 
  variable cipher[..].IV[0]
    var-kind field [0]
    enclosing-var cipher[..].IV
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable cipher[..].blockLen
    var-kind field blockLen
    enclosing-var cipher[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable cipher[..].mode
    var-kind field mode
    enclosing-var cipher[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable mode
    var-kind variable
    rep-type int
    dec-type unsigned\_char
    flags is_param 

ppt ..cipherInit():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable IV
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable cipher
    var-kind variable
    rep-type hashcode
    dec-type cipherInstance*
    flags is_param 
  variable cipher[..]
    var-kind array
    enclosing-var cipher
    array 1
    rep-type hashcode[]
    dec-type cipherInstance[]
  variable cipher[..].IV
    var-kind field IV
    enclosing-var cipher[..]
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
    flags non_null 
  variable cipher[..].IV[0]
    var-kind field [0]
    enclosing-var cipher[..].IV
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable cipher[..].blockLen
    var-kind field blockLen
    enclosing-var cipher[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable cipher[..].mode
    var-kind field mode
    enclosing-var cipher[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable mode
    var-kind variable
    rep-type int
    dec-type unsigned\_char
    flags is_param 
  variable return
    var-kind variable
    rep-type int
    dec-type int

ppt ..cipherUpdateRounds():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable cipher
    var-kind variable
    rep-type hashcode
    dec-type cipherInstance*
    flags is_param 
  variable cipher[..]
    var-kind array
    enclosing-var cipher
    array 1
    rep-type hashcode[]
    dec-type cipherInstance[]
  variable cipher[..].IV
    var-kind field IV
    enclosing-var cipher[..]
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
    flags non_null 
  variable cipher[..].IV[0]
    var-kind field [0]
    enclosing-var cipher[..].IV
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable cipher[..].blockLen
    var-kind field blockLen
    enclosing-var cipher[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable cipher[..].mode
    var-kind field mode
    enclosing-var cipher[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable input
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags is_param 
  variable inputLen
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable input[..]
    var-kind array
    enclosing-var input
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable key
    var-kind variable
    rep-type hashcode
    dec-type keyInstance*
    flags is_param 
  variable key[..]
    var-kind array
    enclosing-var key
    array 1
    rep-type hashcode[]
    dec-type keyInstance[]
  variable key[..].blockLen
    var-kind field blockLen
    enclosing-var key[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable key[..].direction
    var-kind field direction
    enclosing-var key[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable key[..].keyLen
    var-kind field keyLen
    enclosing-var key[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable key[..].keyMaterial
    var-kind field keyMaterial
    enclosing-var key[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable key[..].keySched
    var-kind field keySched
    enclosing-var key[..]
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
    flags non_null 
  variable key[..].keySched[0]
    var-kind field [0]
    enclosing-var key[..].keySched
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable outBuffer
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags is_param 
  variable outBuffer[..]
    var-kind array
    enclosing-var outBuffer
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable rounds
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt ..cipherUpdateRounds():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable cipher
    var-kind variable
    rep-type hashcode
    dec-type cipherInstance*
    flags is_param 
  variable cipher[..]
    var-kind array
    enclosing-var cipher
    array 1
    rep-type hashcode[]
    dec-type cipherInstance[]
  variable cipher[..].IV
    var-kind field IV
    enclosing-var cipher[..]
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
    flags non_null 
  variable cipher[..].IV[0]
    var-kind field [0]
    enclosing-var cipher[..].IV
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable cipher[..].blockLen
    var-kind field blockLen
    enclosing-var cipher[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable cipher[..].mode
    var-kind field mode
    enclosing-var cipher[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable input
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags is_param 
  variable inputLen
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable input[..]
    var-kind array
    enclosing-var input
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable key
    var-kind variable
    rep-type hashcode
    dec-type keyInstance*
    flags is_param 
  variable key[..]
    var-kind array
    enclosing-var key
    array 1
    rep-type hashcode[]
    dec-type keyInstance[]
  variable key[..].blockLen
    var-kind field blockLen
    enclosing-var key[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable key[..].direction
    var-kind field direction
    enclosing-var key[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable key[..].keyLen
    var-kind field keyLen
    enclosing-var key[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable key[..].keyMaterial
    var-kind field keyMaterial
    enclosing-var key[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable key[..].keySched
    var-kind field keySched
    enclosing-var key[..]
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
    flags non_null 
  variable key[..].keySched[0]
    var-kind field [0]
    enclosing-var key[..].keySched
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable outBuffer
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags is_param 
  variable outBuffer[..]
    var-kind array
    enclosing-var outBuffer
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable return
    var-kind variable
    rep-type int
    dec-type int
  variable rounds
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt ..main():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]

ppt ..main():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable return
    var-kind variable
    rep-type int
    dec-type int

ppt ..makeKey():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable direction
    var-kind variable
    rep-type int
    dec-type unsigned\_char
    flags is_param 
  variable key
    var-kind variable
    rep-type hashcode
    dec-type keyInstance*
    flags is_param 
  variable keyLen
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable keyMaterial
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable key[..]
    var-kind array
    enclosing-var key
    array 1
    rep-type hashcode[]
    dec-type keyInstance[]
  variable key[..].blockLen
    var-kind field blockLen
    enclosing-var key[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable key[..].direction
    var-kind field direction
    enclosing-var key[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable key[..].keyLen
    var-kind field keyLen
    enclosing-var key[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable key[..].keyMaterial
    var-kind field keyMaterial
    enclosing-var key[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable key[..].keySched
    var-kind field keySched
    enclosing-var key[..]
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
    flags non_null 
  variable key[..].keySched[0]
    var-kind field [0]
    enclosing-var key[..].keySched
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]

ppt ..makeKey():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable direction
    var-kind variable
    rep-type int
    dec-type unsigned\_char
    flags is_param 
  variable key
    var-kind variable
    rep-type hashcode
    dec-type keyInstance*
    flags is_param 
  variable keyLen
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable keyMaterial
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable key[..]
    var-kind array
    enclosing-var key
    array 1
    rep-type hashcode[]
    dec-type keyInstance[]
  variable key[..].blockLen
    var-kind field blockLen
    enclosing-var key[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable key[..].direction
    var-kind field direction
    enclosing-var key[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable key[..].keyLen
    var-kind field keyLen
    enclosing-var key[..]
    array 1
    rep-type int[]
    dec-type int[]
  variable key[..].keyMaterial
    var-kind field keyMaterial
    enclosing-var key[..]
    reference-type offset
    array 1
    rep-type string[]
    dec-type char*[]
  variable key[..].keySched
    var-kind field keySched
    enclosing-var key[..]
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
    flags non_null 
  variable key[..].keySched[0]
    var-kind field [0]
    enclosing-var key[..].keySched
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable return
    var-kind variable
    rep-type int
    dec-type int

ppt ..mul():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::shifts
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::shifts[..]
    var-kind array
    enclosing-var ::shifts
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable a
    var-kind variable
    rep-type int
    dec-type unsigned\_char
    flags is_param 
  variable b
    var-kind variable
    rep-type int
    dec-type unsigned\_char
    flags is_param 

ppt ..mul():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::shifts
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::shifts[..]
    var-kind array
    enclosing-var ::shifts
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable a
    var-kind variable
    rep-type int
    dec-type unsigned\_char
    flags is_param 
  variable b
    var-kind variable
    rep-type int
    dec-type unsigned\_char
    flags is_param 
  variable return
    var-kind variable
    rep-type int
    dec-type unsigned\_char

ppt ..rijndaelDecrypt():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::shifts
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::shifts[..]
    var-kind array
    enclosing-var ::shifts
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable a
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable a[..]
    var-kind array
    enclosing-var a
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable a[..][0]
    var-kind field [0]
    enclosing-var a[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable blockBits
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable keyBits
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable rk
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable rk[..]
    var-kind array
    enclosing-var rk
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable rk[..][0]
    var-kind field [0]
    enclosing-var rk[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]

ppt ..rijndaelDecrypt():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::shifts
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::shifts[..]
    var-kind array
    enclosing-var ::shifts
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable a
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable a[..]
    var-kind array
    enclosing-var a
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable a[..][0]
    var-kind field [0]
    enclosing-var a[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable blockBits
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable keyBits
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable return
    var-kind variable
    rep-type int
    dec-type int
  variable rk
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable rk[..]
    var-kind array
    enclosing-var rk
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable rk[..][0]
    var-kind field [0]
    enclosing-var rk[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]

ppt ..rijndaelDecryptRound():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::shifts
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::shifts[..]
    var-kind array
    enclosing-var ::shifts
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable a
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable a[..]
    var-kind array
    enclosing-var a
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable a[..][0]
    var-kind field [0]
    enclosing-var a[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable blockBits
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable keyBits
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable rk
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable rk[..]
    var-kind array
    enclosing-var rk
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable rk[..][0]
    var-kind field [0]
    enclosing-var rk[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable rounds
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt ..rijndaelDecryptRound():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::shifts
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::shifts[..]
    var-kind array
    enclosing-var ::shifts
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable a
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable a[..]
    var-kind array
    enclosing-var a
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable a[..][0]
    var-kind field [0]
    enclosing-var a[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable blockBits
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable keyBits
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable return
    var-kind variable
    rep-type int
    dec-type int
  variable rk
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable rk[..]
    var-kind array
    enclosing-var rk
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable rk[..][0]
    var-kind field [0]
    enclosing-var rk[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable rounds
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt ..rijndaelEncrypt():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::shifts
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::shifts[..]
    var-kind array
    enclosing-var ::shifts
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable a
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable a[..]
    var-kind array
    enclosing-var a
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable a[..][0]
    var-kind field [0]
    enclosing-var a[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable blockBits
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable keyBits
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable rk
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable rk[..]
    var-kind array
    enclosing-var rk
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable rk[..][0]
    var-kind field [0]
    enclosing-var rk[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]

ppt ..rijndaelEncrypt():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::shifts
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::shifts[..]
    var-kind array
    enclosing-var ::shifts
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable a
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable a[..]
    var-kind array
    enclosing-var a
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable a[..][0]
    var-kind field [0]
    enclosing-var a[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable blockBits
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable keyBits
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable return
    var-kind variable
    rep-type int
    dec-type int
  variable rk
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable rk[..]
    var-kind array
    enclosing-var rk
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable rk[..][0]
    var-kind field [0]
    enclosing-var rk[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]

ppt ..rijndaelEncryptRound():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::shifts
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::shifts[..]
    var-kind array
    enclosing-var ::shifts
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable a
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable a[..]
    var-kind array
    enclosing-var a
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable a[..][0]
    var-kind field [0]
    enclosing-var a[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable blockBits
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable keyBits
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable rk
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable rk[..]
    var-kind array
    enclosing-var rk
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable rk[..][0]
    var-kind field [0]
    enclosing-var rk[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable rounds
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt ..rijndaelEncryptRound():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::shifts
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::shifts[..]
    var-kind array
    enclosing-var ::shifts
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable a
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable a[..]
    var-kind array
    enclosing-var a
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable a[..][0]
    var-kind field [0]
    enclosing-var a[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable blockBits
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable keyBits
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable return
    var-kind variable
    rep-type int
    dec-type int
  variable rk
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable rk[..]
    var-kind array
    enclosing-var rk
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable rk[..][0]
    var-kind field [0]
    enclosing-var rk[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable rounds
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt ..rijndaelKeySched():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::shifts
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::shifts[..]
    var-kind array
    enclosing-var ::shifts
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable W
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable W[..]
    var-kind array
    enclosing-var W
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable W[..][0]
    var-kind field [0]
    enclosing-var W[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable blockBits
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable k
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable k[..]
    var-kind array
    enclosing-var k
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable k[..][0]
    var-kind field [0]
    enclosing-var k[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable keyBits
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt ..rijndaelKeySched():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ::shifts
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::shifts[..]
    var-kind array
    enclosing-var ::shifts
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable W
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable W[..]
    var-kind array
    enclosing-var W
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable W[..][0]
    var-kind field [0]
    enclosing-var W[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable blockBits
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable k
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char**
    flags is_param 
  variable k[..]
    var-kind array
    enclosing-var k
    array 1
    rep-type hashcode[]
    dec-type unsigned\_char*[]
  variable k[..][0]
    var-kind field [0]
    enclosing-var k[..]
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable keyBits
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable return
    var-kind variable
    rep-type int
    dec-type int

ppt rijndaeltest_ref.c.HexToBin():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable binBlock
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags is_param 
  variable binBlock[..]
    var-kind array
    enclosing-var binBlock
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable blockLen
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable hexBlock
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags is_param 
  variable hexBlock[..]
    var-kind array
    enclosing-var hexBlock
    array 1
    rep-type int[]
    dec-type unsigned\_char[]

ppt rijndaeltest_ref.c.HexToBin():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable binBlock
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags is_param 
  variable binBlock[..]
    var-kind array
    enclosing-var binBlock
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable blockLen
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable hexBlock
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags is_param 
  variable hexBlock[..]
    var-kind array
    enclosing-var hexBlock
    array 1
    rep-type int[]
    dec-type unsigned\_char[]

ppt rijndaeltest_ref.c.blockPrint():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable block
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags is_param 
  variable blockBits
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable block[..]
    var-kind array
    enclosing-var block
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable fp
    var-kind variable
    rep-type hashcode
    dec-type void*
    flags is_param 
  variable fp[..]
    var-kind array
    enclosing-var fp
    array 1
    rep-type hashcode[]
    dec-type void[]
  variable tag
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt rijndaeltest_ref.c.blockPrint():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable block
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags is_param 
  variable blockBits
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable block[..]
    var-kind array
    enclosing-var block
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable fp
    var-kind variable
    rep-type hashcode
    dec-type void*
    flags is_param 
  variable fp[..]
    var-kind array
    enclosing-var fp
    array 1
    rep-type hashcode[]
    dec-type void[]
  variable tag
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt rijndaeltest_ref.c.makeKATs():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ivFile
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable tblFile
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable vkFile
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable vtFile
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt rijndaeltest_ref.c.makeKATs():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable ivFile
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable tblFile
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable vkFile
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable vtFile
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt rijndaeltest_ref.c.makeMCTs():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable cbcDecryptionFile
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable cbcEncryptionFile
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable ecbDecryptionFile
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable ecbEncryptionFile
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt rijndaeltest_ref.c.makeMCTs():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable cbcDecryptionFile
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable cbcEncryptionFile
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable ecbDecryptionFile
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable ecbEncryptionFile
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 

ppt rijndaeltest_ref.c.rijndaelCBC_MCT():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable blockLength
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable direction
    var-kind variable
    rep-type int
    dec-type unsigned\_char
    flags is_param 
  variable fp
    var-kind variable
    rep-type hashcode
    dec-type void*
    flags is_param 
  variable fp[..]
    var-kind array
    enclosing-var fp
    array 1
    rep-type hashcode[]
    dec-type void[]
  variable initBlock
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable initIV
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable initKey
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable keyLength
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt rijndaeltest_ref.c.rijndaelCBC_MCT():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable blockLength
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable direction
    var-kind variable
    rep-type int
    dec-type unsigned\_char
    flags is_param 
  variable fp
    var-kind variable
    rep-type hashcode
    dec-type void*
    flags is_param 
  variable fp[..]
    var-kind array
    enclosing-var fp
    array 1
    rep-type hashcode[]
    dec-type void[]
  variable initBlock
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable initIV
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable initKey
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable keyLength
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt rijndaeltest_ref.c.rijndaelECB_MCT():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable blockLength
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable direction
    var-kind variable
    rep-type int
    dec-type unsigned\_char
    flags is_param 
  variable fp
    var-kind variable
    rep-type hashcode
    dec-type void*
    flags is_param 
  variable fp[..]
    var-kind array
    enclosing-var fp
    array 1
    rep-type hashcode[]
    dec-type void[]
  variable initBlock
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable initKey
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable keyLength
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt rijndaeltest_ref.c.rijndaelECB_MCT():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable blockLength
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable direction
    var-kind variable
    rep-type int
    dec-type unsigned\_char
    flags is_param 
  variable fp
    var-kind variable
    rep-type hashcode
    dec-type void*
    flags is_param 
  variable fp[..]
    var-kind array
    enclosing-var fp
    array 1
    rep-type hashcode[]
    dec-type void[]
  variable initBlock
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable initKey
    var-kind variable
    rep-type string
    dec-type char*
    flags is_param 
  variable keyLength
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt rijndaeltest_ref.c.rijndaelIVKAT():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable blockLength
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable fp
    var-kind variable
    rep-type hashcode
    dec-type void*
    flags is_param 
  variable fp[..]
    var-kind array
    enclosing-var fp
    array 1
    rep-type hashcode[]
    dec-type void[]
  variable keyLength
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt rijndaeltest_ref.c.rijndaelIVKAT():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable blockLength
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable fp
    var-kind variable
    rep-type hashcode
    dec-type void*
    flags is_param 
  variable fp[..]
    var-kind array
    enclosing-var fp
    array 1
    rep-type hashcode[]
    dec-type void[]
  variable keyLength
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt rijndaeltest_ref.c.rijndaelTKAT():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable blockLength
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable fp
    var-kind variable
    rep-type hashcode
    dec-type void*
    flags is_param 
  variable fp[..]
    var-kind array
    enclosing-var fp
    array 1
    rep-type hashcode[]
    dec-type void[]
  variable in
    var-kind variable
    rep-type hashcode
    dec-type void*
    flags is_param 
  variable in[..]
    var-kind array
    enclosing-var in
    array 1
    rep-type hashcode[]
    dec-type void[]
  variable keyLength
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt rijndaeltest_ref.c.rijndaelTKAT():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable blockLength
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable fp
    var-kind variable
    rep-type hashcode
    dec-type void*
    flags is_param 
  variable fp[..]
    var-kind array
    enclosing-var fp
    array 1
    rep-type hashcode[]
    dec-type void[]
  variable in
    var-kind variable
    rep-type hashcode
    dec-type void*
    flags is_param 
  variable in[..]
    var-kind array
    enclosing-var in
    array 1
    rep-type hashcode[]
    dec-type void[]
  variable keyLength
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt rijndaeltest_ref.c.rijndaelVKKAT():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable blockLength
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable fp
    var-kind variable
    rep-type hashcode
    dec-type void*
    flags is_param 
  variable fp[..]
    var-kind array
    enclosing-var fp
    array 1
    rep-type hashcode[]
    dec-type void[]
  variable keyLength
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt rijndaeltest_ref.c.rijndaelVKKAT():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable blockLength
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable fp
    var-kind variable
    rep-type hashcode
    dec-type void*
    flags is_param 
  variable fp[..]
    var-kind array
    enclosing-var fp
    array 1
    rep-type hashcode[]
    dec-type void[]
  variable keyLength
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt rijndaeltest_ref.c.rijndaelVTKAT():::ENTER
  ppt-type enter
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable blockLength
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable fp
    var-kind variable
    rep-type hashcode
    dec-type void*
    flags is_param 
  variable fp[..]
    var-kind array
    enclosing-var fp
    array 1
    rep-type hashcode[]
    dec-type void[]
  variable keyLength
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

ppt rijndaeltest_ref.c.rijndaelVTKAT():::EXIT0
  ppt-type subexit
  variable ::Alogtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Alogtable[..]
    var-kind array
    enclosing-var ::Alogtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Logtable
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Logtable[..]
    var-kind array
    enclosing-var ::Logtable
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::S
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::S[..]
    var-kind array
    enclosing-var ::S
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::Si
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::Si[..]
    var-kind array
    enclosing-var ::Si
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::iG
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_char*
    flags non_null 
  variable ::iG[..]
    var-kind array
    enclosing-var ::iG
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_char[]
  variable ::rcon
    var-kind variable
    rep-type hashcode
    dec-type unsigned\_long*
    flags non_null 
  variable ::rcon[..]
    var-kind array
    enclosing-var ::rcon
    reference-type offset
    array 1
    rep-type int[]
    dec-type unsigned\_long[]
  variable blockLength
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 
  variable fp
    var-kind variable
    rep-type hashcode
    dec-type void*
    flags is_param 
  variable fp[..]
    var-kind array
    enclosing-var fp
    array 1
    rep-type hashcode[]
    dec-type void[]
  variable keyLength
    var-kind variable
    rep-type int
    dec-type int
    flags is_param 

